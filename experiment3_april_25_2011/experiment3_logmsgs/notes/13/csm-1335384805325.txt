1335384805332: *** Opened log file for writing ***
1335384805332: Android build: SAMSUNG-SGH-I717
1335384805333: NET_NAME set to: eth0
1335384805333: starting Mux with id = -1
1335384805334: areButtonsEnabled --> true
1335384805335: *** Application started ***
1335384805336: HI I'm in ONRESUME()
1335384805339: SAMPLING_DISTANCE : 1, SAMPLING_DURATION : 1000
1335384805334: mux: Mux.java run() beginning -------------
1335384805348: mux: Mux.java's nodeId is5020
1335384805348: mux: starting vncDaemon ........
1335384805356: mux: vncDaemon started
1335384805351: Started VCoreDaemon with parameters maxRx = 5 , maxRY= 1
1335384805356: VCoreDaemon.java onStart() ....
1335384805356: started, mId = 5020
1335384805357: VCoreDaemon.java inside stateTransition ..........
1335384805357: removing leaderRequestRetryR because I'm doing a stateTransition
1335384805357: ..... VCoreDaemon.java out of bounds
1335384805357: region (-1, -1) out of bounds, dormant
1335384805357: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335384807268: Received UDP payload: 446
1335384807569: Received UDP payload: 446
1335384807850: Received UDP payload: 446
1335384808151: Received UDP payload: 446
1335384809416: Received UDP payload: 22318
1335384809432: ignoring leader_reply that's not for me
1335384812422: Received UDP payload: 446
1335384817407: Received UDP payload: 446
1335384822421: Received UDP payload: 446
1335384827394: Received UDP payload: 446
1335384832390: Received UDP payload: 446
1335384837405: Received UDP payload: 446
1335384840253: .......... GPS onLocationChanged ...... 
1335384840255: Loc = Location[mProvider=gps,mTime=1335384841000,mLatitude=42.3580782,mLongitude=-71.09284484,mHasAltitude=true,mAltitude=-15.899999618530273,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=11.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (-1,-1)
1335384840257: GPS x/long:-71.09284484, GPS y/lat: 42.3580782. Region width in x: 20.0
1335384840258: location PINPOINTS to region = 1.0, previous -1
1335384840259: Hysteresis is 0.0
1335384840259: location CHANGED TO NEW region = (1,0) from region = (-1,-1)
1335384840262: moving from region (-1,-1), to (1,0)
1335384840262: VCoreDaemon.java inside stateTransition ..........
1335384840263: removing leaderRequestRetryR because I'm doing a stateTransition
1335384840264: ..... VCoreDaemon.java targetState = JOINING
1335384840265: posting leaderRequestRetryR because I'm joining
1335384840265: sending LEADER_REQUEST
1335384840265: inside sendPacket(Packet p)
1335384840266: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335384840278: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335384840284: Sending UDP payload: 446
1335384840566: sending LEADER_REQUEST
1335384840566: inside sendPacket(Packet p)
1335384840567: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335384840569: Sending UDP payload: 446
1335384840867: sending LEADER_REQUEST
1335384840868: inside sendPacket(Packet p)
1335384840868: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335384840872: Sending UDP payload: 446
1335384841169: sending LEADER_REQUEST
1335384841170: inside sendPacket(Packet p)
1335384841170: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335384841175: Sending UDP payload: 446
1335384841270: .......... GPS onLocationChanged ...... 
1335384841274: Loc = Location[mProvider=gps,mTime=1335384842000,mLatitude=42.35807464,mLongitude=-71.09285969,mHasAltitude=true,mAltitude=-16.899999618530273,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=11.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384841277: GPS x/long:-71.09285969, GPS y/lat: 42.35807464. Region width in x: 20.0
1335384841278: inside leaderRequestTimeoutR beacuse I didn't hear a leader_reply and I'm removing leaderRequestRetryR because leader_request timed out
1335384841279: inside leaderRequestTimeoutR and my state was JOINING, so I'll try to stateTransition to LEADER
1335384841279: VCoreDaemon.java inside stateTransition ..........
1335384841280: removing leaderRequestRetryR because I'm doing a stateTransition
1335384841280: ..... VCoreDaemon.java targetState = LEADER
1335384841280: trying to take leadership to the cloud
1335384841311: location PINPOINTS to region = 1.0, previous 1
1335384841312: Hysteresis is 0.0
1335384841313: stay at region 1
1335384841738: Received UDP payload: 22335
1335384841842: cloud rejected leadership request or request failed, wait to retry
1335384841843: removing leaderRequestRetryR because heard Packet.Leader_reply
1335384841844: heard LEADER_REPLY from 5011
1335384841844: VCoreDaemon.java inside stateTransition ..........
1335384841846: removing leaderRequestRetryR because I'm doing a stateTransition
1335384841846: ..... VCoreDaemon.java targetState = NONLEADER
1335384841846: now NONLEADER (id=5020) following LEADER (id=5011) in (1,0)
1335384841847: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335384841938: Received UDP payload: 22335
1335384841941: ignoring leader_reply that's not for me
1335384842229: .......... GPS onLocationChanged ...... 
1335384842230: Loc = Location[mProvider=gps,mTime=1335384843000,mLatitude=42.35808233,mLongitude=-71.09286691,mHasAltitude=true,mAltitude=-17.399999618530273,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=13.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384842230: GPS x/long:-71.09286691, GPS y/lat: 42.35808233. Region width in x: 20.0
1335384842230: location PINPOINTS to region = 1.0, previous 1
1335384842231: Hysteresis is 0.0
1335384842231: stay at region 1
1335384842390: Received UDP payload: 22335
1335384842396: ignoring leader_reply that's not for me
1335384842706: Received UDP payload: 22335
1335384842712: ignoring leader_reply that's not for me
1335384842713: Received UDP payload: 446
1335384843260: .......... GPS onLocationChanged ...... 
1335384843264: Loc = Location[mProvider=gps,mTime=1335384844000,mLatitude=42.35807785,mLongitude=-71.092879,mHasAltitude=true,mAltitude=-17.700000762939453,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=12.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384843266: GPS x/long:-71.092879, GPS y/lat: 42.35807785. Region width in x: 20.0
1335384843267: location PINPOINTS to region = 1.0, previous 1
1335384843272: Hysteresis is 0.0
1335384843274: stay at region 1
1335384845254: .......... GPS onLocationChanged ...... 
1335384845257: Loc = Location[mProvider=gps,mTime=1335384846000,mLatitude=42.3580855,mLongitude=-71.09288978,mHasAltitude=true,mAltitude=-15.300000190734863,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=10.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384845262: GPS x/long:-71.09288978, GPS y/lat: 42.3580855. Region width in x: 20.0
1335384845263: location PINPOINTS to region = 1.0, previous 1
1335384845265: Hysteresis is 0.0
1335384845265: stay at region 1
1335384846257: .......... GPS onLocationChanged ...... 
1335384846260: Loc = Location[mProvider=gps,mTime=1335384847000,mLatitude=42.35809501,mLongitude=-71.09288629,mHasAltitude=true,mAltitude=-17.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=9.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384846266: GPS x/long:-71.09288629, GPS y/lat: 42.35809501. Region width in x: 20.0
1335384846268: location PINPOINTS to region = 1.0, previous 1
1335384846269: Hysteresis is 0.0
1335384846270: stay at region 1
1335384847547: Received UDP payload: 446
1335384849254: .......... GPS onLocationChanged ...... 
1335384849257: Loc = Location[mProvider=gps,mTime=1335384850000,mLatitude=42.35808686,mLongitude=-71.09290183,mHasAltitude=true,mAltitude=-11.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=7.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384849260: GPS x/long:-71.09290183, GPS y/lat: 42.35808686. Region width in x: 20.0
1335384849261: location PINPOINTS to region = 1.0, previous 1
1335384849262: Hysteresis is 0.0
1335384849268: stay at region 1
1335384850260: .......... GPS onLocationChanged ...... 
1335384850263: Loc = Location[mProvider=gps,mTime=1335384851000,mLatitude=42.35802504,mLongitude=-71.09277722,mHasAltitude=true,mAltitude=-46.900001525878906,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384850265: GPS x/long:-71.09277722, GPS y/lat: 42.35802504. Region width in x: 20.0
1335384850282: location PINPOINTS to region = 1.0, previous 1
1335384850286: Hysteresis is 0.0
1335384850287: stay at region 1
1335384852261: .......... GPS onLocationChanged ...... 
1335384852266: Loc = Location[mProvider=gps,mTime=1335384853000,mLatitude=42.3580291,mLongitude=-71.09279097,mHasAltitude=true,mAltitude=-42.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384852266: GPS x/long:-71.09279097, GPS y/lat: 42.3580291. Region width in x: 20.0
1335384852266: location PINPOINTS to region = 1.0, previous 1
1335384852267: Hysteresis is 0.0
1335384852267: stay at region 1
1335384852397: Received UDP payload: 446
1335384853253: .......... GPS onLocationChanged ...... 
1335384853253: Loc = Location[mProvider=gps,mTime=1335384854000,mLatitude=42.35802664,mLongitude=-71.09280616,mHasAltitude=true,mAltitude=-40.400001525878906,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384853254: GPS x/long:-71.09280616, GPS y/lat: 42.35802664. Region width in x: 20.0
1335384853254: location PINPOINTS to region = 1.0, previous 1
1335384853254: Hysteresis is 0.0
1335384853254: stay at region 1
1335384854258: .......... GPS onLocationChanged ...... 
1335384854260: Loc = Location[mProvider=gps,mTime=1335384855000,mLatitude=42.35802924,mLongitude=-71.09282995,mHasAltitude=true,mAltitude=-36.5,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384854262: GPS x/long:-71.09282995, GPS y/lat: 42.35802924. Region width in x: 20.0
1335384854264: location PINPOINTS to region = 1.0, previous 1
1335384854265: Hysteresis is 0.0
1335384854265: stay at region 1
1335384857257: .......... GPS onLocationChanged ...... 
1335384857257: Loc = Location[mProvider=gps,mTime=1335384858000,mLatitude=42.35803438,mLongitude=-71.09284085,mHasAltitude=true,mAltitude=-30.399999618530273,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384857258: GPS x/long:-71.09284085, GPS y/lat: 42.35803438. Region width in x: 20.0
1335384857258: location PINPOINTS to region = 1.0, previous 1
1335384857258: Hysteresis is 0.0
1335384857258: stay at region 1
1335384857405: Received UDP payload: 446
1335384861257: .......... GPS onLocationChanged ...... 
1335384861260: Loc = Location[mProvider=gps,mTime=1335384862000,mLatitude=42.35803419,mLongitude=-71.09286193,mHasAltitude=true,mAltitude=-27.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384861261: GPS x/long:-71.09286193, GPS y/lat: 42.35803419. Region width in x: 20.0
1335384861262: location PINPOINTS to region = 1.0, previous 1
1335384861263: Hysteresis is 0.0
1335384861264: stay at region 1
1335384862402: Received UDP payload: 446
1335384867230: .......... GPS onLocationChanged ...... 
1335384867231: Loc = Location[mProvider=gps,mTime=1335384868000,mLatitude=42.35802722,mLongitude=-71.09288576,mHasAltitude=true,mAltitude=-25.700000762939453,mHasSpeed=true,mSpeed=0.25,mHasBearing=true,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384867232: GPS x/long:-71.09288576, GPS y/lat: 42.35802722. Region width in x: 20.0
1335384867232: location PINPOINTS to region = 1.0, previous 1
1335384867232: Hysteresis is 0.0
1335384867232: stay at region 1
1335384867420: Received UDP payload: 446
1335384872399: Received UDP payload: 446
1335384875258: .......... GPS onLocationChanged ...... 
1335384875261: Loc = Location[mProvider=gps,mTime=1335384876000,mLatitude=42.35802366,mLongitude=-71.09287167,mHasAltitude=true,mAltitude=-25.399999618530273,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384875263: GPS x/long:-71.09287167, GPS y/lat: 42.35802366. Region width in x: 20.0
1335384875266: location PINPOINTS to region = 1.0, previous 1
1335384875266: Hysteresis is 0.0
1335384875267: stay at region 1
1335384877451: Received UDP payload: 446
1335384880264: .......... GPS onLocationChanged ...... 
1335384880267: Loc = Location[mProvider=gps,mTime=1335384881000,mLatitude=42.35801398,mLongitude=-71.09287279,mHasAltitude=true,mAltitude=-27.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384880269: GPS x/long:-71.09287279, GPS y/lat: 42.35801398. Region width in x: 20.0
1335384880269: location PINPOINTS to region = 1.0, previous 1
1335384880270: Hysteresis is 0.0
1335384880271: stay at region 1
1335384881910: Received UDP payload: 446
1335384882138: Received UDP payload: 446
1335384882303: Received UDP payload: 446
1335384882629: Received UDP payload: 446
1335384882895: Received UDP payload: 446
1335384882912: Received UDP payload: 446
1335384883208: Received UDP payload: 22335
1335384883219: Received UDP payload: 446
1335384883402: Received UDP payload: 446
1335384884066: Received UDP payload: 22318
1335384884077: ignoring leader_reply that's not for me
1335384887159: Received UDP payload: 22335
1335384887561: Received UDP payload: 446
1335384887795: Received UDP payload: 22335
1335384887861: Received UDP payload: 446
1335384892426: Received UDP payload: 446
1335384892837: Received UDP payload: 446
1335384897565: Received UDP payload: 446
1335384902435: Received UDP payload: 446
1335384903502: Received UDP payload: 446
1335384903550: Received UDP payload: 463
1335384905122: Received UDP payload: 446
1335384905442: Received UDP payload: 446
1335384905715: Received UDP payload: 22335
1335384905756: Received UDP payload: 446
1335384906162: Received UDP payload: 22335
1335384907628: Received UDP payload: 22335
1335384907664: Received UDP payload: 446
1335384909911: Received UDP payload: 446
1335384911009: Received UDP payload: 22335
1335384912478: Received UDP payload: 446
1335384917566: Received UDP payload: 446
1335384918316: Received UDP payload: 446
1335384918612: Received UDP payload: 446
1335384920461: Received UDP payload: 446
1335384920937: Received UDP payload: 22335
1335384922508: Received UDP payload: 22335
1335384922942: Received UDP payload: 22335
1335384922947: Received UDP payload: 446
1335384922984: Received UDP payload: 446
1335384928061: Received UDP payload: 446
1335384929557: Received UDP payload: 446
1335384938608: Received UDP payload: 446
1335384941207: Received UDP payload: 446
1335384941222: Received UDP payload: 446
1335384942450: Received UDP payload: 446
1335384942996: Received UDP payload: 446
1335384951410: Received UDP payload: 446
1335384952691: Received UDP payload: 446
1335384956326: Received UDP payload: 446
1335384956338: Received UDP payload: 446
1335384956957: Received UDP payload: 446
1335384956995: Received UDP payload: 446
1335384957005: Received UDP payload: 446
1335384957018: Received UDP payload: 446
1335384958105: Received UDP payload: 446
1335384958217: Received UDP payload: 446
1335384958230: Received UDP payload: 446
1335384959406: Received UDP payload: 446
1335384960294: Received UDP payload: 463
1335384961974: Received UDP payload: 446
1335384971770: Received UDP payload: 22335
1335384971778: Received UDP payload: 446
1335384971783: Received UDP payload: 446
1335384972452: Received UDP payload: 446
1335384975266: .......... GPS onLocationChanged ...... 
1335384975267: Loc = Location[mProvider=gps,mTime=1335384976000,mLatitude=42.3580123,mLongitude=-71.09285964,mHasAltitude=true,mAltitude=-26.399999618530273,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384975267: GPS x/long:-71.09285964, GPS y/lat: 42.3580123. Region width in x: 20.0
1335384975267: location PINPOINTS to region = 1.0, previous 1
1335384975267: Hysteresis is 0.0
1335384975268: stay at region 1
1335384976258: .......... GPS onLocationChanged ...... 
1335384976260: Loc = Location[mProvider=gps,mTime=1335384977000,mLatitude=42.35801457,mLongitude=-71.09284473,mHasAltitude=true,mAltitude=-26.200000762939453,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384976261: GPS x/long:-71.09284473, GPS y/lat: 42.35801457. Region width in x: 20.0
1335384976262: location PINPOINTS to region = 1.0, previous 1
1335384976263: Hysteresis is 0.0
1335384976264: stay at region 1
1335384977263: .......... GPS onLocationChanged ...... 
1335384977265: Loc = Location[mProvider=gps,mTime=1335384978000,mLatitude=42.35802002,mLongitude=-71.09283141,mHasAltitude=true,mAltitude=-25.5,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384977268: GPS x/long:-71.09283141, GPS y/lat: 42.35802002. Region width in x: 20.0
1335384977269: location PINPOINTS to region = 1.0, previous 1
1335384977269: Hysteresis is 0.0
1335384977269: stay at region 1
1335384981266: .......... GPS onLocationChanged ...... 
1335384981266: Loc = Location[mProvider=gps,mTime=1335384982000,mLatitude=42.35803081,mLongitude=-71.09283217,mHasAltitude=true,mAltitude=-23.5,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384981267: GPS x/long:-71.09283217, GPS y/lat: 42.35803081. Region width in x: 20.0
1335384981267: location PINPOINTS to region = 1.0, previous 1
1335384981267: Hysteresis is 0.0
1335384981267: stay at region 1
1335384983266: .......... GPS onLocationChanged ...... 
1335384983267: Loc = Location[mProvider=gps,mTime=1335384984000,mLatitude=42.35803249,mLongitude=-71.0928189,mHasAltitude=true,mAltitude=-23.5,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335384983267: GPS x/long:-71.0928189, GPS y/lat: 42.35803249. Region width in x: 20.0
1335384983267: location PINPOINTS to region = 1.0, previous 1
1335384983267: Hysteresis is 0.0
1335384983268: stay at region 1
1335384990448: Missed 3 HEARTBEATS from LEADER, going to JOINING.
1335384990448: VCoreDaemon.java inside stateTransition ..........
1335384990448: removing leaderRequestRetryR because I'm doing a stateTransition
1335384990448: ..... VCoreDaemon.java targetState = JOINING
1335384990448: posting leaderRequestRetryR because I'm joining
1335384990448: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335384990448: sending LEADER_REQUEST
1335384990448: inside sendPacket(Packet p)
1335384990449: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335384990450: Sending UDP payload: 446
1335384990749: sending LEADER_REQUEST
1335384990749: inside sendPacket(Packet p)
1335384990750: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335384990752: Sending UDP payload: 446
1335384991050: sending LEADER_REQUEST
1335384991051: inside sendPacket(Packet p)
1335384991051: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335384991052: Sending UDP payload: 446
1335384991351: sending LEADER_REQUEST
1335384991351: inside sendPacket(Packet p)
1335384991351: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335384991353: Sending UDP payload: 446
1335384991449: inside leaderRequestTimeoutR beacuse I didn't hear a leader_reply and I'm removing leaderRequestRetryR because leader_request timed out
1335384991449: inside leaderRequestTimeoutR and my state was JOINING, so I'll try to stateTransition to LEADER
1335384991449: VCoreDaemon.java inside stateTransition ..........
1335384991449: removing leaderRequestRetryR because I'm doing a stateTransition
1335384991450: ..... VCoreDaemon.java targetState = LEADER
1335384991450: trying to take leadership to the cloud
1335384991581: cloud rejected leadership request or request failed, wait to retry
1335384998853: Received UDP payload: 446
1335384998857: Received UDP payload: 446
1335384998861: Received UDP payload: 446
1335384998895: Received UDP payload: 446
1335385011262: .......... GPS onLocationChanged ...... 
1335385011265: Loc = Location[mProvider=gps,mTime=1335385012000,mLatitude=42.35803188,mLongitude=-71.09283639,mHasAltitude=true,mAltitude=-22.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385011268: GPS x/long:-71.09283639, GPS y/lat: 42.35803188. Region width in x: 20.0
1335385011268: location PINPOINTS to region = 1.0, previous 1
1335385011269: Hysteresis is 0.0
1335385011269: stay at region 1
1335385015266: .......... GPS onLocationChanged ...... 
1335385015267: Loc = Location[mProvider=gps,mTime=1335385016000,mLatitude=42.3580302,mLongitude=-71.09285252,mHasAltitude=true,mAltitude=-21.299999237060547,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385015267: GPS x/long:-71.09285252, GPS y/lat: 42.3580302. Region width in x: 20.0
1335385015267: location PINPOINTS to region = 1.0, previous 1
1335385015268: Hysteresis is 0.0
1335385015268: stay at region 1
1335385044443: Received UDP payload: 446
1335385044452: removing leaderRequestRetryR because heard Packet.Heartbeat
1335385044452: heard HEARTBEAT from 5012, now following
1335385044453: VCoreDaemon.java inside stateTransition ..........
1335385044453: removing leaderRequestRetryR because I'm doing a stateTransition
1335385044454: ..... VCoreDaemon.java targetState = NONLEADER
1335385044454: now NONLEADER (id=5020) following LEADER (id=5012) in (1,0)
1335385044455: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385044468: Received UDP payload: 446
1335385044484: Received UDP payload: 446
1335385044497: Received UDP payload: 446
1335385050233: Received UDP payload: 446
1335385050242: Received UDP payload: 446
1335385050257: Received UDP payload: 446
1335385050311: Received UDP payload: 446
1335385053250: .......... GPS onLocationChanged ...... 
1335385053253: Loc = Location[mProvider=gps,mTime=1335385054000,mLatitude=42.35801915,mLongitude=-71.09285977,mHasAltitude=true,mAltitude=-20.700000762939453,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385053255: GPS x/long:-71.09285977, GPS y/lat: 42.35801915. Region width in x: 20.0
1335385053256: location PINPOINTS to region = 1.0, previous 1
1335385053256: Hysteresis is 0.0
1335385053257: stay at region 1
1335385060482: Missed 3 HEARTBEATS from LEADER, going to JOINING.
1335385060483: VCoreDaemon.java inside stateTransition ..........
1335385060483: removing leaderRequestRetryR because I'm doing a stateTransition
1335385060484: ..... VCoreDaemon.java targetState = JOINING
1335385060484: posting leaderRequestRetryR because I'm joining
1335385060485: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385060485: sending LEADER_REQUEST
1335385060486: inside sendPacket(Packet p)
1335385060486: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385060494: Sending UDP payload: 446
1335385060787: sending LEADER_REQUEST
1335385060788: inside sendPacket(Packet p)
1335385060788: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385060792: Sending UDP payload: 446
1335385061089: sending LEADER_REQUEST
1335385061090: inside sendPacket(Packet p)
1335385061090: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385061099: Sending UDP payload: 446
1335385061234: .......... GPS onLocationChanged ...... 
1335385061236: Loc = Location[mProvider=gps,mTime=1335385062000,mLatitude=42.35802169,mLongitude=-71.09288254,mHasAltitude=true,mAltitude=-19.399999618530273,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385061236: GPS x/long:-71.09288254, GPS y/lat: 42.35802169. Region width in x: 20.0
1335385061236: location PINPOINTS to region = 1.0, previous 1
1335385061237: Hysteresis is 0.0
1335385061237: stay at region 1
1335385061390: sending LEADER_REQUEST
1335385061391: inside sendPacket(Packet p)
1335385061391: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385061393: Sending UDP payload: 446
1335385061484: inside leaderRequestTimeoutR beacuse I didn't hear a leader_reply and I'm removing leaderRequestRetryR because leader_request timed out
1335385061485: inside leaderRequestTimeoutR and my state was JOINING, so I'll try to stateTransition to LEADER
1335385061485: VCoreDaemon.java inside stateTransition ..........
1335385061486: removing leaderRequestRetryR because I'm doing a stateTransition
1335385061486: ..... VCoreDaemon.java targetState = LEADER
1335385061486: trying to take leadership to the cloud
1335385061841: cloud rejected leadership request or request failed, wait to retry
1335385065253: .......... GPS onLocationChanged ...... 
1335385065255: Loc = Location[mProvider=gps,mTime=1335385066000,mLatitude=42.35802824,mLongitude=-71.09287246,mHasAltitude=true,mAltitude=-18.5,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385065256: GPS x/long:-71.09287246, GPS y/lat: 42.35802824. Region width in x: 20.0
1335385065258: location PINPOINTS to region = 1.0, previous 1
1335385065259: Hysteresis is 0.0
1335385065260: stay at region 1
1335385071622: Received UDP payload: 446
1335385071634: removing leaderRequestRetryR because heard Packet.Heartbeat
1335385071635: heard HEARTBEAT from 5012, now following
1335385071635: VCoreDaemon.java inside stateTransition ..........
1335385071636: removing leaderRequestRetryR because I'm doing a stateTransition
1335385071636: ..... VCoreDaemon.java targetState = NONLEADER
1335385071637: now NONLEADER (id=5020) following LEADER (id=5012) in (1,0)
1335385071638: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385071656: Received UDP payload: 446
1335385071674: Received UDP payload: 446
1335385071682: Received UDP payload: 446
1335385074458: Received UDP payload: 446
1335385074479: Received UDP payload: 446
1335385074488: Received UDP payload: 446
1335385074499: Received UDP payload: 446
1335385076347: Received UDP payload: 446
1335385076357: Received UDP payload: 446
1335385076376: Received UDP payload: 446
1335385076383: Received UDP payload: 446
1335385076388: Received UDP payload: 446
1335385076732: Received UDP payload: 22335
1335385086268: .......... GPS onLocationChanged ...... 
1335385086271: Loc = Location[mProvider=gps,mTime=1335385087000,mLatitude=42.35802232,mLongitude=-71.09288983,mHasAltitude=true,mAltitude=-17.700000762939453,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385086272: GPS x/long:-71.09288983, GPS y/lat: 42.35802232. Region width in x: 20.0
1335385086276: location PINPOINTS to region = 1.0, previous 1
1335385086276: Hysteresis is 0.0
1335385086276: stay at region 1
1335385087283: Received UDP payload: 22335
1335385087309: Received UDP payload: 446
1335385087312: Received UDP payload: 446
1335385087363: Received UDP payload: 446
1335385088245: .......... GPS onLocationChanged ...... 
1335385088246: Loc = Location[mProvider=gps,mTime=1335385089000,mLatitude=42.35801993,mLongitude=-71.09290221,mHasAltitude=true,mAltitude=-17.100000381469727,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385088246: GPS x/long:-71.09290221, GPS y/lat: 42.35801993. Region width in x: 20.0
1335385088246: location PINPOINTS to region = 1.0, previous 1
1335385088247: Hysteresis is 0.0
1335385088247: stay at region 1
1335385090507: Missed 3 HEARTBEATS from LEADER, going to JOINING.
1335385090508: VCoreDaemon.java inside stateTransition ..........
1335385090508: removing leaderRequestRetryR because I'm doing a stateTransition
1335385090508: ..... VCoreDaemon.java targetState = JOINING
1335385090508: posting leaderRequestRetryR because I'm joining
1335385090508: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385090508: sending LEADER_REQUEST
1335385090508: inside sendPacket(Packet p)
1335385090509: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385090510: Sending UDP payload: 446
1335385090809: sending LEADER_REQUEST
1335385090809: inside sendPacket(Packet p)
1335385090810: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385090811: Sending UDP payload: 446
1335385091110: sending LEADER_REQUEST
1335385091111: inside sendPacket(Packet p)
1335385091111: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385091115: Sending UDP payload: 446
1335385091412: sending LEADER_REQUEST
1335385091412: inside sendPacket(Packet p)
1335385091413: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385091417: Sending UDP payload: 446
1335385091509: inside leaderRequestTimeoutR beacuse I didn't hear a leader_reply and I'm removing leaderRequestRetryR because leader_request timed out
1335385091510: inside leaderRequestTimeoutR and my state was JOINING, so I'll try to stateTransition to LEADER
1335385091510: VCoreDaemon.java inside stateTransition ..........
1335385091510: removing leaderRequestRetryR because I'm doing a stateTransition
1335385091511: ..... VCoreDaemon.java targetState = LEADER
1335385091511: trying to take leadership to the cloud
1335385091822: cloud rejected leadership request or request failed, wait to retry
1335385104835: canPressButton = false. state is + 1 Can't press button because you're in a transient state (JOINING or HANDING_OFF)
1335385104842: can't press camera button yet
1335385113267: .......... GPS onLocationChanged ...... 
1335385113267: Loc = Location[mProvider=gps,mTime=1335385113999,mLatitude=42.35801789,mLongitude=-71.09288907,mHasAltitude=true,mAltitude=-16.700000762939453,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=108.1,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385113268: GPS x/long:-71.09288907, GPS y/lat: 42.35801789. Region width in x: 20.0
1335385113268: location PINPOINTS to region = 1.0, previous 1
1335385113268: Hysteresis is 0.0
1335385113268: stay at region 1
1335385115266: .......... GPS onLocationChanged ...... 
1335385115266: Loc = Location[mProvider=gps,mTime=1335385116000,mLatitude=42.35801061,mLongitude=-71.09287984,mHasAltitude=true,mAltitude=-16.899999618530273,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=108.1,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385115267: GPS x/long:-71.09287984, GPS y/lat: 42.35801061. Region width in x: 20.0
1335385115267: location PINPOINTS to region = 1.0, previous 1
1335385115267: Hysteresis is 0.0
1335385115267: stay at region 1
1335385117273: .......... GPS onLocationChanged ...... 
1335385117274: Loc = Location[mProvider=gps,mTime=1335385118000,mLatitude=42.35801963,mLongitude=-71.09288082,mHasAltitude=true,mAltitude=-17.799999237060547,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385117274: GPS x/long:-71.09288082, GPS y/lat: 42.35801963. Region width in x: 20.0
1335385117275: location PINPOINTS to region = 1.0, previous 1
1335385117275: Hysteresis is 0.0
1335385117275: stay at region 1
1335385122263: .......... GPS onLocationChanged ...... 
1335385122266: Loc = Location[mProvider=gps,mTime=1335385123000,mLatitude=42.35800855,mLongitude=-71.09288504,mHasAltitude=true,mAltitude=-19.100000381469727,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385122269: GPS x/long:-71.09288504, GPS y/lat: 42.35800855. Region width in x: 20.0
1335385122269: location PINPOINTS to region = 1.0, previous 1
1335385122269: Hysteresis is 0.0
1335385122269: stay at region 1
1335385123266: .......... GPS onLocationChanged ...... 
1335385123267: Loc = Location[mProvider=gps,mTime=1335385124000,mLatitude=42.35799863,mLongitude=-71.09288094,mHasAltitude=true,mAltitude=-21.5,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385123267: GPS x/long:-71.09288094, GPS y/lat: 42.35799863. Region width in x: 20.0
1335385123267: location PINPOINTS to region = 1.0, previous 1
1335385123267: Hysteresis is 0.0
1335385123267: stay at region 1
1335385125262: .......... GPS onLocationChanged ...... 
1335385125265: Loc = Location[mProvider=gps,mTime=1335385126000,mLatitude=42.35798391,mLongitude=-71.09286924,mHasAltitude=true,mAltitude=-24.899999618530273,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385125268: GPS x/long:-71.09286924, GPS y/lat: 42.35798391. Region width in x: 20.0
1335385125268: location PINPOINTS to region = 1.0, previous 1
1335385125268: Hysteresis is 0.0
1335385125269: stay at region 1
1335385127258: .......... GPS onLocationChanged ...... 
1335385127261: Loc = Location[mProvider=gps,mTime=1335385128000,mLatitude=42.35797126,mLongitude=-71.09285485,mHasAltitude=true,mAltitude=-27.0,mHasSpeed=true,mSpeed=0.25,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385127262: GPS x/long:-71.09285485, GPS y/lat: 42.35797126. Region width in x: 20.0
1335385127262: location PINPOINTS to region = 1.0, previous 1
1335385127266: Hysteresis is 0.0
1335385127266: stay at region 1
1335385128262: .......... GPS onLocationChanged ...... 
1335385128265: Loc = Location[mProvider=gps,mTime=1335385129000,mLatitude=42.35796398,mLongitude=-71.09284709,mHasAltitude=true,mAltitude=-26.200000762939453,mHasSpeed=true,mSpeed=0.25,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385128268: GPS x/long:-71.09284709, GPS y/lat: 42.35796398. Region width in x: 20.0
1335385128269: location PINPOINTS to region = 1.0, previous 1
1335385128269: Hysteresis is 0.0
1335385128269: stay at region 1
1335385129656: Received UDP payload: 446
1335385129685: Received UDP payload: 446
1335385129975: Received UDP payload: 446
1335385130015: Received UDP payload: 446
1335385130051: Received UDP payload: 446
1335385130061: Received UDP payload: 446
1335385130240: Received UDP payload: 446
1335385130256: Received UDP payload: 446
1335385130267: Received UDP payload: 446
1335385130269: Received UDP payload: 446
1335385130278: .......... GPS onLocationChanged ...... 
1335385130279: Loc = Location[mProvider=gps,mTime=1335385131000,mLatitude=42.35794974,mLongitude=-71.09283288,mHasAltitude=true,mAltitude=-26.5,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385130279: GPS x/long:-71.09283288, GPS y/lat: 42.35794974. Region width in x: 20.0
1335385130279: location PINPOINTS to region = 0.0, previous 1
1335385130279: Hysteresis is 0.0
1335385130280: location CHANGED TO NEW region = (0,0) from region = (1,0)
1335385130280: moving from region (1,0), to (0,0)
1335385130280: VCoreDaemon.java inside stateTransition ..........
1335385130280: removing leaderRequestRetryR because I'm doing a stateTransition
1335385130280: ..... VCoreDaemon.java targetState = JOINING
1335385130280: posting leaderRequestRetryR because I'm joining
1335385130281: sending LEADER_REQUEST
1335385130281: inside sendPacket(Packet p)
1335385130281: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385130282: Sending UDP payload: 446
1335385130281: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385130438: Received UDP payload: 446
1335385130460: Received UDP payload: 446
1335385130476: Received UDP payload: 446
1335385130509: Received UDP payload: 446
1335385130581: sending LEADER_REQUEST
1335385130581: inside sendPacket(Packet p)
1335385130581: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385130583: Sending UDP payload: 446
1335385130883: sending LEADER_REQUEST
1335385130884: inside sendPacket(Packet p)
1335385130884: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385130888: Sending UDP payload: 446
1335385131185: sending LEADER_REQUEST
1335385131186: inside sendPacket(Packet p)
1335385131186: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385131190: Sending UDP payload: 446
1335385131282: inside leaderRequestTimeoutR beacuse I didn't hear a leader_reply and I'm removing leaderRequestRetryR because leader_request timed out
1335385131283: inside leaderRequestTimeoutR and my state was JOINING, so I'll try to stateTransition to LEADER
1335385131283: VCoreDaemon.java inside stateTransition ..........
1335385131284: removing leaderRequestRetryR because I'm doing a stateTransition
1335385131284: ..... VCoreDaemon.java targetState = LEADER
1335385131285: trying to take leadership to the cloud
1335385131361: .......... GPS onLocationChanged ...... 
1335385131363: Loc = Location[mProvider=gps,mTime=1335385132000,mLatitude=42.35794267,mLongitude=-71.0928248,mHasAltitude=true,mAltitude=-26.0,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385131365: GPS x/long:-71.0928248, GPS y/lat: 42.35794267. Region width in x: 20.0
1335385131366: location PINPOINTS to region = 0.0, previous 0
1335385131366: Hysteresis is 0.0
1335385131366: stay at region 0
1335385131726: cloud accepted leadership request, returned csm bytes size 1306
1335385131733: ..... VCoreDaemon.java targetState = LEADER and create new DSMLayer !!!! :D:D:D:D:D
1335385131734: *** Starting CSM Layer ***
1335385131734: *** CSM Layer starting with cache disabled ***
1335385131734: *** CSM Layer starting with forwarding enabled ***
1335385131832: DSMLayer starting
1335385131832: UserApp started.
1335385131833: loaded csm data from cloud
1335385131877: inside sendPacket(Packet p)
1335385131879: Sending UDP payload: 3512
1335385131881: now fully up as LEADER (id=5020) of (0,0)
1335385131881: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385133032: canPressButton = TRUE
1335385133032: areButtonsEnabled --> false
1335385133033: disabling buttons ...
1335385133033: took picture disableButtonsR
1335385133033: areButtonsEnabled --> false
1335385133127: reg=0 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=1 takeCamGood=0 takeGoodSave=0 takeBad=0 takeTimedout=0 takePercent=0% getNum=0 getGood=0 getBad=0 getTimedout=0 getPercent=-1%
1335385133128: Clicked take picture button ..
1335385133318: .......... GPS onLocationChanged ...... 
1335385133326: Loc = Location[mProvider=gps,mTime=1335385134000,mLatitude=42.35793309,mLongitude=-71.09281012,mHasAltitude=true,mAltitude=-26.799999237060547,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385133328: GPS x/long:-71.09281012, GPS y/lat: 42.35793309. Region width in x: 20.0
1335385133329: location PINPOINTS to region = 0.0, previous 0
1335385133329: Hysteresis is 0.0
1335385133330: stay at region 0
1335385134702: inside HandlePictureStorage onPictureTaken()
1335385134703: reg=0 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=1 takeCamGood=1 takeGoodSave=0 takeBad=0 takeTimedout=0 takePercent=0% getNum=0 getGood=0 getBad=0 getTimedout=0 getPercent=-1%
1335385134976: Picture successfully taken, ORIG BYTE LENGTH = 3798289
1335385135245: Our new height x width: 306 x 408
1335385135245: Show photo from handle my camera take
1335385135246: ** Client making NEWly TAKEN photo PACKET to send to leader **
1335385135246: change local requestCounter to 1
1335385135272: BYTE SIZE AFTER COMPRESSION: 8693
1335385135279: Client about to send CLIENT_UPLOAD_PHOTO packet, REQUEST: 5020001 Client in region: 0 Client nodID: 5020
1335385135321: ----------------------------
1335385135321: inside sendRequestPacketRepeatingRunnable for requestCount = 5020001
1335385135322: I'm a leader, my requesting photos packet going to mux directly
1335385135331: --- Finished one round of sending REQUEST Packet ---------
1335385135322: mux: Inside mux Packet.CLIENT_REQUEST
1335385135322: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385135378: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335385135322: inside handleClientRequest. Originator leader of region 0
1335385135323: got new request, requestCounter = 5020001
1335385135323: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335385135323: Sending PROC_REQUEST 10:0 (0,0)->(0,0)
1335385135324: Dispatching Atom PROC_REQUEST 10:0 (0,0)->(0,0)
1335385135325: mux: I got a CSM packet at a leader 

1335385135379: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335385135381: I'm a leader and I successfully saved my client's new photo
1335385135381: now showing in UI the new photo I just saved ... 
1335385135381: the photo length: 8693
1335385135426: end of server show photo aside %%%%%%%%%
1335385135324: Note down new request by adding requestCounter=5020001 to HashMap processedRequests
1335385135324: Make FirstLeg Ack regardless of new or already-processed requests
1335385135324: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5020)
1335385135330: Sending UDP payload: 9704
1335385135333: removed replies before id 0 from sentReplies of size 0
1335385135334: inside handleDSMRequest. At requests's remote leader of region 0
1335385135354: Inside UPLOAD_PHOTO!!
1335385135357: my_gpinfo.isSuccess is now (should be true): true
1335385135358: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335385135360: Received PROC_REQUEST 10:0 (0,0)->(0,0), replying PROC_REPLY 10:0 (0,0)->(0,0)
1335385135360: Dispatching Atom PROC_REPLY 10:0 (0,0)->(0,0)
1335385135361: mux: I got a CSM packet at a leader 

1335385135428: Client received Packet.CLIENT_UPLOAD_PHOTO_ACK
1335385135428: disabling progressdialog due to successful new photo upload
1335385135428: Inside _enableButtons
1335385135429: areButtonsEnabled --> true
1335385135429: send final leg ack regardless of new or already-processed reply
1335385135430: inside finalLegAck: change requestCounter to 2
1335385135431: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5020002 Client in region: (0,0) Client nodID: 5020
1335385135431: I'm a leader client, my final_leg packet going to mux directly
1335385135434: new client_upload_photo_ack reply with replyCounter 502000001
1335385135434: note down new reply by adding replyCounter=502000001 to HashMap processedReplies
1335385135435: leader upload new photo latency = 1335385135428
1335385135435: = leader upload start 0 ~ stop 1335385135428
1335385135438: reg=0 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=1 takeCamGood=1 takeGoodSave=1 takeBad=0 takeTimedout=0 takePercent=100% getNum=0 getGood=0 getBad=0 getTimedout=0 getPercent=-1%
1335385135438: SUCCESS Client now knows saving photo on its leader succeeded
1335385135363: Sending UDP payload: 989
1335385135365: Received PROC_REPLY 10:0 (0,0)->(0,0), handing to UserApp
1335385135366: inside handleDSMReply. Now back in originator leader of region 0
1335385135366: DSM layer: Going to and from remote region took latency = 43
1335385135366: DSM layer: orig leader sent packet at 1335385135323 ~ received reply from remote leader at 1335385135366
1335385135367: Originator Region=0's Leader (for Client=5020) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385135367: change leader replyCounter to: 1
1335385135367: reply packet contains the success info for UPLOAD_PHOTO
1335385135367: inside sendReplies of replyCount = 502000001
1335385135368: =======================
1335385135368: inside sendReplyRepeatingRunnable for replyCount = 502000001
1335385135368: Leader about to send REPLY packet, number: 502000001 type: 16 Leader in region: (0,0) to Client nodID: 5020
1335385135368: I (the leader) was also the originator client (id = 5020) so I hand the packet to my mux directly, without UDP
1335385135369: === Finished one round of sending REPLY Packet =======
1335385135431: mux: Inside mux Packet.CLIENT_REQUEST
1335385135431: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385135432: inside handleClientRequest. Originator leader of region 0
1335385135432: got new request, requestCounter = 5020002
1335385135432: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 502000001
1335385135432: Yay the last leg succeeded. Removing reply runnables ...
1335385135432: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 502000001
1335385135432: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 502000001
1335385135433: do not send ack for received final_leg_ack
1335385135534: inside sendPacket(Packet p)
1335385135535: Sending UDP payload: 446
1335385135572: .......... GPS onLocationChanged ...... 
1335385135573: Loc = Location[mProvider=gps,mTime=1335385136000,mLatitude=42.35792689,mLongitude=-71.09280068,mHasAltitude=true,mAltitude=-26.5,mHasSpeed=true,mSpeed=0.25,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385135574: GPS x/long:-71.09280068, GPS y/lat: 42.35792689. Region width in x: 20.0
1335385135574: location PINPOINTS to region = 0.0, previous 0
1335385135574: Hysteresis is 0.0
1335385135574: stay at region 0
1335385137007: Received UDP payload: 446
1335385137020: Received UDP payload: 446
1335385137029: Received UDP payload: 446
1335385137040: Received UDP payload: 446
1335385137050: Received UDP payload: 446
1335385137068: Received UDP payload: 446
1335385137075: Received UDP payload: 446
1335385137087: Received UDP payload: 446
1335385137133: Received UDP payload: 3512
1335385137135: ignoring leader_reply that's not for me
1335385137184: Received UDP payload: 3529
1335385137188: ignoring leader_reply that's not for me
1335385137271: Received UDP payload: 3529
1335385137276: ignoring leader_reply that's not for me
1335385140534: inside sendPacket(Packet p)
1335385140535: Sending UDP payload: 446
1335385145534: inside sendPacket(Packet p)
1335385145540: Sending UDP payload: 446
1335385147257: .......... GPS onLocationChanged ...... 
1335385147261: Loc = Location[mProvider=gps,mTime=1335385148000,mLatitude=42.3579185,mLongitude=-71.09279261,mHasAltitude=true,mAltitude=-28.100000381469727,mHasSpeed=true,mSpeed=0.25,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385147262: GPS x/long:-71.09279261, GPS y/lat: 42.3579185. Region width in x: 20.0
1335385147266: location PINPOINTS to region = 0.0, previous 0
1335385147266: Hysteresis is 0.0
1335385147266: stay at region 0
1335385150258: .......... GPS onLocationChanged ...... 
1335385150261: Loc = Location[mProvider=gps,mTime=1335385151000,mLatitude=42.35790489,mLongitude=-71.09279044,mHasAltitude=true,mAltitude=-28.5,mHasSpeed=true,mSpeed=0.25,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385150263: GPS x/long:-71.09279044, GPS y/lat: 42.35790489. Region width in x: 20.0
1335385150266: location PINPOINTS to region = 0.0, previous 0
1335385150266: Hysteresis is 0.0
1335385150266: stay at region 0
1335385150536: inside sendPacket(Packet p)
1335385150537: Sending UDP payload: 446
1335385152261: .......... GPS onLocationChanged ...... 
1335385152266: Loc = Location[mProvider=gps,mTime=1335385153000,mLatitude=42.35788956,mLongitude=-71.09279707,mHasAltitude=true,mAltitude=-28.200000762939453,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385152267: GPS x/long:-71.09279707, GPS y/lat: 42.35788956. Region width in x: 20.0
1335385152267: location PINPOINTS to region = 0.0, previous 0
1335385152267: Hysteresis is 0.0
1335385152267: stay at region 0
1335385153691: Received UDP payload: 3529
1335385153699: ignoring leader_reply that's not for me
1335385153712: Received UDP payload: 446
1335385153858: Received UDP payload: 446
1335385153872: canPressButton = TRUE
1335385153873: areButtonsEnabled --> false
1335385153873: disabling buttons ...
1335385153873: took picture disableButtonsR
1335385153874: areButtonsEnabled --> false
1335385153899: reg=0 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=1 takeGoodSave=1 takeBad=0 takeTimedout=0 takePercent=50% getNum=0 getGood=0 getBad=0 getTimedout=0 getPercent=-1%
1335385153900: Clicked take picture button ..
1335385154232: .......... GPS onLocationChanged ...... 
1335385154233: Loc = Location[mProvider=gps,mTime=1335385155000,mLatitude=42.35787703,mLongitude=-71.09280698,mHasAltitude=true,mAltitude=-28.299999237060547,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385154233: GPS x/long:-71.09280698, GPS y/lat: 42.35787703. Region width in x: 20.0
1335385154233: location PINPOINTS to region = 0.0, previous 0
1335385154233: Hysteresis is 0.0
1335385154234: stay at region 0
1335385154258: Received UDP payload: 3529
1335385154419: Received UDP payload: 3529
1335385155443: inside HandlePictureStorage onPictureTaken()
1335385155444: reg=0 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=2 takeGoodSave=1 takeBad=0 takeTimedout=0 takePercent=50% getNum=0 getGood=0 getBad=0 getTimedout=0 getPercent=-1%
1335385155704: Picture successfully taken, ORIG BYTE LENGTH = 3506128
1335385155967: Our new height x width: 306 x 408
1335385155967: Show photo from handle my camera take
1335385155967: ** Client making NEWly TAKEN photo PACKET to send to leader **
1335385155968: change local requestCounter to 3
1335385155983: BYTE SIZE AFTER COMPRESSION: 5265
1335385155984: Client about to send CLIENT_UPLOAD_PHOTO packet, REQUEST: 5020003 Client in region: 0 Client nodID: 5020
1335385155479: Received UDP payload: 446
1335385155537: inside sendPacket(Packet p)
1335385155539: Sending UDP payload: 446
1335385156012: ----------------------------
1335385156013: inside sendRequestPacketRepeatingRunnable for requestCount = 5020003
1335385156014: I'm a leader, my requesting photos packet going to mux directly
1335385156023: --- Finished one round of sending REQUEST Packet ---------
1335385156014: mux: Inside mux Packet.CLIENT_REQUEST
1335385156015: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385156055: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335385156015: inside handleClientRequest. Originator leader of region 0
1335385156015: got new request, requestCounter = 5020003
1335385156015: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335385156015: Sending PROC_REQUEST 10:1 (0,0)->(0,0)
1335385156016: Dispatching Atom PROC_REQUEST 10:1 (0,0)->(0,0)
1335385156016: mux: I got a CSM packet at a leader 

1335385156056: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335385156056: I'm a leader and I successfully saved my client's new photo
1335385156057: now showing in UI the new photo I just saved ... 
1335385156057: the photo length: 5265
1335385156100: end of server show photo aside %%%%%%%%%
1335385156016: Note down new request by adding requestCounter=5020003 to HashMap processedRequests
1335385156016: Make FirstLeg Ack regardless of new or already-processed requests
1335385156016: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5020)
1335385156018: Sending UDP payload: 6276
1335385156019: removed replies before id 1 from sentReplies of size 0
1335385156020: inside handleDSMRequest. At requests's remote leader of region 0
1335385156021: Inside UPLOAD_PHOTO!!
1335385156022: my_gpinfo.isSuccess is now (should be true): true
1335385156023: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335385156033: Received PROC_REQUEST 10:1 (0,0)->(0,0), replying PROC_REPLY 10:1 (0,0)->(0,0)
1335385156034: Dispatching Atom PROC_REPLY 10:1 (0,0)->(0,0)
1335385156034: mux: I got a CSM packet at a leader 

1335385156102: Client received Packet.CLIENT_UPLOAD_PHOTO_ACK
1335385156103: disabling progressdialog due to successful new photo upload
1335385156103: Inside _enableButtons
1335385156104: areButtonsEnabled --> true
1335385156104: send final leg ack regardless of new or already-processed reply
1335385156105: inside finalLegAck: change requestCounter to 4
1335385156105: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5020004 Client in region: (0,0) Client nodID: 5020
1335385156105: I'm a leader client, my final_leg packet going to mux directly
1335385156108: new client_upload_photo_ack reply with replyCounter 502000002
1335385156108: note down new reply by adding replyCounter=502000002 to HashMap processedReplies
1335385156109: leader upload new photo latency = 1335385156102
1335385156109: = leader upload start 0 ~ stop 1335385156102
1335385156111: reg=0 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=2 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=100% getNum=0 getGood=0 getBad=0 getTimedout=0 getPercent=-1%
1335385156111: SUCCESS Client now knows saving photo on its leader succeeded
1335385156037: Sending UDP payload: 989
1335385156038: Received PROC_REPLY 10:1 (0,0)->(0,0), handing to UserApp
1335385156038: inside handleDSMReply. Now back in originator leader of region 0
1335385156038: DSM layer: Going to and from remote region took latency = 23
1335385156038: DSM layer: orig leader sent packet at 1335385156015 ~ received reply from remote leader at 1335385156038
1335385156039: Originator Region=0's Leader (for Client=5020) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385156039: change leader replyCounter to: 2
1335385156039: reply packet contains the success info for UPLOAD_PHOTO
1335385156039: inside sendReplies of replyCount = 502000002
1335385156040: =======================
1335385156040: inside sendReplyRepeatingRunnable for replyCount = 502000002
1335385156040: Leader about to send REPLY packet, number: 502000002 type: 16 Leader in region: (0,0) to Client nodID: 5020
1335385156040: I (the leader) was also the originator client (id = 5020) so I hand the packet to my mux directly, without UDP
1335385156040: === Finished one round of sending REPLY Packet =======
1335385156106: mux: Inside mux Packet.CLIENT_REQUEST
1335385156106: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385156106: inside handleClientRequest. Originator leader of region 0
1335385156106: got new request, requestCounter = 5020004
1335385156106: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 502000002
1335385156106: Yay the last leg succeeded. Removing reply runnables ...
1335385156107: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 502000002
1335385156107: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 502000002
1335385156107: do not send ack for received final_leg_ack
1335385157431: Received UDP payload: 7653
1335385157436: mux: Inside mux Packet.CLIENT_REQUEST
1335385157782: Received UDP payload: 446
1335385159925: Received UDP payload: 446
1335385159956: Received UDP payload: 446
1335385159968: Received UDP payload: 446
1335385160259: .......... GPS onLocationChanged ...... 
1335385160261: Loc = Location[mProvider=gps,mTime=1335385161000,mLatitude=42.35786948,mLongitude=-71.09279428,mHasAltitude=true,mAltitude=-29.5,mHasSpeed=true,mSpeed=0.25,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385160262: GPS x/long:-71.09279428, GPS y/lat: 42.35786948. Region width in x: 20.0
1335385160263: location PINPOINTS to region = 0.0, previous 0
1335385160264: Hysteresis is 0.0
1335385160265: stay at region 0
1335385160537: inside sendPacket(Packet p)
1335385160538: Sending UDP payload: 446
1335385162260: .......... GPS onLocationChanged ...... 
1335385162261: Loc = Location[mProvider=gps,mTime=1335385163000,mLatitude=42.35788775,mLongitude=-71.09278416,mHasAltitude=true,mAltitude=-31.200000762939453,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385162262: GPS x/long:-71.09278416, GPS y/lat: 42.35788775. Region width in x: 20.0
1335385162262: location PINPOINTS to region = 0.0, previous 0
1335385162262: Hysteresis is 0.0
1335385162262: stay at region 0
1335385162383: canPressButton = TRUE
1335385162384: areButtonsEnabled --> false 
1335385162384: get picture disableButtonsR
1335385162384: areButtonsEnabled --> false
1335385162400: reg=0 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=2 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=100% getNum=1 getGood=0 getBad=0 getTimedout=0 getPercent=0%
1335385162400: ** Client making GET photo PACKET to send to the leader. Requesting for region: 0 **
1335385162401: change local requestCounter to 5
1335385162401: Client about to send CLIENT_DOWNLOAD_PHOTO packet, REQUEST: 5020005 Client in region: 0 Client nodID: 5020
1335385162431: ----------------------------
1335385162432: inside sendRequestPacketRepeatingRunnable for requestCount = 5020005
1335385162432: I'm a leader, my requesting photos packet going to mux directly
1335385162432: --- Finished one round of sending REQUEST Packet ---------
1335385162432: mux: Inside mux Packet.CLIENT_REQUEST
1335385162432: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385162470: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335385162433: inside handleClientRequest. Originator leader of region 0
1335385162433: got new request, requestCounter = 5020005
1335385162433: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335385162435: Sending to region: 0
1335385162436: Sending PROC_REQUEST 11:2 (0,0)->(0,0)
1335385162436: Dispatching Atom PROC_REQUEST 11:2 (0,0)->(0,0)
1335385162438: mux: I got a CSM packet at a leader 

1335385162436: Note down new request by adding requestCounter=5020005 to HashMap processedRequests
1335385162438: Make FirstLeg Ack regardless of new or already-processed requests
1335385162438: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5020)
1335385162439: Sending UDP payload: 989
1335385162440: removed replies before id 2 from sentReplies of size 0
1335385162440: inside handleDSMRequest. At requests's remote leader of region 0
1335385162441: INSIDE SERVER_GET_PHOTO!!!
1335385162445: dst_region == src_region = 0
1335385162446:  1 self to self atomRequest
1335385162448: Received PROC_REQUEST 11:2 (0,0)->(0,0), replying PROC_REPLY 11:2 (0,0)->(0,0)
1335385162449: Dispatching Atom PROC_REPLY 11:2 (0,0)->(0,0)
1335385162451: mux: I got a CSM packet at a leader 

1335385162507: Client received Packet.CLIENT_SHOW_REMOTEPHOTOS. Client requested for a photo in a remote region and this is the reply
1335385162508: disabling progressdialog due to successful new photo get
1335385162508: Inside _enableButtons
1335385162508: areButtonsEnabled --> true
1335385162510: send final leg ack regardless of new or already-processed reply
1335385162510: inside finalLegAck: change requestCounter to 6
1335385162511: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5020006 Client in region: (0,0) Client nodID: 5020
1335385162511: I'm a leader client, my final_leg packet going to mux directly
1335385162514: new client_show_remotephoto reply with replyCounter 502000003
1335385162515: note down new reply by adding replyCounter=502000003 to HashMap processedReplies
1335385162515: leader download remote photo latency = 75
1335385162515: = leader download start 1335385162432 ~ stop 1335385162507
1335385162517: reg=0 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=2 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=100% getNum=1 getGood=1 getBad=0 getTimedout=0 getPercent=100%
1335385162517: Success! Client getting photo from remote region, showing photo...
1335385162517: Remote photo's length: 5265
1335385162460: Sending UDP payload: 6276
1335385162462: Received PROC_REPLY 11:2 (0,0)->(0,0), handing to UserApp
1335385162462: inside handleDSMReply. Now back in originator leader of region 0
1335385162462: DSM layer: Going to and from remote region took latency = 27
1335385162463: DSM layer: orig leader sent packet at 1335385162435 ~ received reply from remote leader at 1335385162462
1335385162467: Originator Region=0's Leader (for Client=5020) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385162472: change leader replyCounter to: 3
1335385162475: reply packet contains the newest photo/success info from the remote region
1335385162475: inside sendReplies of replyCount = 502000003
1335385162476: =======================
1335385162476: inside sendReplyRepeatingRunnable for replyCount = 502000003
1335385162477: Leader about to send REPLY packet, number: 502000003 type: 15 Leader in region: (0,0) to Client nodID: 5020
1335385162477: I (the leader) was also the originator client (id = 5020) so I hand the packet to my mux directly, without UDP
1335385162477: === Finished one round of sending REPLY Packet =======
1335385162512: mux: Inside mux Packet.CLIENT_REQUEST
1335385162512: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385162512: inside handleClientRequest. Originator leader of region 0
1335385162513: got new request, requestCounter = 5020006
1335385162513: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 502000003
1335385162513: Yay the last leg succeeded. Removing reply runnables ...
1335385162514: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 502000003
1335385162514: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 502000003
1335385162514: do not send ack for received final_leg_ack
1335385164256: .......... GPS onLocationChanged ...... 
1335385164259: Loc = Location[mProvider=gps,mTime=1335385165000,mLatitude=42.35789699,mLongitude=-71.09278026,mHasAltitude=true,mAltitude=-30.700000762939453,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385164260: GPS x/long:-71.09278026, GPS y/lat: 42.35789699. Region width in x: 20.0
1335385164261: location PINPOINTS to region = 0.0, previous 0
1335385164261: Hysteresis is 0.0
1335385164262: stay at region 0
1335385165538: inside sendPacket(Packet p)
1335385165554: Sending UDP payload: 446
1335385168723: canPressButton = TRUE
1335385168723: areButtonsEnabled --> false 
1335385168723: get picture disableButtonsR
1335385168724: areButtonsEnabled --> false
1335385168742: reg=0 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=2 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=100% getNum=2 getGood=1 getBad=0 getTimedout=0 getPercent=50%
1335385168743: ** Client making GET photo PACKET to send to the leader. Requesting for region: 0 **
1335385168743: change local requestCounter to 7
1335385168744: Client about to send CLIENT_DOWNLOAD_PHOTO packet, REQUEST: 5020007 Client in region: 0 Client nodID: 5020
1335385168776: ----------------------------
1335385168777: inside sendRequestPacketRepeatingRunnable for requestCount = 5020007
1335385168778: I'm a leader, my requesting photos packet going to mux directly
1335385168790: --- Finished one round of sending REQUEST Packet ---------
1335385168778: mux: Inside mux Packet.CLIENT_REQUEST
1335385168778: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385168837: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335385168778: inside handleClientRequest. Originator leader of region 0
1335385168778: got new request, requestCounter = 5020007
1335385168778: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335385168779: Sending to region: 0
1335385168779: Sending PROC_REQUEST 11:3 (0,0)->(0,0)
1335385168780: Dispatching Atom PROC_REQUEST 11:3 (0,0)->(0,0)
1335385168781: mux: I got a CSM packet at a leader 

1335385168780: Note down new request by adding requestCounter=5020007 to HashMap processedRequests
1335385168781: Make FirstLeg Ack regardless of new or already-processed requests
1335385168781: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5020)
1335385168784: Sending UDP payload: 989
1335385168785: removed replies before id 3 from sentReplies of size 0
1335385168785: inside handleDSMRequest. At requests's remote leader of region 0
1335385168786: INSIDE SERVER_GET_PHOTO!!!
1335385168786: dst_region == src_region = 0
1335385168786:  1 self to self atomRequest
1335385168788: Received PROC_REQUEST 11:3 (0,0)->(0,0), replying PROC_REPLY 11:3 (0,0)->(0,0)
1335385168789: Dispatching Atom PROC_REPLY 11:3 (0,0)->(0,0)
1335385168789: mux: I got a CSM packet at a leader 

1335385168846: Client received Packet.CLIENT_SHOW_REMOTEPHOTOS. Client requested for a photo in a remote region and this is the reply
1335385168846: disabling progressdialog due to successful new photo get
1335385168847: Inside _enableButtons
1335385168847: areButtonsEnabled --> true
1335385168847: send final leg ack regardless of new or already-processed reply
1335385168848: inside finalLegAck: change requestCounter to 8
1335385168848: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5020008 Client in region: (0,0) Client nodID: 5020
1335385168848: I'm a leader client, my final_leg packet going to mux directly
1335385168850: new client_show_remotephoto reply with replyCounter 502000004
1335385168850: note down new reply by adding replyCounter=502000004 to HashMap processedReplies
1335385168850: leader download remote photo latency = 68
1335385168851: = leader download start 1335385168778 ~ stop 1335385168846
1335385168852: reg=0 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=2 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=100% getNum=2 getGood=2 getBad=0 getTimedout=0 getPercent=100%
1335385168853: Success! Client getting photo from remote region, showing photo...
1335385168853: Remote photo's length: 5265
1335385168799: Sending UDP payload: 6276
1335385168800: Received PROC_REPLY 11:3 (0,0)->(0,0), handing to UserApp
1335385168800: inside handleDSMReply. Now back in originator leader of region 0
1335385168801: DSM layer: Going to and from remote region took latency = 21
1335385168801: DSM layer: orig leader sent packet at 1335385168779 ~ received reply from remote leader at 1335385168800
1335385168802: Originator Region=0's Leader (for Client=5020) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385168802: change leader replyCounter to: 4
1335385168819: reply packet contains the newest photo/success info from the remote region
1335385168820: inside sendReplies of replyCount = 502000004
1335385168820: =======================
1335385168820: inside sendReplyRepeatingRunnable for replyCount = 502000004
1335385168820: Leader about to send REPLY packet, number: 502000004 type: 15 Leader in region: (0,0) to Client nodID: 5020
1335385168821: I (the leader) was also the originator client (id = 5020) so I hand the packet to my mux directly, without UDP
1335385168821: === Finished one round of sending REPLY Packet =======
1335385168848: mux: Inside mux Packet.CLIENT_REQUEST
1335385168849: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385168849: inside handleClientRequest. Originator leader of region 0
1335385168849: got new request, requestCounter = 5020008
1335385168849: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 502000004
1335385168849: Yay the last leg succeeded. Removing reply runnables ...
1335385168849: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 502000004
1335385168849: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 502000004
1335385168849: do not send ack for received final_leg_ack
1335385169238: .......... GPS onLocationChanged ...... 
1335385169239: Loc = Location[mProvider=gps,mTime=1335385170000,mLatitude=42.3579064,mLongitude=-71.09278029,mHasAltitude=true,mAltitude=-31.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385169240: GPS x/long:-71.09278029, GPS y/lat: 42.3579064. Region width in x: 20.0
1335385169240: location PINPOINTS to region = 0.0, previous 0
1335385169240: Hysteresis is 0.0
1335385169241: stay at region 0
1335385170539: inside sendPacket(Packet p)
1335385170543: Sending UDP payload: 446
1335385171250: Received UDP payload: 7653
1335385171260: mux: Inside mux Packet.CLIENT_REQUEST
1335385171468: Received UDP payload: 4110
1335385171470: mux: Inside mux Packet.CLIENT_REQUEST
1335385172261: .......... GPS onLocationChanged ...... 
1335385172266: Loc = Location[mProvider=gps,mTime=1335385173000,mLatitude=42.3579156,mLongitude=-71.09278715,mHasAltitude=true,mAltitude=-31.700000762939453,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385172266: GPS x/long:-71.09278715, GPS y/lat: 42.3579156. Region width in x: 20.0
1335385172277: location PINPOINTS to region = 0.0, previous 0
1335385172277: Hysteresis is 0.0
1335385172277: stay at region 0
1335385175540: inside sendPacket(Packet p)
1335385175552: Sending UDP payload: 446
1335385177142: Received UDP payload: 446
1335385177160: Received UDP payload: 446
1335385179702: canPressButton = TRUE
1335385179702: areButtonsEnabled --> false
1335385179703: disabling buttons ...
1335385179703: took picture disableButtonsR
1335385179703: areButtonsEnabled --> false
1335385179729: reg=0 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=3 takeCamGood=2 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=66% getNum=2 getGood=2 getBad=0 getTimedout=0 getPercent=100%
1335385179730: Clicked take picture button ..
1335385180540: inside sendPacket(Packet p)
1335385180541: Sending UDP payload: 446
1335385181053: inside HandlePictureStorage onPictureTaken()
1335385181054: reg=0 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=3 takeCamGood=3 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=66% getNum=2 getGood=2 getBad=0 getTimedout=0 getPercent=100%
1335385181317: Picture successfully taken, ORIG BYTE LENGTH = 2387051
1335385181488: Our new height x width: 306 x 408
1335385181488: Show photo from handle my camera take
1335385181489: ** Client making NEWly TAKEN photo PACKET to send to leader **
1335385181489: change local requestCounter to 9
1335385181509: BYTE SIZE AFTER COMPRESSION: 5306
1335385181510: Client about to send CLIENT_UPLOAD_PHOTO packet, REQUEST: 5020009 Client in region: 0 Client nodID: 5020
1335385181554: ----------------------------
1335385181555: inside sendRequestPacketRepeatingRunnable for requestCount = 5020009
1335385181556: I'm a leader, my requesting photos packet going to mux directly
1335385181569: --- Finished one round of sending REQUEST Packet ---------
1335385181556: mux: Inside mux Packet.CLIENT_REQUEST
1335385181556: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385181610: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335385181557: inside handleClientRequest. Originator leader of region 0
1335385181557: got new request, requestCounter = 5020009
1335385181557: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335385181557: Sending PROC_REQUEST 10:4 (0,0)->(0,0)
1335385181558: Dispatching Atom PROC_REQUEST 10:4 (0,0)->(0,0)
1335385181559: mux: I got a CSM packet at a leader 

1335385181612: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335385181614: I'm a leader and I successfully saved my client's new photo
1335385181614: now showing in UI the new photo I just saved ... 
1335385181614: the photo length: 5306
1335385181653: end of server show photo aside %%%%%%%%%
1335385181558: Note down new request by adding requestCounter=5020009 to HashMap processedRequests
1335385181558: Make FirstLeg Ack regardless of new or already-processed requests
1335385181558: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5020)
1335385181561: Sending UDP payload: 6317
1335385181582: removed replies before id 4 from sentReplies of size 0
1335385181583: inside handleDSMRequest. At requests's remote leader of region 0
1335385181585: Inside UPLOAD_PHOTO!!
1335385181587: my_gpinfo.isSuccess is now (should be true): true
1335385181587: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335385181589: Received PROC_REQUEST 10:4 (0,0)->(0,0), replying PROC_REPLY 10:4 (0,0)->(0,0)
1335385181590: Dispatching Atom PROC_REPLY 10:4 (0,0)->(0,0)
1335385181590: mux: I got a CSM packet at a leader 

1335385181656: Client received Packet.CLIENT_UPLOAD_PHOTO_ACK
1335385181657: disabling progressdialog due to successful new photo upload
1335385181657: Inside _enableButtons
1335385181658: areButtonsEnabled --> true
1335385181658: send final leg ack regardless of new or already-processed reply
1335385181658: inside finalLegAck: change requestCounter to 10
1335385181659: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5020010 Client in region: (0,0) Client nodID: 5020
1335385181660: I'm a leader client, my final_leg packet going to mux directly
1335385181662: new client_upload_photo_ack reply with replyCounter 502000005
1335385181663: note down new reply by adding replyCounter=502000005 to HashMap processedReplies
1335385181663: leader upload new photo latency = 1335385181656
1335385181664: = leader upload start 0 ~ stop 1335385181656
1335385181666: reg=0 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=3 takeCamGood=3 takeGoodSave=3 takeBad=0 takeTimedout=0 takePercent=100% getNum=2 getGood=2 getBad=0 getTimedout=0 getPercent=100%
1335385181666: SUCCESS Client now knows saving photo on its leader succeeded
1335385181593: Sending UDP payload: 989
1335385181594: Received PROC_REPLY 10:4 (0,0)->(0,0), handing to UserApp
1335385181594: inside handleDSMReply. Now back in originator leader of region 0
1335385181594: DSM layer: Going to and from remote region took latency = 37
1335385181594: DSM layer: orig leader sent packet at 1335385181557 ~ received reply from remote leader at 1335385181594
1335385181596: Originator Region=0's Leader (for Client=5020) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385181596: change leader replyCounter to: 5
1335385181596: reply packet contains the success info for UPLOAD_PHOTO
1335385181596: inside sendReplies of replyCount = 502000005
1335385181596: =======================
1335385181597: inside sendReplyRepeatingRunnable for replyCount = 502000005
1335385181597: Leader about to send REPLY packet, number: 502000005 type: 16 Leader in region: (0,0) to Client nodID: 5020
1335385181597: I (the leader) was also the originator client (id = 5020) so I hand the packet to my mux directly, without UDP
1335385181597: === Finished one round of sending REPLY Packet =======
1335385181660: mux: Inside mux Packet.CLIENT_REQUEST
1335385181660: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385181661: inside handleClientRequest. Originator leader of region 0
1335385181661: got new request, requestCounter = 5020010
1335385181661: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 502000005
1335385181661: Yay the last leg succeeded. Removing reply runnables ...
1335385181661: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 502000005
1335385181662: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 502000005
1335385181662: do not send ack for received final_leg_ack
1335385185542: inside sendPacket(Packet p)
1335385185546: Sending UDP payload: 446
1335385189596: canPressButton = TRUE
1335385189596: areButtonsEnabled --> false 
1335385189596: get picture disableButtonsR
1335385189596: areButtonsEnabled --> false
1335385189612: reg=0 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=3 takeCamGood=3 takeGoodSave=3 takeBad=0 takeTimedout=0 takePercent=100% getNum=3 getGood=2 getBad=0 getTimedout=0 getPercent=66%
1335385189613: ** Client making GET photo PACKET to send to the leader. Requesting for region: 0 **
1335385189613: change local requestCounter to 11
1335385189614: Client about to send CLIENT_DOWNLOAD_PHOTO packet, REQUEST: 5020011 Client in region: 0 Client nodID: 5020
1335385189647: ----------------------------
1335385189647: inside sendRequestPacketRepeatingRunnable for requestCount = 5020011
1335385189648: I'm a leader, my requesting photos packet going to mux directly
1335385189658: --- Finished one round of sending REQUEST Packet ---------
1335385189648: mux: Inside mux Packet.CLIENT_REQUEST
1335385189648: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385189708: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335385189648: inside handleClientRequest. Originator leader of region 0
1335385189648: got new request, requestCounter = 5020011
1335385189648: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335385189649: Sending to region: 0
1335385189650: Sending PROC_REQUEST 11:5 (0,0)->(0,0)
1335385189650: Dispatching Atom PROC_REQUEST 11:5 (0,0)->(0,0)
1335385189652: mux: I got a CSM packet at a leader 

1335385189650: Note down new request by adding requestCounter=5020011 to HashMap processedRequests
1335385189651: Make FirstLeg Ack regardless of new or already-processed requests
1335385189651: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5020)
1335385189653: Sending UDP payload: 989
1335385189654: removed replies before id 5 from sentReplies of size 0
1335385189654: inside handleDSMRequest. At requests's remote leader of region 0
1335385189655: INSIDE SERVER_GET_PHOTO!!!
1335385189656: dst_region == src_region = 0
1335385189656:  1 self to self atomRequest
1335385189657: Received PROC_REQUEST 11:5 (0,0)->(0,0), replying PROC_REPLY 11:5 (0,0)->(0,0)
1335385189657: Dispatching Atom PROC_REPLY 11:5 (0,0)->(0,0)
1335385189658: mux: I got a CSM packet at a leader 

1335385189712: Client received Packet.CLIENT_SHOW_REMOTEPHOTOS. Client requested for a photo in a remote region and this is the reply
1335385189713: disabling progressdialog due to successful new photo get
1335385189713: Inside _enableButtons
1335385189714: areButtonsEnabled --> true
1335385189714: send final leg ack regardless of new or already-processed reply
1335385189714: inside finalLegAck: change requestCounter to 12
1335385189714: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5020012 Client in region: (0,0) Client nodID: 5020
1335385189715: I'm a leader client, my final_leg packet going to mux directly
1335385189718: new client_show_remotephoto reply with replyCounter 502000006
1335385189718: note down new reply by adding replyCounter=502000006 to HashMap processedReplies
1335385189719: leader download remote photo latency = 64
1335385189719: = leader download start 1335385189648 ~ stop 1335385189712
1335385189723: reg=0 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=3 takeCamGood=3 takeGoodSave=3 takeBad=0 takeTimedout=0 takePercent=100% getNum=3 getGood=3 getBad=0 getTimedout=0 getPercent=100%
1335385189724: Success! Client getting photo from remote region, showing photo...
1335385189724: Remote photo's length: 5306
1335385189673: Sending UDP payload: 6317
1335385189676: Received PROC_REPLY 11:5 (0,0)->(0,0), handing to UserApp
1335385189676: inside handleDSMReply. Now back in originator leader of region 0
1335385189676: DSM layer: Going to and from remote region took latency = 27
1335385189676: DSM layer: orig leader sent packet at 1335385189649 ~ received reply from remote leader at 1335385189676
1335385189677: Originator Region=0's Leader (for Client=5020) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385189678: change leader replyCounter to: 6
1335385189678: reply packet contains the newest photo/success info from the remote region
1335385189678: inside sendReplies of replyCount = 502000006
1335385189678: =======================
1335385189678: inside sendReplyRepeatingRunnable for replyCount = 502000006
1335385189678: Leader about to send REPLY packet, number: 502000006 type: 15 Leader in region: (0,0) to Client nodID: 5020
1335385189678: I (the leader) was also the originator client (id = 5020) so I hand the packet to my mux directly, without UDP
1335385189679: === Finished one round of sending REPLY Packet =======
1335385189716: mux: Inside mux Packet.CLIENT_REQUEST
1335385189717: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385189717: inside handleClientRequest. Originator leader of region 0
1335385189717: got new request, requestCounter = 5020012
1335385189717: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 502000006
1335385189717: Yay the last leg succeeded. Removing reply runnables ...
1335385189717: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 502000006
1335385189718: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 502000006
1335385189718: do not send ack for received final_leg_ack
1335385190544: inside sendPacket(Packet p)
1335385190547: Sending UDP payload: 446
1335385194259: Received UDP payload: 4110
1335385194267: mux: Inside mux Packet.CLIENT_REQUEST
1335385194278: Received UDP payload: 446
1335385194289: Received UDP payload: 446
1335385194303: Received UDP payload: 446
1335385194390: Received UDP payload: 446
1335385194407: Received UDP payload: 625
1335385194410: mux: Inside mux Packet.CLIENT_REQUEST
1335385194421: Received UDP payload: 625
1335385194423: mux: Inside mux Packet.CLIENT_REQUEST
1335385195473: Received UDP payload: 625
1335385195485: mux: Inside mux Packet.CLIENT_REQUEST
1335385195480: Received UDP payload: 625
1335385195511: mux: Inside mux Packet.CLIENT_REQUEST
1335385195512: Received UDP payload: 625
1335385195527: mux: Inside mux Packet.CLIENT_REQUEST
1335385195545: inside sendPacket(Packet p)
1335385195546: Sending UDP payload: 446
1335385200544: inside sendPacket(Packet p)
1335385200546: Sending UDP payload: 446
1335385201254: .......... GPS onLocationChanged ...... 
1335385201256: Loc = Location[mProvider=gps,mTime=1335385202000,mLatitude=42.357919,mLongitude=-71.09280083,mHasAltitude=true,mAltitude=-31.5,mHasSpeed=true,mSpeed=0.25,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=5.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385201257: GPS x/long:-71.09280083, GPS y/lat: 42.357919. Region width in x: 20.0
1335385201257: location PINPOINTS to region = 0.0, previous 0
1335385201259: Hysteresis is 0.0
1335385201259: stay at region 0
1335385202261: .......... GPS onLocationChanged ...... 
1335385202264: Loc = Location[mProvider=gps,mTime=1335385203000,mLatitude=42.3579291,mLongitude=-71.09280627,mHasAltitude=true,mAltitude=-32.099998474121094,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385202265: GPS x/long:-71.09280627, GPS y/lat: 42.3579291. Region width in x: 20.0
1335385202265: location PINPOINTS to region = 0.0, previous 0
1335385202266: Hysteresis is 0.0
1335385202267: stay at region 0
1335385202647: Received UDP payload: 446
1335385203265: .......... GPS onLocationChanged ...... 
1335385203267: Loc = Location[mProvider=gps,mTime=1335385204000,mLatitude=42.35793918,mLongitude=-71.09281357,mHasAltitude=true,mAltitude=-30.899999618530273,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385203269: GPS x/long:-71.09281357, GPS y/lat: 42.35793918. Region width in x: 20.0
1335385203270: location PINPOINTS to region = 0.0, previous 0
1335385203270: Hysteresis is 0.0
1335385203271: stay at region 0
1335385204261: .......... GPS onLocationChanged ...... 
1335385204264: Loc = Location[mProvider=gps,mTime=1335385205000,mLatitude=42.35794977,mLongitude=-71.09282126,mHasAltitude=true,mAltitude=-30.5,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=192.4,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385204265: GPS x/long:-71.09282126, GPS y/lat: 42.35794977. Region width in x: 20.0
1335385204266: location PINPOINTS to region = 0.0, previous 0
1335385204267: Hysteresis is 0.0
1335385204267: stay at region 0
1335385205229: .......... GPS onLocationChanged ...... 
1335385205230: Loc = Location[mProvider=gps,mTime=1335385206000,mLatitude=42.35796509,mLongitude=-71.09282589,mHasAltitude=true,mAltitude=-29.899999618530273,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=357.2,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (0,0)
1335385205230: GPS x/long:-71.09282589, GPS y/lat: 42.35796509. Region width in x: 20.0
1335385205231: location PINPOINTS to region = 1.0, previous 0
1335385205231: Hysteresis is 0.0
1335385205231: location CHANGED TO NEW region = (1,0) from region = (0,0)
1335385205231: moving from region (0,0), to (1,0)
1335385205232: change state to HANDING_OFF with parameter my previous/old region = (0,0) before helping to elect new leader in it. (btw, newRegion (1,0))
1335385205232: VCoreDaemon.java inside stateTransition ..........
1335385205232: removing leaderRequestRetryR because I'm doing a stateTransition
1335385205232: ..... VCoreDaemon.java targetState = HANDING_OFF
1335385205232: HANDING OFF setting leaderRegion = (0,0)
1335385205232: Trying to hand off leadership
1335385205233: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385205233: broadcasting LEADER_ELECT to old (0,0)
1335385205233: inside sendPacket(Packet p)
1335385205235: Sending UDP payload: 463
1335385205545: inside sendPacket(Packet p)
1335385205548: Sending UDP payload: 446
1335385206237: INSIDE ELECT CANDIDATE
1335385206237: CANDIDATE SIZE is 0
1335385206238: UserApp stopped.
1335385206238: DSMLayer stopped
1335385206238: serializing DSMLayer to JSON
1335385206453: .......... GPS onLocationChanged ...... 
1335385206453: Loc = Location[mProvider=gps,mTime=1335385207000,mLatitude=42.35798016,mLongitude=-71.09282936,mHasAltitude=true,mAltitude=-29.700000762939453,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=2.4,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385206454: GPS x/long:-71.09282936, GPS y/lat: 42.35798016. Region width in x: 20.0
1335385206454: location PINPOINTS to region = 1.0, previous 1
1335385206454: Hysteresis is 0.0
1335385206454: stay at region 1
1335385207231: .......... GPS onLocationChanged ...... 
1335385207233: Loc = Location[mProvider=gps,mTime=1335385208000,mLatitude=42.35799285,mLongitude=-71.09283721,mHasAltitude=true,mAltitude=-29.899999618530273,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=352.1,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385207234: GPS x/long:-71.09283721, GPS y/lat: 42.35799285. Region width in x: 20.0
1335385207234: location PINPOINTS to region = 1.0, previous 1
1335385207235: Hysteresis is 0.0
1335385207235: stay at region 1
1335385207832: old region empty, uploaded state to cloud in 1591ms as json 39243 bytes
1335385207833: VCoreDaemon.java inside stateTransition ..........
1335385207834: removing leaderRequestRetryR because I'm doing a stateTransition
1335385207835: ..... VCoreDaemon.java targetState = JOINING
1335385207835: posting leaderRequestRetryR because I'm joining
1335385207836: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385207844: sending LEADER_REQUEST
1335385207845: inside sendPacket(Packet p)
1335385207848: Sending UDP payload: 446
1335385207852: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385208153: sending LEADER_REQUEST
1335385208154: inside sendPacket(Packet p)
1335385208154: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385208158: Sending UDP payload: 446
1335385208245: .......... GPS onLocationChanged ...... 
1335385208246: Loc = Location[mProvider=gps,mTime=1335385209000,mLatitude=42.35800538,mLongitude=-71.0928468,mHasAltitude=true,mAltitude=-28.399999618530273,mHasSpeed=true,mSpeed=1.0,mHasBearing=true,mBearing=343.9,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385208246: GPS x/long:-71.0928468, GPS y/lat: 42.35800538. Region width in x: 20.0
1335385208247: location PINPOINTS to region = 1.0, previous 1
1335385208247: Hysteresis is 0.0
1335385208247: stay at region 1
1335385208455: sending LEADER_REQUEST
1335385208455: inside sendPacket(Packet p)
1335385208456: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385208457: Sending UDP payload: 446
1335385208756: sending LEADER_REQUEST
1335385208756: inside sendPacket(Packet p)
1335385208756: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385208757: Sending UDP payload: 446
1335385208836: inside leaderRequestTimeoutR beacuse I didn't hear a leader_reply and I'm removing leaderRequestRetryR because leader_request timed out
1335385208836: inside leaderRequestTimeoutR and my state was JOINING, so I'll try to stateTransition to LEADER
1335385208836: VCoreDaemon.java inside stateTransition ..........
1335385208837: removing leaderRequestRetryR because I'm doing a stateTransition
1335385208837: ..... VCoreDaemon.java targetState = LEADER
1335385208837: trying to take leadership to the cloud
1335385208955: cloud rejected leadership request or request failed, wait to retry
1335385209247: .......... GPS onLocationChanged ...... 
1335385209248: Loc = Location[mProvider=gps,mTime=1335385210000,mLatitude=42.358016,mLongitude=-71.09285752,mHasAltitude=true,mAltitude=-28.899999618530273,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=338.5,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385209248: GPS x/long:-71.09285752, GPS y/lat: 42.358016. Region width in x: 20.0
1335385209249: location PINPOINTS to region = 1.0, previous 1
1335385209249: Hysteresis is 0.0
1335385209249: stay at region 1
1335385209720: canPressButton = false. state is + 1 Can't press button because you're in a transient state (JOINING or HANDING_OFF)
1335385209724: can't press camera button yet
1335385210259: .......... GPS onLocationChanged ...... 
1335385210262: Loc = Location[mProvider=gps,mTime=1335385211000,mLatitude=42.35802429,mLongitude=-71.09286762,mHasAltitude=true,mAltitude=-28.399999618530273,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=338.5,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385210266: GPS x/long:-71.09286762, GPS y/lat: 42.35802429. Region width in x: 20.0
1335385210266: location PINPOINTS to region = 1.0, previous 1
1335385210266: Hysteresis is 0.0
1335385210267: stay at region 1
1335385212266: .......... GPS onLocationChanged ...... 
1335385212268: Loc = Location[mProvider=gps,mTime=1335385213000,mLatitude=42.35803417,mLongitude=-71.09288074,mHasAltitude=true,mAltitude=-27.899999618530273,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385212271: GPS x/long:-71.09288074, GPS y/lat: 42.35803417. Region width in x: 20.0
1335385212271: location PINPOINTS to region = 1.0, previous 1
1335385212273: Hysteresis is 0.0
1335385212274: stay at region 1
1335385214261: .......... GPS onLocationChanged ...... 
1335385214264: Loc = Location[mProvider=gps,mTime=1335385215000,mLatitude=42.35804217,mLongitude=-71.09289893,mHasAltitude=true,mAltitude=-28.600000381469727,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=338.5,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385214267: GPS x/long:-71.09289893, GPS y/lat: 42.35804217. Region width in x: 20.0
1335385214267: location PINPOINTS to region = 1.0, previous 1
1335385214267: Hysteresis is 0.0
1335385214268: stay at region 1
1335385216266: .......... GPS onLocationChanged ...... 
1335385216267: Loc = Location[mProvider=gps,mTime=1335385217000,mLatitude=42.35805339,mLongitude=-71.09290492,mHasAltitude=true,mAltitude=-29.100000381469727,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=338.5,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385216267: GPS x/long:-71.09290492, GPS y/lat: 42.35805339. Region width in x: 20.0
1335385216267: location PINPOINTS to region = 1.0, previous 1
1335385216267: Hysteresis is 0.0
1335385216267: stay at region 1
1335385218266: .......... GPS onLocationChanged ...... 
1335385218268: Loc = Location[mProvider=gps,mTime=1335385219000,mLatitude=42.35806785,mLongitude=-71.09290179,mHasAltitude=true,mAltitude=-28.600000381469727,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=338.5,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385218270: GPS x/long:-71.09290179, GPS y/lat: 42.35806785. Region width in x: 20.0
1335385218271: location PINPOINTS to region = 1.0, previous 1
1335385218272: Hysteresis is 0.0
1335385218272: stay at region 1
1335385220262: .......... GPS onLocationChanged ...... 
1335385220266: Loc = Location[mProvider=gps,mTime=1335385221000,mLatitude=42.35807436,mLongitude=-71.09287954,mHasAltitude=true,mAltitude=-28.399999618530273,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385220267: GPS x/long:-71.09287954, GPS y/lat: 42.35807436. Region width in x: 20.0
1335385220268: location PINPOINTS to region = 1.0, previous 1
1335385220269: Hysteresis is 0.0
1335385220269: stay at region 1
1335385223266: .......... GPS onLocationChanged ...... 
1335385223269: Loc = Location[mProvider=gps,mTime=1335385224000,mLatitude=42.35807756,mLongitude=-71.09285527,mHasAltitude=true,mAltitude=-28.200000762939453,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385223270: GPS x/long:-71.09285527, GPS y/lat: 42.35807756. Region width in x: 20.0
1335385223270: location PINPOINTS to region = 1.0, previous 1
1335385223271: Hysteresis is 0.0
1335385223271: stay at region 1
1335385229842: canPressButton = false. state is + 1 Can't press button because you're in a transient state (JOINING or HANDING_OFF)
1335385229850: can't press camera button yet
1335385230741: Received UDP payload: 446
1335385230756: Received UDP payload: 446
1335385230764: Received UDP payload: 446
1335385230773: Received UDP payload: 446
1335385230814: Received UDP payload: 625
1335385230821: mux: Inside mux Packet.CLIENT_REQUEST
1335385230824: Received UDP payload: 625
1335385230831: mux: Inside mux Packet.CLIENT_REQUEST
1335385230833: Received UDP payload: 625
1335385230841: mux: Inside mux Packet.CLIENT_REQUEST
1335385230846: Received UDP payload: 625
1335385230862: mux: Inside mux Packet.CLIENT_REQUEST
1335385237261: .......... GPS onLocationChanged ...... 
1335385237264: Loc = Location[mProvider=gps,mTime=1335385238000,mLatitude=42.35806363,mLongitude=-71.0928634,mHasAltitude=true,mAltitude=-27.100000381469727,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385237265: GPS x/long:-71.0928634, GPS y/lat: 42.35806363. Region width in x: 20.0
1335385237266: location PINPOINTS to region = 1.0, previous 1
1335385237266: Hysteresis is 0.0
1335385237267: stay at region 1
1335385239265: .......... GPS onLocationChanged ...... 
1335385239267: Loc = Location[mProvider=gps,mTime=1335385240000,mLatitude=42.35805021,mLongitude=-71.09286962,mHasAltitude=true,mAltitude=-27.100000381469727,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385239268: GPS x/long:-71.09286962, GPS y/lat: 42.35805021. Region width in x: 20.0
1335385239268: location PINPOINTS to region = 1.0, previous 1
1335385239269: Hysteresis is 0.0
1335385239270: stay at region 1
1335385242281: .......... GPS onLocationChanged ...... 
1335385242286: Loc = Location[mProvider=gps,mTime=1335385243000,mLatitude=42.35803905,mLongitude=-71.09287339,mHasAltitude=true,mAltitude=-26.600000381469727,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385242286: GPS x/long:-71.09287339, GPS y/lat: 42.35803905. Region width in x: 20.0
1335385242286: location PINPOINTS to region = 1.0, previous 1
1335385242287: Hysteresis is 0.0
1335385242287: stay at region 1
1335385254262: .......... GPS onLocationChanged ...... 
1335385254264: Loc = Location[mProvider=gps,mTime=1335385255000,mLatitude=42.35803394,mLongitude=-71.09288342,mHasAltitude=true,mAltitude=-26.600000381469727,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385254268: GPS x/long:-71.09288342, GPS y/lat: 42.35803394. Region width in x: 20.0
1335385254268: location PINPOINTS to region = 1.0, previous 1
1335385254268: Hysteresis is 0.0
1335385254268: stay at region 1
1335385264441: Received UDP payload: 446
1335385264567: Received UDP payload: 446
1335385264579: Received UDP payload: 446
1335385264612: Received UDP payload: 446
1335385264690: Received UDP payload: 446
1335385264744: Received UDP payload: 446
1335385264766: Received UDP payload: 446
1335385264779: Received UDP payload: 446
1335385264910: Received UDP payload: 446
1335385264985: Received UDP payload: 446
1335385265258: .......... GPS onLocationChanged ...... 
1335385265266: Loc = Location[mProvider=gps,mTime=1335385266000,mLatitude=42.35803959,mLongitude=-71.09289751,mHasAltitude=true,mAltitude=-26.100000381469727,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=329.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385265266: GPS x/long:-71.09289751, GPS y/lat: 42.35803959. Region width in x: 20.0
1335385265267: location PINPOINTS to region = 1.0, previous 1
1335385265267: Hysteresis is 0.0
1335385265267: stay at region 1
1335385266541: canPressButton = false. state is + 1 Can't press button because you're in a transient state (JOINING or HANDING_OFF)
1335385266551: can't press camera button yet
1335385268261: .......... GPS onLocationChanged ...... 
1335385268268: Loc = Location[mProvider=gps,mTime=1335385269000,mLatitude=42.35804987,mLongitude=-71.09290888,mHasAltitude=true,mAltitude=-25.700000762939453,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=329.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385268269: GPS x/long:-71.09290888, GPS y/lat: 42.35804987. Region width in x: 20.0
1335385268269: location PINPOINTS to region = 1.0, previous 1
1335385268269: Hysteresis is 0.0
1335385268269: stay at region 1
1335385269259: .......... GPS onLocationChanged ...... 
1335385269262: Loc = Location[mProvider=gps,mTime=1335385270000,mLatitude=42.35806245,mLongitude=-71.0929146,mHasAltitude=true,mAltitude=-23.899999618530273,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=338.8,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385269263: GPS x/long:-71.0929146, GPS y/lat: 42.35806245. Region width in x: 20.0
1335385269268: location PINPOINTS to region = 1.0, previous 1
1335385269268: Hysteresis is 0.0
1335385269268: stay at region 1
1335385270269: .......... GPS onLocationChanged ...... 
1335385270272: Loc = Location[mProvider=gps,mTime=1335385271000,mLatitude=42.35807922,mLongitude=-71.09291966,mHasAltitude=true,mAltitude=-23.5,mHasSpeed=true,mSpeed=1.0,mHasBearing=true,mBearing=338.3,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385270285: GPS x/long:-71.09291966, GPS y/lat: 42.35807922. Region width in x: 20.0
1335385270286: location PINPOINTS to region = 1.0, previous 1
1335385270286: Hysteresis is 0.0
1335385270287: stay at region 1
1335385271256: .......... GPS onLocationChanged ...... 
1335385271259: Loc = Location[mProvider=gps,mTime=1335385272000,mLatitude=42.35809526,mLongitude=-71.09292586,mHasAltitude=true,mAltitude=-22.5,mHasSpeed=true,mSpeed=1.0,mHasBearing=true,mBearing=337.5,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385271260: GPS x/long:-71.09292586, GPS y/lat: 42.35809526. Region width in x: 20.0
1335385271260: location PINPOINTS to region = 1.0, previous 1
1335385271261: Hysteresis is 0.0
1335385271262: stay at region 1
1335385272257: .......... GPS onLocationChanged ...... 
1335385272259: Loc = Location[mProvider=gps,mTime=1335385273000,mLatitude=42.35810972,mLongitude=-71.0929316,mHasAltitude=true,mAltitude=-22.399999618530273,mHasSpeed=true,mSpeed=1.0,mHasBearing=true,mBearing=335.9,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385272260: GPS x/long:-71.0929316, GPS y/lat: 42.35810972. Region width in x: 20.0
1335385272261: location PINPOINTS to region = 1.0, previous 1
1335385272261: Hysteresis is 0.0
1335385272262: stay at region 1
1335385272868: Received UDP payload: 446
1335385272873: Received UDP payload: 463
1335385272883: Received UDP payload: 446
1335385272889: Received UDP payload: 446
1335385272894: Received UDP payload: 446
1335385272908: Received UDP payload: 446
1335385273141: Received UDP payload: 625
1335385273148: mux: Inside mux Packet.CLIENT_REQUEST
1335385273163: Received UDP payload: 625
1335385273171: mux: Inside mux Packet.CLIENT_REQUEST
1335385273245: .......... GPS onLocationChanged ...... 
1335385273246: Loc = Location[mProvider=gps,mTime=1335385274000,mLatitude=42.35812356,mLongitude=-71.09293435,mHasAltitude=true,mAltitude=-22.700000762939453,mHasSpeed=true,mSpeed=1.0,mHasBearing=true,mBearing=337.9,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385273246: GPS x/long:-71.09293435, GPS y/lat: 42.35812356. Region width in x: 20.0
1335385273246: location PINPOINTS to region = 2.0, previous 1
1335385273246: Hysteresis is 0.0
1335385273246: location CHANGED TO NEW region = (2,0) from region = (1,0)
1335385273246: moving from region (1,0), to (2,0)
1335385273247: VCoreDaemon.java inside stateTransition ..........
1335385273247: removing leaderRequestRetryR because I'm doing a stateTransition
1335385273247: ..... VCoreDaemon.java targetState = JOINING
1335385273247: posting leaderRequestRetryR because I'm joining
1335385273247: sending LEADER_REQUEST
1335385273247: inside sendPacket(Packet p)
1335385273247: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385273248: Sending UDP payload: 446
1335385273250: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385273548: sending LEADER_REQUEST
1335385273548: inside sendPacket(Packet p)
1335385273548: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385273549: Sending UDP payload: 446
1335385273849: sending LEADER_REQUEST
1335385273849: inside sendPacket(Packet p)
1335385273849: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385273851: Sending UDP payload: 446
1335385274150: sending LEADER_REQUEST
1335385274150: inside sendPacket(Packet p)
1335385274150: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385274153: Sending UDP payload: 446
1335385274234: .......... GPS onLocationChanged ...... 
1335385274235: Loc = Location[mProvider=gps,mTime=1335385275000,mLatitude=42.35813553,mLongitude=-71.09293275,mHasAltitude=true,mAltitude=-23.0,mHasSpeed=true,mSpeed=1.0,mHasBearing=true,mBearing=343.7,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385274236: GPS x/long:-71.09293275, GPS y/lat: 42.35813553. Region width in x: 20.0
1335385274236: location PINPOINTS to region = 2.0, previous 2
1335385274236: Hysteresis is 0.0
1335385274237: stay at region 2
1335385274251: inside leaderRequestTimeoutR beacuse I didn't hear a leader_reply and I'm removing leaderRequestRetryR because leader_request timed out
1335385274251: inside leaderRequestTimeoutR and my state was JOINING, so I'll try to stateTransition to LEADER
1335385274251: VCoreDaemon.java inside stateTransition ..........
1335385274252: removing leaderRequestRetryR because I'm doing a stateTransition
1335385274252: ..... VCoreDaemon.java targetState = LEADER
1335385274252: trying to take leadership to the cloud
1335385274691: cloud accepted leadership request, returned csm bytes size 1307
1335385274702: ..... VCoreDaemon.java targetState = LEADER and csm is not null --> csm.stop()
1335385274703: DSMLayer stopped
1335385274703: ..... VCoreDaemon.java targetState = LEADER and create new DSMLayer !!!! :D:D:D:D:D
1335385274704: *** Starting CSM Layer ***
1335385274704: *** CSM Layer starting with cache disabled ***
1335385274705: *** CSM Layer starting with forwarding enabled ***
1335385274817: DSMLayer starting
1335385274828: UserApp started.
1335385274828: loaded csm data from cloud
1335385274862: inside sendPacket(Packet p)
1335385274864: Sending UDP payload: 3512
1335385274865: now fully up as LEADER (id=5020) of (2,0)
1335385274865: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385275225: .......... GPS onLocationChanged ...... 
1335385275227: Loc = Location[mProvider=gps,mTime=1335385276000,mLatitude=42.358148,mLongitude=-71.09292776,mHasAltitude=true,mAltitude=-22.5,mHasSpeed=true,mSpeed=1.0,mHasBearing=true,mBearing=347.4,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385275228: GPS x/long:-71.09292776, GPS y/lat: 42.358148. Region width in x: 20.0
1335385275228: location PINPOINTS to region = 2.0, previous 2
1335385275229: Hysteresis is 0.0
1335385275229: stay at region 2
1335385275599: inside sendPacket(Packet p)
1335385275603: Sending UDP payload: 446
1335385276256: .......... GPS onLocationChanged ...... 
1335385276259: Loc = Location[mProvider=gps,mTime=1335385277000,mLatitude=42.35816029,mLongitude=-71.09292722,mHasAltitude=true,mAltitude=-22.600000381469727,mHasSpeed=true,mSpeed=1.0,mHasBearing=true,mBearing=345.7,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385276260: GPS x/long:-71.09292722, GPS y/lat: 42.35816029. Region width in x: 20.0
1335385276261: location PINPOINTS to region = 2.0, previous 2
1335385276261: Hysteresis is 0.0
1335385276262: stay at region 2
1335385277256: .......... GPS onLocationChanged ...... 
1335385277259: Loc = Location[mProvider=gps,mTime=1335385278000,mLatitude=42.35817309,mLongitude=-71.09292211,mHasAltitude=true,mAltitude=-22.799999237060547,mHasSpeed=true,mSpeed=1.0,mHasBearing=true,mBearing=348.4,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385277260: GPS x/long:-71.09292211, GPS y/lat: 42.35817309. Region width in x: 20.0
1335385277261: location PINPOINTS to region = 2.0, previous 2
1335385277262: Hysteresis is 0.0
1335385277263: stay at region 2
1335385278262: .......... GPS onLocationChanged ...... 
1335385278266: Loc = Location[mProvider=gps,mTime=1335385279000,mLatitude=42.35818566,mLongitude=-71.09291978,mHasAltitude=true,mAltitude=-20.899999618530273,mHasSpeed=true,mSpeed=1.0,mHasBearing=true,mBearing=347.7,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385278266: GPS x/long:-71.09291978, GPS y/lat: 42.35818566. Region width in x: 20.0
1335385278266: location PINPOINTS to region = 2.0, previous 2
1335385278266: Hysteresis is 0.0
1335385278267: stay at region 2
1335385279316: .......... GPS onLocationChanged ...... 
1335385279318: Loc = Location[mProvider=gps,mTime=1335385280000,mLatitude=42.35819605,mLongitude=-71.09292017,mHasAltitude=true,mAltitude=-21.700000762939453,mHasSpeed=true,mSpeed=1.0,mHasBearing=true,mBearing=347.2,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385279319: GPS x/long:-71.09292017, GPS y/lat: 42.35819605. Region width in x: 20.0
1335385279320: location PINPOINTS to region = 2.0, previous 2
1335385279321: Hysteresis is 0.0
1335385279321: stay at region 2
1335385280260: .......... GPS onLocationChanged ...... 
1335385280262: Loc = Location[mProvider=gps,mTime=1335385281000,mLatitude=42.35820572,mLongitude=-71.09292027,mHasAltitude=true,mAltitude=-21.399999618530273,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=351.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385280266: GPS x/long:-71.09292027, GPS y/lat: 42.35820572. Region width in x: 20.0
1335385280266: location PINPOINTS to region = 2.0, previous 2
1335385280267: Hysteresis is 0.0
1335385280267: stay at region 2
1335385280600: inside sendPacket(Packet p)
1335385280601: Sending UDP payload: 446
1335385282261: .......... GPS onLocationChanged ...... 
1335385282264: Loc = Location[mProvider=gps,mTime=1335385283000,mLatitude=42.35822144,mLongitude=-71.09291716,mHasAltitude=true,mAltitude=-21.799999237060547,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=350.6,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385282265: GPS x/long:-71.09291716, GPS y/lat: 42.35822144. Region width in x: 20.0
1335385282267: location PINPOINTS to region = 2.0, previous 2
1335385282268: Hysteresis is 0.0
1335385282268: stay at region 2
1335385284260: .......... GPS onLocationChanged ...... 
1335385284262: Loc = Location[mProvider=gps,mTime=1335385285000,mLatitude=42.35823372,mLongitude=-71.09291589,mHasAltitude=true,mAltitude=-23.200000762939453,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=350.6,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385284266: GPS x/long:-71.09291589, GPS y/lat: 42.35823372. Region width in x: 20.0
1335385284266: location PINPOINTS to region = 2.0, previous 2
1335385284267: Hysteresis is 0.0
1335385284267: stay at region 2
1335385285600: inside sendPacket(Packet p)
1335385285615: Sending UDP payload: 446
1335385290602: inside sendPacket(Packet p)
1335385290604: Sending UDP payload: 446
1335385291255: .......... GPS onLocationChanged ...... 
1335385291257: Loc = Location[mProvider=gps,mTime=1335385292000,mLatitude=42.35822894,mLongitude=-71.09292771,mHasAltitude=true,mAltitude=-24.799999237060547,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385291259: GPS x/long:-71.09292771, GPS y/lat: 42.35822894. Region width in x: 20.0
1335385291259: location PINPOINTS to region = 2.0, previous 2
1335385291260: Hysteresis is 0.0
1335385291260: stay at region 2
1335385294277: .......... GPS onLocationChanged ...... 
1335385294277: Loc = Location[mProvider=gps,mTime=1335385295000,mLatitude=42.35822644,mLongitude=-71.09294015,mHasAltitude=true,mAltitude=-25.200000762939453,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385294278: GPS x/long:-71.09294015, GPS y/lat: 42.35822644. Region width in x: 20.0
1335385294278: location PINPOINTS to region = 2.0, previous 2
1335385294278: Hysteresis is 0.0
1335385294278: stay at region 2
1335385295603: inside sendPacket(Packet p)
1335385295606: Sending UDP payload: 446
1335385299267: .......... GPS onLocationChanged ...... 
1335385299268: Loc = Location[mProvider=gps,mTime=1335385300000,mLatitude=42.35821807,mLongitude=-71.09293328,mHasAltitude=true,mAltitude=-25.299999237060547,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=350.6,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385299268: GPS x/long:-71.09293328, GPS y/lat: 42.35821807. Region width in x: 20.0
1335385299268: location PINPOINTS to region = 2.0, previous 2
1335385299268: Hysteresis is 0.0
1335385299268: stay at region 2
1335385300604: inside sendPacket(Packet p)
1335385300608: Sending UDP payload: 446
1335385301259: .......... GPS onLocationChanged ...... 
1335385301261: Loc = Location[mProvider=gps,mTime=1335385302000,mLatitude=42.3582074,mLongitude=-71.09292779,mHasAltitude=true,mAltitude=-24.600000381469727,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=350.6,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385301263: GPS x/long:-71.09292779, GPS y/lat: 42.3582074. Region width in x: 20.0
1335385301264: location PINPOINTS to region = 2.0, previous 2
1335385301264: Hysteresis is 0.0
1335385301265: stay at region 2
1335385303266: .......... GPS onLocationChanged ...... 
1335385303267: Loc = Location[mProvider=gps,mTime=1335385304000,mLatitude=42.35819519,mLongitude=-71.09292455,mHasAltitude=true,mAltitude=-25.0,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=350.6,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385303267: GPS x/long:-71.09292455, GPS y/lat: 42.35819519. Region width in x: 20.0
1335385303267: location PINPOINTS to region = 2.0, previous 2
1335385303267: Hysteresis is 0.0
1335385303267: stay at region 2
1335385305606: inside sendPacket(Packet p)
1335385305610: Sending UDP payload: 446
1335385306266: .......... GPS onLocationChanged ...... 
1335385306267: Loc = Location[mProvider=gps,mTime=1335385307000,mLatitude=42.35818488,mLongitude=-71.09292376,mHasAltitude=true,mAltitude=-22.5,mHasSpeed=true,mSpeed=0.25,mHasBearing=true,mBearing=350.6,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385306267: GPS x/long:-71.09292376, GPS y/lat: 42.35818488. Region width in x: 20.0
1335385306267: location PINPOINTS to region = 2.0, previous 2
1335385306267: Hysteresis is 0.0
1335385306267: stay at region 2
1335385308261: .......... GPS onLocationChanged ...... 
1335385308264: Loc = Location[mProvider=gps,mTime=1335385309000,mLatitude=42.35817602,mLongitude=-71.0929199,mHasAltitude=true,mAltitude=-23.5,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=350.6,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385308265: GPS x/long:-71.0929199, GPS y/lat: 42.35817602. Region width in x: 20.0
1335385308265: location PINPOINTS to region = 2.0, previous 2
1335385308266: Hysteresis is 0.0
1335385308267: stay at region 2
1335385310262: .......... GPS onLocationChanged ...... 
1335385310267: Loc = Location[mProvider=gps,mTime=1335385311000,mLatitude=42.35816359,mLongitude=-71.09290776,mHasAltitude=true,mAltitude=-24.299999237060547,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=148.8,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385310268: GPS x/long:-71.09290776, GPS y/lat: 42.35816359. Region width in x: 20.0
1335385310268: location PINPOINTS to region = 2.0, previous 2
1335385310268: Hysteresis is 0.0
1335385310268: stay at region 2
1335385310606: inside sendPacket(Packet p)
1335385310607: Sending UDP payload: 446
1335385312266: .......... GPS onLocationChanged ...... 
1335385312267: Loc = Location[mProvider=gps,mTime=1335385313000,mLatitude=42.35815367,mLongitude=-71.09289566,mHasAltitude=true,mAltitude=-24.299999237060547,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385312267: GPS x/long:-71.09289566, GPS y/lat: 42.35815367. Region width in x: 20.0
1335385312267: location PINPOINTS to region = 2.0, previous 2
1335385312267: Hysteresis is 0.0
1335385312267: stay at region 2
1335385314267: .......... GPS onLocationChanged ...... 
1335385314269: Loc = Location[mProvider=gps,mTime=1335385315000,mLatitude=42.35814555,mLongitude=-71.09288681,mHasAltitude=true,mAltitude=-23.5,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385314270: GPS x/long:-71.09288681, GPS y/lat: 42.35814555. Region width in x: 20.0
1335385314271: location PINPOINTS to region = 2.0, previous 2
1335385314272: Hysteresis is 0.0
1335385314273: stay at region 2
1335385315607: inside sendPacket(Packet p)
1335385315611: Sending UDP payload: 446
1335385316262: .......... GPS onLocationChanged ...... 
1335385316268: Loc = Location[mProvider=gps,mTime=1335385317000,mLatitude=42.35813304,mLongitude=-71.09287825,mHasAltitude=true,mAltitude=-24.100000381469727,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385316268: GPS x/long:-71.09287825, GPS y/lat: 42.35813304. Region width in x: 20.0
1335385316268: location PINPOINTS to region = 2.0, previous 2
1335385316268: Hysteresis is 0.0
1335385316268: stay at region 2
1335385317260: .......... GPS onLocationChanged ...... 
1335385317262: Loc = Location[mProvider=gps,mTime=1335385318000,mLatitude=42.35812452,mLongitude=-71.09287425,mHasAltitude=true,mAltitude=-24.700000762939453,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335385317266: GPS x/long:-71.09287425, GPS y/lat: 42.35812452. Region width in x: 20.0
1335385317266: location PINPOINTS to region = 1.0, previous 2
1335385317266: Hysteresis is 0.0
1335385317266: location CHANGED TO NEW region = (1,0) from region = (2,0)
1335385317267: moving from region (2,0), to (1,0)
1335385317267: change state to HANDING_OFF with parameter my previous/old region = (2,0) before helping to elect new leader in it. (btw, newRegion (1,0))
1335385317267: VCoreDaemon.java inside stateTransition ..........
1335385317267: removing leaderRequestRetryR because I'm doing a stateTransition
1335385317267: ..... VCoreDaemon.java targetState = HANDING_OFF
1335385317268: HANDING OFF setting leaderRegion = (2,0)
1335385317268: Trying to hand off leadership
1335385317268: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385317268: broadcasting LEADER_ELECT to old (2,0)
1335385317268: inside sendPacket(Packet p)
1335385317269: Sending UDP payload: 463
1335385317489: Received UDP payload: 625
1335385317491: mux: Inside mux Packet.CLIENT_REQUEST
1335385317496: Received UDP payload: 625
1335385317498: mux: Inside mux Packet.CLIENT_REQUEST
1335385317534: Received UDP payload: 625
1335385317535: mux: Inside mux Packet.CLIENT_REQUEST
1335385317540: Received UDP payload: 625
1335385317542: mux: Inside mux Packet.CLIENT_REQUEST
1335385317552: Received UDP payload: 625
1335385317555: mux: Inside mux Packet.CLIENT_REQUEST
1335385317563: Received UDP payload: 446
1335385317575: Received UDP payload: 446
1335385318270: INSIDE ELECT CANDIDATE
1335385318271: CANDIDATE SIZE is 0
1335385318271: UserApp stopped.
1335385318271: DSMLayer stopped
1335385318271: serializing DSMLayer to JSON
1335385318902: old region empty, uploaded state to cloud in 630ms as json 1306 bytes
1335385318906: VCoreDaemon.java inside stateTransition ..........
1335385318906: removing leaderRequestRetryR because I'm doing a stateTransition
1335385318907: ..... VCoreDaemon.java targetState = JOINING
1335385318907: posting leaderRequestRetryR because I'm joining
1335385318908: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385318908: sending LEADER_REQUEST
1335385318908: inside sendPacket(Packet p)
1335385318912: Sending UDP payload: 446
1335385318913: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385318930: Received UDP payload: 446
1335385318998: Received UDP payload: 446
1335385319003: Received UDP payload: 446
1335385319215: sending LEADER_REQUEST
1335385319215: inside sendPacket(Packet p)
1335385319216: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385319219: Sending UDP payload: 446
1335385319258: .......... GPS onLocationChanged ...... 
1335385319261: Loc = Location[mProvider=gps,mTime=1335385320000,mLatitude=42.35810871,mLongitude=-71.0928666,mHasAltitude=true,mAltitude=-23.600000381469727,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385319262: GPS x/long:-71.0928666, GPS y/lat: 42.35810871. Region width in x: 20.0
1335385319262: location PINPOINTS to region = 1.0, previous 1
1335385319263: Hysteresis is 0.0
1335385319264: stay at region 1
1335385319517: sending LEADER_REQUEST
1335385319517: inside sendPacket(Packet p)
1335385319517: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385319518: Sending UDP payload: 446
1335385319818: sending LEADER_REQUEST
1335385319818: inside sendPacket(Packet p)
1335385319818: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385319821: Sending UDP payload: 446
1335385319907: inside leaderRequestTimeoutR beacuse I didn't hear a leader_reply and I'm removing leaderRequestRetryR because leader_request timed out
1335385319908: inside leaderRequestTimeoutR and my state was JOINING, so I'll try to stateTransition to LEADER
1335385319908: VCoreDaemon.java inside stateTransition ..........
1335385319909: removing leaderRequestRetryR because I'm doing a stateTransition
1335385319909: ..... VCoreDaemon.java targetState = LEADER
1335385319909: trying to take leadership to the cloud
1335385320101: cloud rejected leadership request or request failed, wait to retry
1335385320257: Received UDP payload: 6853
1335385320259: mux: Inside mux Packet.CLIENT_REQUEST
1335385321267: .......... GPS onLocationChanged ...... 
1335385321268: Loc = Location[mProvider=gps,mTime=1335385322000,mLatitude=42.35809421,mLongitude=-71.09286527,mHasAltitude=true,mAltitude=-23.799999237060547,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385321268: GPS x/long:-71.09286527, GPS y/lat: 42.35809421. Region width in x: 20.0
1335385321269: location PINPOINTS to region = 1.0, previous 1
1335385321269: Hysteresis is 0.0
1335385321269: stay at region 1
1335385321618: Received UDP payload: 6853
1335385321620: mux: Inside mux Packet.CLIENT_REQUEST
1335385321624: Received UDP payload: 446
1335385321637: Received UDP payload: 446
1335385323301: .......... GPS onLocationChanged ...... 
1335385323304: Loc = Location[mProvider=gps,mTime=1335385324000,mLatitude=42.35808047,mLongitude=-71.09286771,mHasAltitude=true,mAltitude=-24.0,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385323307: GPS x/long:-71.09286771, GPS y/lat: 42.35808047. Region width in x: 20.0
1335385323307: location PINPOINTS to region = 1.0, previous 1
1335385323307: Hysteresis is 0.0
1335385323307: stay at region 1
1335385325258: .......... GPS onLocationChanged ...... 
1335385325259: Loc = Location[mProvider=gps,mTime=1335385326000,mLatitude=42.35806748,mLongitude=-71.09286731,mHasAltitude=true,mAltitude=-23.600000381469727,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385325259: GPS x/long:-71.09286731, GPS y/lat: 42.35806748. Region width in x: 20.0
1335385325259: location PINPOINTS to region = 1.0, previous 1
1335385325259: Hysteresis is 0.0
1335385325259: stay at region 1
1335385328269: .......... GPS onLocationChanged ...... 
1335385328269: Loc = Location[mProvider=gps,mTime=1335385329000,mLatitude=42.35805882,mLongitude=-71.09287077,mHasAltitude=true,mAltitude=-22.899999618530273,mHasSpeed=true,mSpeed=0.25,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385328270: GPS x/long:-71.09287077, GPS y/lat: 42.35805882. Region width in x: 20.0
1335385328270: location PINPOINTS to region = 1.0, previous 1
1335385328270: Hysteresis is 0.0
1335385328270: stay at region 1
1335385334206: canPressButton = false. state is + 1 Can't press button because you're in a transient state (JOINING or HANDING_OFF)
1335385334209: can't press camera button yet
1335385336263: .......... GPS onLocationChanged ...... 
1335385336266: Loc = Location[mProvider=gps,mTime=1335385337000,mLatitude=42.35805119,mLongitude=-71.09286177,mHasAltitude=true,mAltitude=-24.700000762939453,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385336268: GPS x/long:-71.09286177, GPS y/lat: 42.35805119. Region width in x: 20.0
1335385336268: location PINPOINTS to region = 1.0, previous 1
1335385336269: Hysteresis is 0.0
1335385336270: stay at region 1
1335385339263: .......... GPS onLocationChanged ...... 
1335385339265: Loc = Location[mProvider=gps,mTime=1335385340000,mLatitude=42.35804244,mLongitude=-71.09286887,mHasAltitude=true,mAltitude=-25.100000381469727,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385339268: GPS x/long:-71.09286887, GPS y/lat: 42.35804244. Region width in x: 20.0
1335385339268: location PINPOINTS to region = 1.0, previous 1
1335385339269: Hysteresis is 0.0
1335385339269: stay at region 1
1335385341277: .......... GPS onLocationChanged ...... 
1335385341280: Loc = Location[mProvider=gps,mTime=1335385342000,mLatitude=42.35803636,mLongitude=-71.09287858,mHasAltitude=true,mAltitude=-24.799999237060547,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385341281: GPS x/long:-71.09287858, GPS y/lat: 42.35803636. Region width in x: 20.0
1335385341282: location PINPOINTS to region = 1.0, previous 1
1335385341282: Hysteresis is 0.0
1335385341283: stay at region 1
1335385344262: .......... GPS onLocationChanged ...... 
1335385344265: Loc = Location[mProvider=gps,mTime=1335385345000,mLatitude=42.35802989,mLongitude=-71.09289045,mHasAltitude=true,mAltitude=-24.600000381469727,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385344268: GPS x/long:-71.09289045, GPS y/lat: 42.35802989. Region width in x: 20.0
1335385344268: location PINPOINTS to region = 1.0, previous 1
1335385344269: Hysteresis is 0.0
1335385344269: stay at region 1
1335385358951: Received UDP payload: 446
1335385358965: Received UDP payload: 446
1335385358975: Received UDP payload: 446
1335385382556: Received UDP payload: 446
1335385382566: Received UDP payload: 446
1335385382583: Received UDP payload: 446
1335385382616: Received UDP payload: 446
1335385382629: Received UDP payload: 446
1335385382638: Received UDP payload: 446
1335385382662: Received UDP payload: 446
1335385382676: Received UDP payload: 446
1335385382727: Received UDP payload: 446
1335385391472: Received UDP payload: 446
1335385391746: Received UDP payload: 446
1335385391764: Received UDP payload: 446
1335385391771: Received UDP payload: 446
1335385391792: Received UDP payload: 446
1335385391820: Received UDP payload: 446
1335385391831: Received UDP payload: 446
1335385391840: Received UDP payload: 446
1335385393061: Received UDP payload: 625
1335385393070: mux: Inside mux Packet.CLIENT_REQUEST
1335385393082: Received UDP payload: 625
1335385393100: mux: Inside mux Packet.CLIENT_REQUEST
1335385393101: Received UDP payload: 625
1335385393107: mux: Inside mux Packet.CLIENT_REQUEST
1335385393116: Received UDP payload: 625
1335385393118: mux: Inside mux Packet.CLIENT_REQUEST
1335385393118: Received UDP payload: 446
1335385393120: Received UDP payload: 446
1335385393127: Received UDP payload: 446
1335385393147: Received UDP payload: 446
1335385393158: Received UDP payload: 446
1335385394398: Received UDP payload: 446
1335385394412: Received UDP payload: 446
1335385394436: Received UDP payload: 446
1335385394447: Received UDP payload: 446
1335385394456: Received UDP payload: 446
1335385394465: Received UDP payload: 446
1335385400117: Received UDP payload: 446
1335385400128: Received UDP payload: 446
1335385400136: Received UDP payload: 446
1335385400156: Received UDP payload: 446
1335385400591: Received UDP payload: 446
1335385400599: removing leaderRequestRetryR because heard Packet.Heartbeat
1335385400599: heard HEARTBEAT from 5008, now following
1335385400600: VCoreDaemon.java inside stateTransition ..........
1335385400600: removing leaderRequestRetryR because I'm doing a stateTransition
1335385400600: ..... VCoreDaemon.java targetState = NONLEADER
1335385400601: DSMLayer stopped
1335385400601: now NONLEADER (id=5020) following LEADER (id=5008) in (1,0)
1335385400602: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385400641: Received UDP payload: 446
1335385400824: Received UDP payload: 446
1335385401829: Received UDP payload: 446
1335385401923: Received UDP payload: 446
1335385401935: Received UDP payload: 446
1335385401942: Received UDP payload: 446
1335385402024: Received UDP payload: 446
1335385402054: Received UDP payload: 446
1335385406451: Received UDP payload: 446
1335385406492: Received UDP payload: 446
1335385406523: Received UDP payload: 446
1335385406569: Received UDP payload: 446
1335385415107: Received UDP payload: 22335
1335385415997: Received UDP payload: 22335
1335385416446: Received UDP payload: 22335
1335385416454: Received UDP payload: 446
1335385416461: Received UDP payload: 446
1335385418266: Received UDP payload: 446
1335385418278: Received UDP payload: 446
1335385418289: Received UDP payload: 446
1335385418304: Received UDP payload: 446
1335385420689: Missed 3 HEARTBEATS from LEADER, going to JOINING.
1335385420689: VCoreDaemon.java inside stateTransition ..........
1335385420689: removing leaderRequestRetryR because I'm doing a stateTransition
1335385420690: ..... VCoreDaemon.java targetState = JOINING
1335385420690: posting leaderRequestRetryR because I'm joining
1335385420690: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385420690: sending LEADER_REQUEST
1335385420690: inside sendPacket(Packet p)
1335385420690: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385420692: Sending UDP payload: 446
1335385420991: sending LEADER_REQUEST
1335385420992: inside sendPacket(Packet p)
1335385420992: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385420995: Sending UDP payload: 446
1335385421293: sending LEADER_REQUEST
1335385421293: inside sendPacket(Packet p)
1335385421294: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385421306: Sending UDP payload: 446
1335385421595: sending LEADER_REQUEST
1335385421595: inside sendPacket(Packet p)
1335385421596: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385421609: Sending UDP payload: 446
1335385421690: inside leaderRequestTimeoutR beacuse I didn't hear a leader_reply and I'm removing leaderRequestRetryR because leader_request timed out
1335385421691: inside leaderRequestTimeoutR and my state was JOINING, so I'll try to stateTransition to LEADER
1335385421691: VCoreDaemon.java inside stateTransition ..........
1335385421691: removing leaderRequestRetryR because I'm doing a stateTransition
1335385421691: ..... VCoreDaemon.java targetState = LEADER
1335385421691: trying to take leadership to the cloud
1335385425145: cloud rejected leadership request or request failed, wait to retry
1335385426279: Received UDP payload: 446
1335385427827: Received UDP payload: 446
1335385427837: removing leaderRequestRetryR because heard Packet.Heartbeat
1335385427837: heard HEARTBEAT from 5018, now following
1335385427837: VCoreDaemon.java inside stateTransition ..........
1335385427838: removing leaderRequestRetryR because I'm doing a stateTransition
1335385427838: ..... VCoreDaemon.java targetState = NONLEADER
1335385427839: now NONLEADER (id=5020) following LEADER (id=5018) in (1,0)
1335385427839: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385427858: Received UDP payload: 446
1335385427868: Received UDP payload: 446
1335385427883: Received UDP payload: 446
1335385427885: Received UDP payload: 446
1335385427890: Received UDP payload: 446
1335385427902: Received UDP payload: 446
1335385428143: Received UDP payload: 12199
1335385428314: Received UDP payload: 12199
1335385428748: Received UDP payload: 12199
1335385428777: Received UDP payload: 989
1335385428781: mux: GOT CSM_Msg
1335385428785: Received UDP payload: 446
1335385428787: mux: Inside Packet.SERVER_REPLY
1335385428787: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385428787: Received UDP payload: 446
1335385428788: mux: Inside Packet.SERVER_REPLY
1335385428789: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385428914: canPressButton = TRUE
1335385428914: areButtonsEnabled --> false
1335385428915: disabling buttons ...
1335385428915: took picture disableButtonsR
1335385428915: areButtonsEnabled --> false
1335385428946: reg=1 id=5020 state=3 regionWidth=20.0 hyst=0.0 takeNum=4 takeCamGood=3 takeGoodSave=3 takeBad=0 takeTimedout=0 takePercent=75% getNum=3 getGood=3 getBad=0 getTimedout=0 getPercent=100%
1335385428946: Clicked take picture button ..
1335385430041: Received UDP payload: 12483
1335385430064: Received UDP payload: 989
1335385430066: mux: GOT CSM_Msg
1335385430095: Received UDP payload: 989
1335385430099: mux: GOT CSM_Msg
1335385430423: inside HandlePictureStorage onPictureTaken()
1335385430424: reg=1 id=5020 state=3 regionWidth=20.0 hyst=0.0 takeNum=4 takeCamGood=4 takeGoodSave=3 takeBad=0 takeTimedout=0 takePercent=75% getNum=3 getGood=3 getBad=0 getTimedout=0 getPercent=100%
1335385430688: Picture successfully taken, ORIG BYTE LENGTH = 3691318
1335385430902: Our new height x width: 306 x 408
1335385430902: Show photo from handle my camera take
1335385430903: ** Client making NEWly TAKEN photo PACKET to send to leader **
1335385430903: change local requestCounter to 13
1335385430949: BYTE SIZE AFTER COMPRESSION: 2926
1335385430951: Client about to send CLIENT_UPLOAD_PHOTO packet, REQUEST: 5020013 Client in region: 1 Client nodID: 5020
1335385430838: Received UDP payload: 989
1335385430841: mux: GOT CSM_Msg
1335385430880: Received UDP payload: 989
1335385430883: mux: GOT CSM_Msg
1335385430896: Received UDP payload: 989
1335385430899: mux: GOT CSM_Msg
1335385430909: Received UDP payload: 989
1335385430912: mux: GOT CSM_Msg
1335385430934: Received UDP payload: 989
1335385430937: mux: GOT CSM_Msg
1335385430994: ----------------------------
1335385430994: inside sendRequestPacketRepeatingRunnable for requestCount = 5020013
1335385430995: I'm a nonleader sending my requesting photos packet to my leader
1335385431001: --- Finished one round of sending REQUEST Packet ---------
1335385430957: Received UDP payload: 989
1335385430973: mux: GOT CSM_Msg
1335385430985: Received UDP payload: 989
1335385430987: mux: GOT CSM_Msg
1335385430995: inside sendPacket(Packet p)
1335385430997: Sending UDP payload: 3573
1335385430998: Received UDP payload: 989
1335385431001: mux: GOT CSM_Msg
1335385431135: Received UDP payload: 989
1335385431138: mux: GOT CSM_Msg
1335385431149: Received UDP payload: 989
1335385431153: mux: GOT CSM_Msg
1335385431186: Received UDP payload: 989
1335385431191: mux: GOT CSM_Msg
1335385431302: ----------------------------
1335385431302: inside sendRequestPacketRepeatingRunnable for requestCount = 5020013
1335385431303: I'm a nonleader sending my requesting photos packet to my leader
1335385431303: --- Finished one round of sending REQUEST Packet ---------
1335385431303: inside sendPacket(Packet p)
1335385431308: Sending UDP payload: 3573
1335385431603: ----------------------------
1335385431604: inside sendRequestPacketRepeatingRunnable for requestCount = 5020013
1335385431604: I'm a nonleader sending my requesting photos packet to my leader
1335385431607: --- Finished one round of sending REQUEST Packet ---------
1335385431604: inside sendPacket(Packet p)
1335385431606: Sending UDP payload: 3573
1335385431908: ----------------------------
1335385431908: inside sendRequestPacketRepeatingRunnable for requestCount = 5020013
1335385431909: I'm a nonleader sending my requesting photos packet to my leader
1335385431915: --- Finished one round of sending REQUEST Packet ---------
1335385431909: inside sendPacket(Packet p)
1335385431911: Sending UDP payload: 3573
1335385431955: inside sendRequestPacketTimeoutR, stops Client sending requestPackets
1335385434948: reg=1 id=5020 state=3 regionWidth=20.0 hyst=0.0 takeNum=4 takeCamGood=4 takeGoodSave=3 takeBad=0 takeTimedout=1 takePercent=75% getNum=3 getGood=3 getBad=0 getTimedout=0 getPercent=100%
1335385434951: inside buttonsEnableProgressUploadTimeoutR. Timed out saving the photo you took.
1335385434965: Inside _enableButtons
1335385434967: areButtonsEnabled --> true
1335385440462: Received UDP payload: 4882
1335385440466: mux: Inside mux Packet.CLIENT_REQUEST
1335385440466: mux: Nonleader does nothing for Packet.CLIENT_REQUEST
1335385440527: Received UDP payload: 4882
1335385440532: mux: Inside mux Packet.CLIENT_REQUEST
1335385440532: mux: Nonleader does nothing for Packet.CLIENT_REQUEST
1335385440594: Received UDP payload: 4882
1335385440598: mux: Inside mux Packet.CLIENT_REQUEST
1335385440598: mux: Nonleader does nothing for Packet.CLIENT_REQUEST
1335385440718: Received UDP payload: 4882
1335385440726: mux: Inside mux Packet.CLIENT_REQUEST
1335385440727: mux: Nonleader does nothing for Packet.CLIENT_REQUEST
1335385442099: Received UDP payload: 989
1335385442112: mux: GOT CSM_Msg
1335385442124: Received UDP payload: 642
1335385442147: mux: Inside Packet.SERVER_REPLY
1335385442147: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385442148: Received UDP payload: 642
1335385442164: mux: Inside Packet.SERVER_REPLY
1335385442164: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385442165: Received UDP payload: 642
1335385442167: mux: Inside Packet.SERVER_REPLY
1335385442167: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385442167: Received UDP payload: 642
1335385442169: mux: Inside Packet.SERVER_REPLY
1335385442169: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385442169: Received UDP payload: 446
1335385442224: Received UDP payload: 446
1335385442258: Received UDP payload: 446
1335385442352: Received UDP payload: 446
1335385442372: Received UDP payload: 446
1335385442384: Received UDP payload: 446
1335385442408: Received UDP payload: 446
1335385442467: Received UDP payload: 4978
1335385442470: mux: GOT CSM_Msg
1335385442479: Received UDP payload: 989
1335385442482: mux: GOT CSM_Msg
1335385442484: Received UDP payload: 446
1335385442490: Received UDP payload: 446
1335385442491: mux: Inside Packet.SERVER_REPLY
1335385442491: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385442503: Received UDP payload: 446
1335385442505: mux: Inside Packet.SERVER_REPLY
1335385442505: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385442556: Received UDP payload: 446
1335385442570: Received UDP payload: 989
1335385442572: mux: GOT CSM_Msg
1335385442579: Received UDP payload: 446
1335385442581: mux: Inside Packet.SERVER_REPLY
1335385442581: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385442581: Received UDP payload: 446
1335385442583: mux: Inside Packet.SERVER_REPLY
1335385442583: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385442960: Received UDP payload: 4978
1335385442966: mux: GOT CSM_Msg
1335385443131: Received UDP payload: 446
1335385443138: mux: Inside Packet.SERVER_REPLY
1335385443138: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385443139: Received UDP payload: 446
1335385443141: mux: Inside Packet.SERVER_REPLY
1335385443141: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385443368: Received UDP payload: 12339
1335385443547: Received UDP payload: 12339
1335385443628: Received UDP payload: 4631
1335385443630: mux: Inside Packet.SERVER_REPLY
1335385443630: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385443707: Received UDP payload: 4631
1335385443709: mux: Inside Packet.SERVER_REPLY
1335385443710: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385443780: Received UDP payload: 4631
1335385443782: mux: Inside Packet.SERVER_REPLY
1335385443782: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385444041: Received UDP payload: 12339
1335385444495: Received UDP payload: 12339
1335385444772: Received UDP payload: 12339
1335385445002: Received UDP payload: 7217
1335385445018: mux: GOT CSM_Msg
1335385445031: Received UDP payload: 446
1335385445037: mux: Inside Packet.SERVER_REPLY
1335385445038: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385445158: Received UDP payload: 989
1335385445160: mux: GOT CSM_Msg
1335385445162: Received UDP payload: 642
1335385445166: mux: Inside Packet.SERVER_REPLY
1335385445167: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385445170: Received UDP payload: 642
1335385445177: mux: Inside Packet.SERVER_REPLY
1335385445177: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385445194: Received UDP payload: 642
1335385445196: mux: Inside Packet.SERVER_REPLY
1335385445197: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385445284: Received UDP payload: 642
1335385445286: mux: Inside Packet.SERVER_REPLY
1335385445287: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385445730: Received UDP payload: 10589
1335385446057: Received UDP payload: 10589
1335385446069: Received UDP payload: 446
1335385446077: Received UDP payload: 446
1335385446087: Received UDP payload: 446
1335385446109: Received UDP payload: 446
1335385446117: Received UDP payload: 446
1335385446148: Received UDP payload: 446
1335385446167: Received UDP payload: 446
1335385446184: Received UDP payload: 446
1335385446487: Received UDP payload: 10589
1335385446628: Received UDP payload: 10589
1335385449876: Received UDP payload: 446
1335385449887: Received UDP payload: 446
1335385450070: Received UDP payload: 11247
1335385450081: ignoring leader_reply that's not for me
1335385450099: Received UDP payload: 446
1335385450333: Received UDP payload: 7644
1335385450346: mux: GOT CSM_Msg
1335385450417: Received UDP payload: 7644
1335385450425: mux: GOT CSM_Msg
1335385450552: Received UDP payload: 7644
1335385450560: mux: GOT CSM_Msg
1335385450668: Received UDP payload: 7644
1335385450677: mux: GOT CSM_Msg
1335385451340: Received UDP payload: 7644
1335385451356: mux: GOT CSM_Msg
1335385451795: canPressButton = TRUE
1335385451795: areButtonsEnabled --> false
1335385451795: disabling buttons ...
1335385451795: took picture disableButtonsR
1335385451796: areButtonsEnabled --> false
1335385451822: reg=1 id=5020 state=3 regionWidth=20.0 hyst=0.0 takeNum=5 takeCamGood=4 takeGoodSave=3 takeBad=0 takeTimedout=1 takePercent=60% getNum=3 getGood=3 getBad=0 getTimedout=0 getPercent=100%
1335385451822: Clicked take picture button ..
1335385452124: Received UDP payload: 22335
1335385452130: removing leaderRequestRetryR because heard Packet.Leader_reply
1335385452130: heard LEADER_REPLY from new leader 5011
1335385452130: VCoreDaemon.java inside stateTransition ..........
1335385452131: removing leaderRequestRetryR because I'm doing a stateTransition
1335385452131: ..... VCoreDaemon.java targetState = NONLEADER
1335385452131: now NONLEADER (id=5020) following LEADER (id=5011) in (1,0)
1335385452132: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385452656: Received UDP payload: 7644
1335385452659: mux: GOT CSM_Msg
1335385453192: inside HandlePictureStorage onPictureTaken()
1335385453193: reg=1 id=5020 state=3 regionWidth=20.0 hyst=0.0 takeNum=5 takeCamGood=5 takeGoodSave=3 takeBad=0 takeTimedout=1 takePercent=60% getNum=3 getGood=3 getBad=0 getTimedout=0 getPercent=100%
1335385453473: Picture successfully taken, ORIG BYTE LENGTH = 2545023
1335385453691: Our new height x width: 306 x 408
1335385453691: Show photo from handle my camera take
1335385453692: ** Client making NEWly TAKEN photo PACKET to send to leader **
1335385453692: change local requestCounter to 14
1335385453706: BYTE SIZE AFTER COMPRESSION: 4424
1335385453707: Client about to send CLIENT_UPLOAD_PHOTO packet, REQUEST: 5020014 Client in region: 1 Client nodID: 5020
1335385453734: ----------------------------
1335385453735: inside sendRequestPacketRepeatingRunnable for requestCount = 5020014
1335385453735: I'm a nonleader sending my requesting photos packet to my leader
1335385453740: --- Finished one round of sending REQUEST Packet ---------
1335385453735: inside sendPacket(Packet p)
1335385453737: Sending UDP payload: 5071
1335385454040: ----------------------------
1335385454041: inside sendRequestPacketRepeatingRunnable for requestCount = 5020014
1335385454041: I'm a nonleader sending my requesting photos packet to my leader
1335385454044: --- Finished one round of sending REQUEST Packet ---------
1335385454041: inside sendPacket(Packet p)
1335385454042: Sending UDP payload: 5071
1335385454345: ----------------------------
1335385454346: inside sendRequestPacketRepeatingRunnable for requestCount = 5020014
1335385454346: I'm a nonleader sending my requesting photos packet to my leader
1335385454351: --- Finished one round of sending REQUEST Packet ---------
1335385454346: inside sendPacket(Packet p)
1335385454347: Sending UDP payload: 5071
1335385454652: ----------------------------
1335385454654: inside sendRequestPacketRepeatingRunnable for requestCount = 5020014
1335385454655: I'm a nonleader sending my requesting photos packet to my leader
1335385454663: --- Finished one round of sending REQUEST Packet ---------
1335385454655: inside sendPacket(Packet p)
1335385454661: Sending UDP payload: 5071
1335385454713: inside sendRequestPacketTimeoutR, stops Client sending requestPackets
1335385454862: Received UDP payload: 625
1335385454864: mux: Inside mux Packet.CLIENT_REQUEST
1335385454864: mux: Nonleader does nothing for Packet.CLIENT_REQUEST
1335385455190: Received UDP payload: 625
1335385455192: mux: Inside mux Packet.CLIENT_REQUEST
1335385455192: mux: Nonleader does nothing for Packet.CLIENT_REQUEST
1335385455468: Received UDP payload: 625
1335385455475: mux: Inside mux Packet.CLIENT_REQUEST
1335385455475: mux: Nonleader does nothing for Packet.CLIENT_REQUEST
1335385456852: Received UDP payload: 10589
1335385456868: Received UDP payload: 446
1335385456888: Received UDP payload: 446
1335385456964: Received UDP payload: 4517
1335385456967: mux: GOT CSM_Msg
1335385457076: Received UDP payload: 989
1335385457079: mux: GOT CSM_Msg
1335385457087: Received UDP payload: 446
1335385457110: Received UDP payload: 989
1335385457113: mux: GOT CSM_Msg
1335385457826: reg=1 id=5020 state=3 regionWidth=20.0 hyst=0.0 takeNum=5 takeCamGood=5 takeGoodSave=3 takeBad=0 takeTimedout=2 takePercent=60% getNum=3 getGood=3 getBad=0 getTimedout=0 getPercent=100%
1335385457828: inside buttonsEnableProgressUploadTimeoutR. Timed out saving the photo you took.
1335385457843: Inside _enableButtons
1335385457844: areButtonsEnabled --> true
1335385460143: Received UDP payload: 7644
1335385460150: mux: GOT CSM_Msg
1335385460278: Received UDP payload: 7644
1335385460287: mux: GOT CSM_Msg
1335385460500: Received UDP payload: 7644
1335385460505: mux: GOT CSM_Msg
1335385460650: Received UDP payload: 7644
1335385460660: mux: GOT CSM_Msg
1335385460798: Received UDP payload: 7644
1335385460810: mux: GOT CSM_Msg
1335385460970: Received UDP payload: 7644
1335385460983: mux: GOT CSM_Msg
1335385460994: Received UDP payload: 446
1335385461002: Received UDP payload: 446
1335385461018: Received UDP payload: 446
1335385461037: Received UDP payload: 446
1335385461054: Received UDP payload: 446
1335385461060: Received UDP payload: 446
1335385461469: Received UDP payload: 446
1335385466454: Received UDP payload: 22335
1335385467520: Received UDP payload: 22335
1335385467594: Received UDP payload: 446
1335385467602: Received UDP payload: 446
1335385468657: Received UDP payload: 446
1335385469712: Received UDP payload: 11417
1335385469739: Received UDP payload: 989
1335385469748: mux: GOT CSM_Msg
1335385469961: Received UDP payload: 11692
1335385470296: Received UDP payload: 11692
1335385470739: Missed 3 HEARTBEATS from LEADER, going to JOINING.
1335385470740: VCoreDaemon.java inside stateTransition ..........
1335385470740: removing leaderRequestRetryR because I'm doing a stateTransition
1335385470741: ..... VCoreDaemon.java targetState = JOINING
1335385470741: posting leaderRequestRetryR because I'm joining
1335385470741: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385470742: sending LEADER_REQUEST
1335385470742: inside sendPacket(Packet p)
1335385470742: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385470753: Sending UDP payload: 446
1335385471043: sending LEADER_REQUEST
1335385471044: inside sendPacket(Packet p)
1335385471044: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385471047: Sending UDP payload: 446
1335385471345: sending LEADER_REQUEST
1335385471345: inside sendPacket(Packet p)
1335385471346: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385471362: Sending UDP payload: 446
1335385471609: Received UDP payload: 3985
1335385471616: mux: Inside mux Packet.CLIENT_REQUEST
1335385471646: sending LEADER_REQUEST
1335385471647: inside sendPacket(Packet p)
1335385471647: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385471651: Sending UDP payload: 446
1335385471742: inside leaderRequestTimeoutR beacuse I didn't hear a leader_reply and I'm removing leaderRequestRetryR because leader_request timed out
1335385471742: inside leaderRequestTimeoutR and my state was JOINING, so I'll try to stateTransition to LEADER
1335385471742: VCoreDaemon.java inside stateTransition ..........
1335385471742: removing leaderRequestRetryR because I'm doing a stateTransition
1335385471742: ..... VCoreDaemon.java targetState = LEADER
1335385471742: trying to take leadership to the cloud
1335385472319: Received UDP payload: 11692
1335385472337: Received UDP payload: 446
1335385472448: cloud accepted leadership request, returned csm bytes size 56545
1335385472461: ..... VCoreDaemon.java targetState = LEADER and create new DSMLayer !!!! :D:D:D:D:D
1335385472461: *** Starting CSM Layer ***
1335385472462: *** CSM Layer starting with cache disabled ***
1335385472462: *** CSM Layer starting with forwarding enabled ***
1335385472526: Received UDP payload: 11692
1335385472790: Received UDP payload: 11692
1335385473366: Received UDP payload: 11692
1335385473497: Received UDP payload: 11692
1335385473518: Received UDP payload: 989
1335385473525: mux: GOT CSM_Msg
1335385473527: Received UDP payload: 989
1335385473543: mux: GOT CSM_Msg
1335385473545: Received UDP payload: 989
1335385473560: mux: GOT CSM_Msg
1335385473607: Received UDP payload: 989
1335385473614: mux: GOT CSM_Msg
1335385473615: Received UDP payload: 989
1335385473620: mux: GOT CSM_Msg
1335385473636: Received UDP payload: 989
1335385473641: mux: GOT CSM_Msg
1335385473663: Received UDP payload: 989
1335385473667: mux: GOT CSM_Msg
1335385473725: Received UDP payload: 989
1335385473733: mux: GOT CSM_Msg
1335385473733: Received UDP payload: 989
1335385473750: mux: GOT CSM_Msg
1335385473752: Received UDP payload: 989
1335385473761: mux: GOT CSM_Msg
1335385473762: Received UDP payload: 989
1335385473784: mux: GOT CSM_Msg
1335385473785: Received UDP payload: 989
1335385473790: mux: GOT CSM_Msg
1335385473798: Received UDP payload: 989
1335385473801: mux: GOT CSM_Msg
1335385473807: Received UDP payload: 989
1335385473812: mux: GOT CSM_Msg
1335385473821: Received UDP payload: 989
1335385473825: mux: GOT CSM_Msg
1335385473838: Received UDP payload: 989
1335385473842: mux: GOT CSM_Msg
1335385473849: Received UDP payload: 989
1335385473852: mux: GOT CSM_Msg
1335385473860: Received UDP payload: 989
1335385473862: mux: GOT CSM_Msg
1335385473875: Received UDP payload: 989
1335385473878: mux: GOT CSM_Msg
1335385473902: Received UDP payload: 989
1335385473906: mux: GOT CSM_Msg
1335385473913: Received UDP payload: 989
1335385473917: mux: GOT CSM_Msg
1335385473963: Received UDP payload: 446
1335385473977: Received UDP payload: 989
1335385473981: mux: GOT CSM_Msg
1335385474001: Received UDP payload: 989
1335385474004: mux: GOT CSM_Msg
1335385474039: Received UDP payload: 989
1335385474052: mux: GOT CSM_Msg
1335385474057: DSMLayer starting
1335385474058: UserApp started.
1335385474058: loaded csm data from cloud
1335385474124: inside sendPacket(Packet p)
1335385474124: now fully up as LEADER (id=5020) of (1,0)
1335385474125: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385474131: Sending UDP payload: 20216
1335385474182: Received UDP payload: 989
1335385474188: mux: GOT CSM_Msg
1335385474189: nonce 89 heard from src region (1,0)
1335385474198: Received UDP payload: 989
1335385474201: mux: GOT CSM_Msg
1335385474201: nonce 90 heard from src region (1,0)
1335385475742: inside sendPacket(Packet p)
1335385475747: Sending UDP payload: 446
1335385478469: Received UDP payload: 446
1335385478482: Received UDP payload: 446
1335385478506: Received UDP payload: 446
1335385478838: Received UDP payload: 446
1335385478858: Received UDP payload: 446
1335385479026: Received UDP payload: 446
1335385480617: Received UDP payload: 12199
1335385480743: inside sendPacket(Packet p)
1335385480747: Sending UDP payload: 446
1335385482431: Received UDP payload: 3529
1335385482449: Received UDP payload: 446
1335385482458: Received UDP payload: 446
1335385482598: Received UDP payload: 446
1335385482701: Received UDP payload: 446
1335385483685: Received UDP payload: 989
1335385483694: mux: GOT CSM_Msg
1335385483695: nonce 91 heard from src region (1,0)
1335385483714: Received UDP payload: 989
1335385483740: mux: GOT CSM_Msg
1335385483741: nonce 92 heard from src region (1,0)
1335385483743: Received UDP payload: 989
1335385483748: mux: GOT CSM_Msg
1335385483748: nonce 93 heard from src region (1,0)
1335385483748: Received UDP payload: 989
1335385483751: mux: GOT CSM_Msg
1335385483751: Received DUPLICATE PROC_REPLY 11:0 (3,0)->(1,0)
1335385484023: Received UDP payload: 8316
1335385484026: mux: GOT CSM_Msg
1335385484055: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335385484065: I'm a leader and I successfully saved my client's new photo
1335385484066: now showing in UI the new photo I just saved ... 
1335385484067: the photo length: 7305
1335385484142: end of server show photo aside %%%%%%%%%
1335385484026: removed replies before id 9 from sentReplies of size 0
1335385484026: inside handleDSMRequest. At requests's remote leader of region 1
1335385484029: Inside UPLOAD_PHOTO!!
1335385484032: my_gpinfo.isSuccess is now (should be true): true
1335385484032: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335385484034: Received PROC_REQUEST 10:9 (1,0)->(1,0), replying PROC_REPLY 10:9 (1,0)->(1,0)
1335385484034: Dispatching Atom PROC_REPLY 10:9 (1,0)->(1,0)
1335385484034: mux: I got a CSM packet at a leader 

1335385484037: Sending UDP payload: 989
1335385484039: Received DUPLICATE PROC_REPLY 10:9 (1,0)->(1,0)
1335385484044: Received UDP payload: 446
1335385484046: mux: Inside Packet.SERVER_REPLY
1335385484047: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385484058: Received UDP payload: 989
1335385484062: mux: GOT CSM_Msg
1335385484062: Received DUPLICATE PROC_REPLY 10:9 (1,0)->(1,0)
1335385484067: Received UDP payload: 642
1335385484142: mux: Inside Packet.SERVER_REPLY
1335385484143: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385484143: Received UDP payload: 446
1335385484149: Received UDP payload: 446
1335385484156: mux: Inside Packet.SERVER_REPLY
1335385484156: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385484157: Received UDP payload: 642
1335385484163: mux: Inside Packet.SERVER_REPLY
1335385484163: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385484163: Received UDP payload: 989
1335385484170: mux: GOT CSM_Msg
1335385484170: removed replies before id 10 from sentReplies of size 0
1335385484170: inside handleDSMRequest. At requests's remote leader of region 1
1335385484171: INSIDE SERVER_GET_PHOTO!!!
1335385484171: Received UDP payload: 446
1335385484172: dst_region == src_region = 1
1335385484172:  1 self to self atomRequest
1335385484174: Received PROC_REQUEST 11:10 (1,0)->(1,0), replying PROC_REPLY 11:10 (1,0)->(1,0)
1335385484175: Dispatching Atom PROC_REPLY 11:10 (1,0)->(1,0)
1335385484175: mux: I got a CSM packet at a leader 

1335385484196: mux: Inside mux Packet.CLIENT_REQUEST
1335385484196: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385484177: Received UDP payload: 446
1335385484197: mux: Inside mux Packet.CLIENT_REQUEST
1335385484197: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385484195: Sending UDP payload: 8316
1335385484195: Received DUPLICATE PROC_REPLY 11:10 (1,0)->(1,0)
1335385484196: inside handleClientRequest. Originator leader of region 1
1335385484196: got new request, requestCounter = 5005006
1335385484196: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 501800009
1335385484196: Yay the last leg succeeded. Removing reply runnables ...
1335385484196: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 501800009
1335385484196: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 501800009
1335385484196: do not send ack for received final_leg_ack
1335385484197: inside handleClientRequest. Originator leader of region 1
1335385484197: got new request, requestCounter = 5005007
1335385484197: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 501800009
1335385484197: Yay the last leg succeeded. Removing reply runnables ...
1335385484197: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 501800009
1335385484197: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 501800009
1335385484197: do not send ack for received final_leg_ack
1335385484392: Received UDP payload: 446
1335385484395: mux: Inside Packet.SERVER_REPLY
1335385484395: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385484395: Received UDP payload: 446
1335385484397: mux: Inside Packet.SERVER_REPLY
1335385484397: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385485744: inside sendPacket(Packet p)
1335385485748: Sending UDP payload: 446
1335385485897: Received UDP payload: 446
1335385485899: heard LEADER_REQUEST from node 5015, responding LEADER_REPLY
1335385485916: Received UDP payload: 446
1335385485935: Received UDP payload: 446
1335385485944: Received UDP payload: 446
1335385485954: Received UDP payload: 446
1335385485974: Received UDP payload: 446
1335385485979: Received UDP payload: 446
1335385486007: Received UDP payload: 446
1335385486048: inside sendPacket(Packet p)
1335385486065: Sending UDP payload: 19015
1335385486070: heard LEADER_REQUEST from node 5015, responding LEADER_REPLY
1335385486088: Received UDP payload: 7278
1335385486093: mux: Inside mux Packet.CLIENT_REQUEST
1335385486094: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385486094: inside handleClientRequest. Originator leader of region 1
1335385486094: got new request, requestCounter = 5015001
1335385486095: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335385486096: Sending PROC_REQUEST 10:4 (1,0)->(1,0)
1335385486097: Dispatching Atom PROC_REQUEST 10:4 (1,0)->(1,0)
1335385486099: mux: I got a CSM packet at a leader 

1335385486175: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335385486184: I'm a leader and I successfully saved my client's new photo
1335385486185: now showing in UI the new photo I just saved ... 
1335385486185: the photo length: 6631
1335385486274: end of server show photo aside %%%%%%%%%
1335385486097: Note down new request by adding requestCounter=5015001 to HashMap processedRequests
1335385486098: Make FirstLeg Ack regardless of new or already-processed requests
1335385486098: The leader sending a First Leg ack to originator client (which id = 5015)
1335385486098: inside sendPacket(Packet p)
1335385486116: Sending UDP payload: 7642
1335385486125: removed replies before id 4 from sentReplies of size 1
1335385486127: inside handleDSMRequest. At requests's remote leader of region 1
1335385486130: Inside UPLOAD_PHOTO!!
1335385486152: my_gpinfo.isSuccess is now (should be true): true
1335385486153: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335385486157: Received PROC_REQUEST 10:4 (1,0)->(1,0), replying PROC_REPLY 10:4 (1,0)->(1,0)
1335385486158: Dispatching Atom PROC_REPLY 10:4 (1,0)->(1,0)
1335385486190: mux: I got a CSM packet at a leader 

1335385486161: Sending UDP payload: 446
1335385486259: Received UDP payload: 7278
1335385486260: Sending UDP payload: 989
1335385486262: Received PROC_REPLY 10:4 (1,0)->(1,0), handing to UserApp
1335385486263: inside handleDSMReply. Now back in originator leader of region 1
1335385486278: mux: Inside mux Packet.CLIENT_REQUEST
1335385486278: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385486263: DSM layer: Going to and from remote region took latency = 167
1335385486269: DSM layer: orig leader sent packet at 1335385486095 ~ received reply from remote leader at 1335385486262
1335385486272: Originator Region=1's Leader (for Client=5015) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385486273: change leader replyCounter to: 1
1335385486273: inside sendPacket(Packet p)
1335385486274: heard LEADER_REQUEST from node 5015, responding LEADER_REPLY
1335385486273: reply packet contains the success info for UPLOAD_PHOTO
1335385486277: inside sendReplies of replyCount = 502000001
1335385486278: inside handleClientRequest. Originator leader of region 1
1335385486279: discarding repeated requestCounter=5015001, but still send an ack back
1335385486280: Note down new request by adding requestCounter=5015001 to HashMap processedRequests
1335385486280: Make FirstLeg Ack regardless of new or already-processed requests
1335385486281: The leader sending a First Leg ack to originator client (which id = 5015)
1335385486282: inside sendPacket(Packet p)
1335385486301: Sending UDP payload: 26227
1335385486310: Sending UDP payload: 446
1335385486360: inside sendPacket(Packet p)
1335385486364: Sending UDP payload: 18625
1335385486369: heard LEADER_REQUEST from node 5015, responding LEADER_REPLY
1335385486410: inside sendPacket(Packet p)
1335385486412: heard LEADER_REQUEST from node 5015, responding LEADER_REPLY
1335385486412: Sending UDP payload: 18625
1335385486438: Received UDP payload: 7278
1335385486440: mux: Inside mux Packet.CLIENT_REQUEST
1335385486440: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385486440: inside handleClientRequest. Originator leader of region 1
1335385486440: discarding repeated requestCounter=5015001, but still send an ack back
1335385486440: Note down new request by adding requestCounter=5015001 to HashMap processedRequests
1335385486441: Make FirstLeg Ack regardless of new or already-processed requests
1335385486441: The leader sending a First Leg ack to originator client (which id = 5015)
1335385486441: inside sendPacket(Packet p)
1335385486442: Sending UDP payload: 446
1335385486445: inside sendPacket(Packet p)
1335385486445: heard LEADER_REQUEST from node 5015, responding LEADER_REPLY
1335385486446: Sending UDP payload: 18625
1335385486465: inside sendPacket(Packet p)
1335385486466: Sending UDP payload: 18625
1335385486468: heard LEADER_REQUEST from node 5015, responding LEADER_REPLY
1335385486484: inside sendPacket(Packet p)
1335385486485: heard LEADER_REQUEST from node 5015, responding LEADER_REPLY
1335385486486: Sending UDP payload: 18625
1335385486503: inside sendPacket(Packet p)
1335385486504: Sending UDP payload: 18625
1335385486506: =======================
1335385486506: inside sendReplyRepeatingRunnable for replyCount = 502000001
1335385486506: Leader about to send REPLY packet, number: 502000001 type: 16 Leader in region: (1,0) to Client nodID: 5015
1335385486506: I (the leader) was not the originator client (which id = 5015) so I use UDP to send packet back to my nonleader
1335385486507: inside sendPacket(Packet p)
1335385486508: Sending UDP payload: 642
1335385486508: === Finished one round of sending REPLY Packet =======
1335385486808: =======================
1335385486809: inside sendReplyRepeatingRunnable for replyCount = 502000001
1335385486810: Leader about to send REPLY packet, number: 502000001 type: 16 Leader in region: (1,0) to Client nodID: 5015
1335385486811: I (the leader) was not the originator client (which id = 5015) so I use UDP to send packet back to my nonleader
1335385486811: inside sendPacket(Packet p)
1335385486811: === Finished one round of sending REPLY Packet =======
1335385486812: Sending UDP payload: 642
1335385486820: Received UDP payload: 7278
1335385486822: mux: Inside mux Packet.CLIENT_REQUEST
1335385486823: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385486823: inside handleClientRequest. Originator leader of region 1
1335385486824: discarding repeated requestCounter=5015001, but still send an ack back
1335385486824: Note down new request by adding requestCounter=5015001 to HashMap processedRequests
1335385486824: Make FirstLeg Ack regardless of new or already-processed requests
1335385486824: The leader sending a First Leg ack to originator client (which id = 5015)
1335385486824: inside sendPacket(Packet p)
1335385486826: Sending UDP payload: 446
1335385486845: Received UDP payload: 625
1335385486847: mux: Inside mux Packet.CLIENT_REQUEST
1335385486847: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385486847: inside handleClientRequest. Originator leader of region 1
1335385486847: got new request, requestCounter = 5015002
1335385486848: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335385486849: Sending to region: 0
1335385486849: Sending PROC_REQUEST 11:3 (1,0)->(0,0)
1335385486850: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(0,0)
1335385486851: mux: I got a CSM packet at a leader 

1335385486850: Note down new request by adding requestCounter=5015002 to HashMap processedRequests
1335385486850: Make FirstLeg Ack regardless of new or already-processed requests
1335385486851: The leader sending a First Leg ack to originator client (which id = 5015)
1335385486851: inside sendPacket(Packet p)
1335385486852: Received UDP payload: 625
1335385486854: Sending UDP payload: 989
1335385486880: mux: Inside mux Packet.CLIENT_REQUEST
1335385486880: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385486871: Received UDP payload: 625
1335385486881: mux: Inside mux Packet.CLIENT_REQUEST
1335385486881: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385486874: nonce 75 heard from src region (1,0)
1335385486875: Sending UDP payload: 446
1335385486880: inside handleClientRequest. Originator leader of region 1
1335385486881: discarding repeated requestCounter=5015002, but still send an ack back
1335385486881: Note down new request by adding requestCounter=5015002 to HashMap processedRequests
1335385486881: Make FirstLeg Ack regardless of new or already-processed requests
1335385486881: The leader sending a First Leg ack to originator client (which id = 5015)
1335385486881: inside sendPacket(Packet p)
1335385486881: inside handleClientRequest. Originator leader of region 1
1335385486882: discarding repeated requestCounter=5015002, but still send an ack back
1335385486882: Note down new request by adding requestCounter=5015002 to HashMap processedRequests
1335385486882: Make FirstLeg Ack regardless of new or already-processed requests
1335385486882: The leader sending a First Leg ack to originator client (which id = 5015)
1335385486882: inside sendPacket(Packet p)
1335385486883: Sending UDP payload: 446
1335385486889: Sending UDP payload: 446
1335385486898: Received UDP payload: 625
1335385486900: mux: Inside mux Packet.CLIENT_REQUEST
1335385486900: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385486900: inside handleClientRequest. Originator leader of region 1
1335385486901: discarding repeated requestCounter=5015002, but still send an ack back
1335385486901: Note down new request by adding requestCounter=5015002 to HashMap processedRequests
1335385486901: Make FirstLeg Ack regardless of new or already-processed requests
1335385486901: The leader sending a First Leg ack to originator client (which id = 5015)
1335385486901: inside sendPacket(Packet p)
1335385486902: Sending UDP payload: 446
1335385487112: =======================
1335385487113: inside sendReplyRepeatingRunnable for replyCount = 502000001
1335385487113: Leader about to send REPLY packet, number: 502000001 type: 16 Leader in region: (1,0) to Client nodID: 5015
1335385487113: I (the leader) was not the originator client (which id = 5015) so I use UDP to send packet back to my nonleader
1335385487114: inside sendPacket(Packet p)
1335385487114: === Finished one round of sending REPLY Packet =======
1335385487116: Sending UDP payload: 642
1335385487124: Received UDP payload: 625
1335385487128: mux: Inside mux Packet.CLIENT_REQUEST
1335385487128: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385487128: inside handleClientRequest. Originator leader of region 1
1335385487128: got new request, requestCounter = 5015003
1335385487129: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335385487130: Sending to region: 1
1335385487130: Sending PROC_REQUEST 11:5 (1,0)->(1,0)
1335385487131: Dispatching Atom PROC_REQUEST 11:5 (1,0)->(1,0)
1335385487132: mux: I got a CSM packet at a leader 

1335385487131: Note down new request by adding requestCounter=5015003 to HashMap processedRequests
1335385487131: Make FirstLeg Ack regardless of new or already-processed requests
1335385487132: The leader sending a First Leg ack to originator client (which id = 5015)
1335385487132: inside sendPacket(Packet p)
1335385487138: Received UDP payload: 625
1335385487144: Sending UDP payload: 989
1335385487167: mux: Inside mux Packet.CLIENT_REQUEST
1335385487168: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385487148: removed replies before id 5 from sentReplies of size 1
1335385487148: inside handleDSMRequest. At requests's remote leader of region 1
1335385487149: INSIDE SERVER_GET_PHOTO!!!
1335385487151: dst_region == src_region = 1
1335385487152:  1 self to self atomRequest
1335385487164: Received PROC_REQUEST 11:5 (1,0)->(1,0), replying PROC_REPLY 11:5 (1,0)->(1,0)
1335385487164: Dispatching Atom PROC_REPLY 11:5 (1,0)->(1,0)
1335385487170: mux: I got a CSM packet at a leader 

1335385487166: Sending UDP payload: 446
1335385487168: inside handleClientRequest. Originator leader of region 1
1335385487168: discarding repeated requestCounter=5015003, but still send an ack back
1335385487169: Note down new request by adding requestCounter=5015003 to HashMap processedRequests
1335385487169: Make FirstLeg Ack regardless of new or already-processed requests
1335385487169: The leader sending a First Leg ack to originator client (which id = 5015)
1335385487169: inside sendPacket(Packet p)
1335385487172: Sending UDP payload: 7642
1335385487182: Received PROC_REPLY 11:5 (1,0)->(1,0), handing to UserApp
1335385487183: inside handleDSMReply. Now back in originator leader of region 1
1335385487184: DSM layer: Going to and from remote region took latency = 53
1335385487184: DSM layer: orig leader sent packet at 1335385487130 ~ received reply from remote leader at 1335385487183
1335385487185: Originator Region=1's Leader (for Client=5015) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385487186: change leader replyCounter to: 2
1335385487186: reply packet contains the newest photo/success info from the remote region
1335385487186: inside sendReplies of replyCount = 502000002
1335385487186: =======================
1335385487187: inside sendReplyRepeatingRunnable for replyCount = 502000002
1335385487187: Leader about to send REPLY packet, number: 502000002 type: 15 Leader in region: (1,0) to Client nodID: 5015
1335385487187: I (the leader) was not the originator client (which id = 5015) so I use UDP to send packet back to my nonleader
1335385487188: inside sendPacket(Packet p)
1335385487188: === Finished one round of sending REPLY Packet =======
1335385487195: Sending UDP payload: 446
1335385487205: Sending UDP payload: 7295
1335385487278: inside sendReplyTimeoutR
1335385487278: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 502000001
1335385487489: =======================
1335385487489: inside sendReplyRepeatingRunnable for replyCount = 502000002
1335385487489: Leader about to send REPLY packet, number: 502000002 type: 15 Leader in region: (1,0) to Client nodID: 5015
1335385487489: I (the leader) was not the originator client (which id = 5015) so I use UDP to send packet back to my nonleader
1335385487489: inside sendPacket(Packet p)
1335385487490: === Finished one round of sending REPLY Packet =======
1335385487491: Sending UDP payload: 7295
1335385487616: Retrying PROC_REQUEST 11:3 (1,0)->(0,0)
1335385487617: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(0,0)
1335385487617: mux: I got a CSM packet at a leader 

1335385487618: Sending UDP payload: 989
1335385487619: nonce 78 heard from src region (1,0)
1335385487718: Retrying PROC_REQUEST 11:3 (1,0)->(0,0)
1335385487718: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(0,0)
1335385487718: mux: I got a CSM packet at a leader 

1335385487719: Sending UDP payload: 989
1335385487720: nonce 79 heard from src region (1,0)
1335385487791: =======================
1335385487791: inside sendReplyRepeatingRunnable for replyCount = 502000002
1335385487791: Leader about to send REPLY packet, number: 502000002 type: 15 Leader in region: (1,0) to Client nodID: 5015
1335385487791: I (the leader) was not the originator client (which id = 5015) so I use UDP to send packet back to my nonleader
1335385487791: inside sendPacket(Packet p)
1335385487791: === Finished one round of sending REPLY Packet =======
1335385487792: Sending UDP payload: 7295
1335385487819: Retrying PROC_REQUEST 11:3 (1,0)->(0,0)
1335385487820: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(0,0)
1335385487820: mux: I got a CSM packet at a leader 

1335385487823: Sending UDP payload: 989
1335385487825: nonce 80 heard from src region (1,0)
1335385487921: Retrying PROC_REQUEST 11:3 (1,0)->(0,0)
1335385487922: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(0,0)
1335385487922: mux: I got a CSM packet at a leader 

1335385487924: Sending UDP payload: 989
1335385487927: nonce 81 heard from src region (1,0)
1335385488023: Retrying PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488023: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488024: mux: I got a CSM packet at a leader 

1335385488026: Sending UDP payload: 989
1335385488028: nonce 82 heard from src region (1,0)
1335385488092: =======================
1335385488092: inside sendReplyRepeatingRunnable for replyCount = 502000002
1335385488093: Leader about to send REPLY packet, number: 502000002 type: 15 Leader in region: (1,0) to Client nodID: 5015
1335385488094: I (the leader) was not the originator client (which id = 5015) so I use UDP to send packet back to my nonleader
1335385488094: inside sendPacket(Packet p)
1335385488094: === Finished one round of sending REPLY Packet =======
1335385488096: Sending UDP payload: 7295
1335385488124: Retrying PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488125: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488125: mux: I got a CSM packet at a leader 

1335385488130: Sending UDP payload: 989
1335385488132: nonce 83 heard from src region (1,0)
1335385488194: inside sendReplyTimeoutR
1335385488194: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 502000002
1335385488227: Retrying PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488228: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488228: mux: I got a CSM packet at a leader 

1335385488231: Sending UDP payload: 989
1335385488233: nonce 84 heard from src region (1,0)
1335385488329: Retrying PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488329: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488330: mux: I got a CSM packet at a leader 

1335385488332: Sending UDP payload: 989
1335385488334: nonce 85 heard from src region (1,0)
1335385488431: Retrying PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488433: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488434: mux: I got a CSM packet at a leader 

1335385488438: Sending UDP payload: 989
1335385488446: nonce 86 heard from src region (1,0)
1335385488536: Retrying PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488537: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488538: mux: I got a CSM packet at a leader 

1335385488542: Sending UDP payload: 989
1335385488544: nonce 87 heard from src region (1,0)
1335385488639: Retrying PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488640: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488641: mux: I got a CSM packet at a leader 

1335385488645: Sending UDP payload: 989
1335385488647: nonce 88 heard from src region (1,0)
1335385488741: Retrying PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488743: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488756: mux: I got a CSM packet at a leader 

1335385488761: Sending UDP payload: 989
1335385488764: nonce 89 heard from src region (1,0)
1335385488844: Retrying PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488844: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488844: mux: I got a CSM packet at a leader 

1335385488847: Sending UDP payload: 989
1335385488847: nonce 90 heard from src region (1,0)
1335385488945: Retrying PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488945: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(0,0)
1335385488945: mux: I got a CSM packet at a leader 

1335385488947: Sending UDP payload: 989
1335385488949: nonce 91 heard from src region (1,0)
1335385489046: DSM Layer: Request timed out, send failure PROC_REPLY 11:3 (0,0)->(1,0)
1335385489046: Dispatching Atom PROC_REPLY 11:3 (0,0)->(1,0)
1335385489047: mux: I got a CSM packet at a leader 

1335385489048: Sending UDP payload: 989
1335385489049: Received PROC_REPLY 11:3 (0,0)->(1,0), handing to UserApp
1335385489049: inside handleDSMReply. Now back in originator leader of region 1
1335385489050: DSM layer timed out, don't log dsm layer latency stuff.
1335385489050: Originator Region=1's Leader (for Client=5015) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385489051: change leader replyCounter to: 3
1335385489051: reply packet contains the newest photo/success info from the remote region
1335385489051: inside sendReplies of replyCount = 502000003
1335385489051: =======================
1335385489051: inside sendReplyRepeatingRunnable for replyCount = 502000003
1335385489051: Leader about to send REPLY packet, number: 502000003 type: 15 Leader in region: (1,0) to Client nodID: 5015
1335385489052: I (the leader) was not the originator client (which id = 5015) so I use UDP to send packet back to my nonleader
1335385489052: inside sendPacket(Packet p)
1335385489052: === Finished one round of sending REPLY Packet =======
1335385489055: Sending UDP payload: 642
1335385489353: =======================
1335385489366: inside sendReplyRepeatingRunnable for replyCount = 502000003
1335385489375: Leader about to send REPLY packet, number: 502000003 type: 15 Leader in region: (1,0) to Client nodID: 5015
1335385489376: I (the leader) was not the originator client (which id = 5015) so I use UDP to send packet back to my nonleader
1335385489376: inside sendPacket(Packet p)
1335385489379: Sending UDP payload: 642
1335385489381: === Finished one round of sending REPLY Packet =======
1335385489682: =======================
1335385489682: inside sendReplyRepeatingRunnable for replyCount = 502000003
1335385489683: Leader about to send REPLY packet, number: 502000003 type: 15 Leader in region: (1,0) to Client nodID: 5015
1335385489683: I (the leader) was not the originator client (which id = 5015) so I use UDP to send packet back to my nonleader
1335385489683: inside sendPacket(Packet p)
1335385489683: === Finished one round of sending REPLY Packet =======
1335385489685: Sending UDP payload: 642
1335385489899: Received UDP payload: 8316
1335385489904: mux: GOT CSM_Msg
1335385489905: Received DUPLICATE PROC_REPLY 11:10 (1,0)->(1,0)
1335385489930: Received UDP payload: 446
1335385489932: mux: Inside Packet.SERVER_REPLY
1335385489932: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385489934: Received UDP payload: 446
1335385489936: mux: Inside Packet.SERVER_REPLY
1335385489936: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385489983: =======================
1335385489984: inside sendReplyRepeatingRunnable for replyCount = 502000003
1335385489984: Leader about to send REPLY packet, number: 502000003 type: 15 Leader in region: (1,0) to Client nodID: 5015
1335385489984: I (the leader) was not the originator client (which id = 5015) so I use UDP to send packet back to my nonleader
1335385489984: inside sendPacket(Packet p)
1335385489985: === Finished one round of sending REPLY Packet =======
1335385489986: Sending UDP payload: 642
1335385490052: inside sendReplyTimeoutR
1335385490053: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 502000003
1335385490739: Received UDP payload: 7969
1335385490745: inside sendPacket(Packet p)
1335385490757: Sending UDP payload: 446
1335385490759: mux: Inside Packet.SERVER_REPLY
1335385490759: mux: Ignoring SERVER_REPLY since it's not for me  5020
1335385491244: Received UDP payload: 446
1335385491266: Received UDP payload: 446
1335385491310: Received UDP payload: 446
1335385491351: Received UDP payload: 989
1335385491360: mux: GOT CSM_Msg
1335385491361: Received DUPLICATE PROC_REPLY 11:0 (3,0)->(1,0)
1335385493126: Received UDP payload: 989
1335385493133: mux: GOT CSM_Msg
1335385493134: nonce 46 heard from src region (0,0)
1335385495745: inside sendPacket(Packet p)
1335385495747: Sending UDP payload: 446
1335385497114: Received UDP payload: 19042
1335385499926: Received UDP payload: 446
1335385499931: mux: Inside mux Packet.CLIENT_REQUEST
1335385499932: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385499933: inside handleClientRequest. Originator leader of region 1
1335385499933: got new request, requestCounter = 5005008
1335385499934: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 501800010
1335385499934: Yay the last leg succeeded. Removing reply runnables ...
1335385499935: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 501800010
1335385499935: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 501800010
1335385499935: do not send ack for received final_leg_ack
1335385500149: Received UDP payload: 7050
1335385500151: mux: Inside mux Packet.CLIENT_REQUEST
1335385500151: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385500151: inside handleClientRequest. Originator leader of region 1
1335385500151: got new request, requestCounter = 5005009
1335385500151: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335385500152: Sending PROC_REQUEST 10:6 (1,0)->(1,0)
1335385500152: Dispatching Atom PROC_REQUEST 10:6 (1,0)->(1,0)
1335385500153: mux: I got a CSM packet at a leader 

1335385500188: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335385500189: I'm a leader and I successfully saved my client's new photo
1335385500190: now showing in UI the new photo I just saved ... 
1335385500191: the photo length: 6403
1335385500283: end of server show photo aside %%%%%%%%%
1335385500152: Note down new request by adding requestCounter=5005009 to HashMap processedRequests
1335385500152: Make FirstLeg Ack regardless of new or already-processed requests
1335385500152: The leader sending a First Leg ack to originator client (which id = 5005)
1335385500153: inside sendPacket(Packet p)
1335385500179: Sending UDP payload: 7414
1335385500180: removed replies before id 6 from sentReplies of size 1
1335385500181: inside handleDSMRequest. At requests's remote leader of region 1
1335385500183: Inside UPLOAD_PHOTO!!
1335385500186: my_gpinfo.isSuccess is now (should be true): true
1335385500186: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335385500192: Received PROC_REQUEST 10:6 (1,0)->(1,0), replying PROC_REPLY 10:6 (1,0)->(1,0)
1335385500193: Dispatching Atom PROC_REPLY 10:6 (1,0)->(1,0)
1335385500197: mux: I got a CSM packet at a leader 

1335385500195: Sending UDP payload: 446
1335385500200: Sending UDP payload: 989
1335385500203: Received PROC_REPLY 10:6 (1,0)->(1,0), handing to UserApp
1335385500203: inside handleDSMReply. Now back in originator leader of region 1
1335385500203: DSM layer: Going to and from remote region took latency = 51
1335385500204: DSM layer: orig leader sent packet at 1335385500152 ~ received reply from remote leader at 1335385500203
1335385500276: Originator Region=1's Leader (for Client=5005) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385500276: change leader replyCounter to: 4
1335385500276: reply packet contains the success info for UPLOAD_PHOTO
1335385500277: inside sendReplies of replyCount = 502000004
1335385500277: =======================
1335385500277: inside sendReplyRepeatingRunnable for replyCount = 502000004
1335385500277: Leader about to send REPLY packet, number: 502000004 type: 16 Leader in region: (1,0) to Client nodID: 5005
1335385500277: I (the leader) was not the originator client (which id = 5005) so I use UDP to send packet back to my nonleader
1335385500277: inside sendPacket(Packet p)
1335385500278: === Finished one round of sending REPLY Packet =======
1335385500278: Sending UDP payload: 642
1335385500344: Received UDP payload: 7050
1335385500346: mux: Inside mux Packet.CLIENT_REQUEST
1335385500346: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385500346: inside handleClientRequest. Originator leader of region 1
1335385500346: discarding repeated requestCounter=5005009, but still send an ack back
1335385500346: Note down new request by adding requestCounter=5005009 to HashMap processedRequests
1335385500346: Make FirstLeg Ack regardless of new or already-processed requests
1335385500346: The leader sending a First Leg ack to originator client (which id = 5005)
1335385500347: inside sendPacket(Packet p)
1335385500347: Sending UDP payload: 446
1335385500524: Received UDP payload: 7050
1335385500526: mux: Inside mux Packet.CLIENT_REQUEST
1335385500526: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385500526: inside handleClientRequest. Originator leader of region 1
1335385500526: discarding repeated requestCounter=5005009, but still send an ack back
1335385500526: Note down new request by adding requestCounter=5005009 to HashMap processedRequests
1335385500527: Make FirstLeg Ack regardless of new or already-processed requests
1335385500527: The leader sending a First Leg ack to originator client (which id = 5005)
1335385500527: inside sendPacket(Packet p)
1335385500528: Sending UDP payload: 446
1335385500578: =======================
1335385500578: inside sendReplyRepeatingRunnable for replyCount = 502000004
1335385500579: Leader about to send REPLY packet, number: 502000004 type: 16 Leader in region: (1,0) to Client nodID: 5005
1335385500580: I (the leader) was not the originator client (which id = 5005) so I use UDP to send packet back to my nonleader
1335385500580: inside sendPacket(Packet p)
1335385500581: === Finished one round of sending REPLY Packet =======
1335385500582: Sending UDP payload: 642
1335385500658: Received UDP payload: 7050
1335385500661: mux: Inside mux Packet.CLIENT_REQUEST
1335385500661: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385500662: inside handleClientRequest. Originator leader of region 1
1335385500662: discarding repeated requestCounter=5005009, but still send an ack back
1335385500662: Note down new request by adding requestCounter=5005009 to HashMap processedRequests
1335385500662: Make FirstLeg Ack regardless of new or already-processed requests
1335385500662: The leader sending a First Leg ack to originator client (which id = 5005)
1335385500662: inside sendPacket(Packet p)
1335385500663: Sending UDP payload: 446
1335385500745: inside sendPacket(Packet p)
1335385500748: Sending UDP payload: 446
1335385500881: =======================
1335385500882: inside sendReplyRepeatingRunnable for replyCount = 502000004
1335385500882: Leader about to send REPLY packet, number: 502000004 type: 16 Leader in region: (1,0) to Client nodID: 5005
1335385500883: I (the leader) was not the originator client (which id = 5005) so I use UDP to send packet back to my nonleader
1335385500883: inside sendPacket(Packet p)
1335385500883: === Finished one round of sending REPLY Packet =======
1335385500886: Sending UDP payload: 642
1335385501183: =======================
1335385501184: inside sendReplyRepeatingRunnable for replyCount = 502000004
1335385501185: Leader about to send REPLY packet, number: 502000004 type: 16 Leader in region: (1,0) to Client nodID: 5005
1335385501185: I (the leader) was not the originator client (which id = 5005) so I use UDP to send packet back to my nonleader
1335385501186: inside sendPacket(Packet p)
1335385501186: === Finished one round of sending REPLY Packet =======
1335385501190: Sending UDP payload: 642
1335385501239: Received UDP payload: 446
1335385501277: inside sendReplyTimeoutR
1335385501277: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 502000004
1335385501519: Received UDP payload: 446
1335385501807: Received UDP payload: 12199
1335385505747: inside sendPacket(Packet p)
1335385505750: Sending UDP payload: 446
1335385508461: Received UDP payload: 3529
1335385508471: ignoring leader_reply that's not for me
1335385508500: Received UDP payload: 3529
1335385508508: ignoring leader_reply that's not for me
1335385508530: Received UDP payload: 446
1335385508537: Received UDP payload: 446
1335385508551: Received UDP payload: 446
1335385508557: Received UDP payload: 446
1335385508677: Received UDP payload: 9114
1335385508686: mux: GOT CSM_Msg
1335385508769: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335385508773: I'm a leader and I successfully saved my client's new photo
1335385508774: now showing in UI the new photo I just saved ... 
1335385508775: the photo length: 8103
1335385508872: end of server show photo aside %%%%%%%%%
1335385508686: removed replies before id 0 from sentReplies of size 2
1335385508686: inside handleDSMRequest. At requests's remote leader of region 1
1335385508689: Inside UPLOAD_PHOTO!!
1335385508692: my_gpinfo.isSuccess is now (should be true): true
1335385508692: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335385508702: Received PROC_REQUEST 10:0 (1,0)->(1,0), replying PROC_REPLY 10:0 (1,0)->(1,0)
1335385508704: Dispatching Atom PROC_REPLY 10:0 (1,0)->(1,0)
1335385508711: mux: I got a CSM packet at a leader 

1335385508715: Received UDP payload: 989
1335385508717: Sending UDP payload: 989
1335385508735: mux: GOT CSM_Msg
1335385508730: Received UDP payload: 446
1335385508734: Received DUPLICATE PROC_REPLY 10:0 (1,0)->(1,0)
1335385508736: Received DUPLICATE PROC_REPLY 10:0 (1,0)->(1,0)
1335385508744: Received UDP payload: 446
1335385508761: Received UDP payload: 446
1335385509497: Received UDP payload: 12414
1335385509509: Received UDP payload: 446
1335385510748: inside sendPacket(Packet p)
1335385510751: Sending UDP payload: 446
1335385511063: Received UDP payload: 12414
1335385515749: inside sendPacket(Packet p)
1335385515752: Sending UDP payload: 446
1335385520749: inside sendPacket(Packet p)
1335385520755: Sending UDP payload: 446
1335385521361: Received UDP payload: 12414
1335385525751: inside sendPacket(Packet p)
1335385525765: Sending UDP payload: 446
1335385530752: inside sendPacket(Packet p)
1335385530756: Sending UDP payload: 446
1335385535752: inside sendPacket(Packet p)
1335385535754: Sending UDP payload: 446
1335385540753: inside sendPacket(Packet p)
1335385540756: Sending UDP payload: 446
1335385543186: Received UDP payload: 446
1335385543195: Received UDP payload: 446
1335385543223: Received UDP payload: 446
1335385544872: canPressButton = TRUE
1335385544872: areButtonsEnabled --> false 
1335385544873: get picture disableButtonsR
1335385544873: areButtonsEnabled --> false
1335385544900: reg=1 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=5 takeCamGood=5 takeGoodSave=3 takeBad=0 takeTimedout=2 takePercent=60% getNum=4 getGood=3 getBad=0 getTimedout=0 getPercent=75%
1335385544900: ** Client making GET photo PACKET to send to the leader. Requesting for region: 1 **
1335385544900: change local requestCounter to 15
1335385544905: Client about to send CLIENT_DOWNLOAD_PHOTO packet, REQUEST: 5020015 Client in region: 1 Client nodID: 5020
1335385544936: ----------------------------
1335385544936: inside sendRequestPacketRepeatingRunnable for requestCount = 5020015
1335385544937: I'm a leader, my requesting photos packet going to mux directly
1335385544948: --- Finished one round of sending REQUEST Packet ---------
1335385544937: mux: Inside mux Packet.CLIENT_REQUEST
1335385544937: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385544992: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335385544937: inside handleClientRequest. Originator leader of region 1
1335385544937: got new request, requestCounter = 5020015
1335385544937: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335385544938: Sending to region: 1
1335385544939: Sending PROC_REQUEST 11:7 (1,0)->(1,0)
1335385544939: Dispatching Atom PROC_REQUEST 11:7 (1,0)->(1,0)
1335385544941: mux: I got a CSM packet at a leader 

1335385544939: Note down new request by adding requestCounter=5020015 to HashMap processedRequests
1335385544939: Make FirstLeg Ack regardless of new or already-processed requests
1335385544939: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5020)
1335385544942: Sending UDP payload: 989
1335385544943: removed replies before id 7 from sentReplies of size 1
1335385544943: inside handleDSMRequest. At requests's remote leader of region 1
1335385544944: INSIDE SERVER_GET_PHOTO!!!
1335385544945: dst_region == src_region = 1
1335385544945:  1 self to self atomRequest
1335385544946: Received PROC_REQUEST 11:7 (1,0)->(1,0), replying PROC_REPLY 11:7 (1,0)->(1,0)
1335385544946: Dispatching Atom PROC_REPLY 11:7 (1,0)->(1,0)
1335385544947: mux: I got a CSM packet at a leader 

1335385544994: Client received Packet.CLIENT_SHOW_REMOTEPHOTOS. Client requested for a photo in a remote region and this is the reply
1335385544995: disabling progressdialog due to successful new photo get
1335385544995: Inside _enableButtons
1335385544995: areButtonsEnabled --> true
1335385544995: send final leg ack regardless of new or already-processed reply
1335385544995: inside finalLegAck: change requestCounter to 16
1335385544996: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5020016 Client in region: (1,0) Client nodID: 5020
1335385544996: I'm a leader client, my final_leg packet going to mux directly
1335385545000: csn discarding repeated replyCounter=502000005, but still sent an ack back
1335385544959: Sending UDP payload: 9114
1335385544960: Received PROC_REPLY 11:7 (1,0)->(1,0), handing to UserApp
1335385544960: inside handleDSMReply. Now back in originator leader of region 1
1335385544960: DSM layer: Going to and from remote region took latency = 22
1335385544961: DSM layer: orig leader sent packet at 1335385544938 ~ received reply from remote leader at 1335385544960
1335385544961: Originator Region=1's Leader (for Client=5020) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385544962: change leader replyCounter to: 5
1335385544962: reply packet contains the newest photo/success info from the remote region
1335385544962: inside sendReplies of replyCount = 502000005
1335385544962: =======================
1335385544962: inside sendReplyRepeatingRunnable for replyCount = 502000005
1335385544962: Leader about to send REPLY packet, number: 502000005 type: 15 Leader in region: (1,0) to Client nodID: 5020
1335385544962: I (the leader) was also the originator client (id = 5020) so I hand the packet to my mux directly, without UDP
1335385544963: === Finished one round of sending REPLY Packet =======
1335385544996: mux: Inside mux Packet.CLIENT_REQUEST
1335385544996: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385544997: inside handleClientRequest. Originator leader of region 1
1335385544997: got new request, requestCounter = 5020016
1335385544997: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 502000005
1335385544997: Yay the last leg succeeded. Removing reply runnables ...
1335385544997: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 502000005
1335385544997: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 502000005
1335385544997: do not send ack for received final_leg_ack
1335385545753: inside sendPacket(Packet p)
1335385545756: Sending UDP payload: 446
1335385550754: inside sendPacket(Packet p)
1335385550757: Sending UDP payload: 446
1335385554707: Received UDP payload: 5025
1335385554710: mux: Inside mux Packet.CLIENT_REQUEST
1335385554718: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385554718: inside handleClientRequest. Originator leader of region 1
1335385554719: got new request, requestCounter = 5007002
1335385554719: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335385554720: Sending PROC_REQUEST 10:8 (1,0)->(1,0)
1335385554720: Dispatching Atom PROC_REQUEST 10:8 (1,0)->(1,0)
1335385554722: mux: I got a CSM packet at a leader 

1335385554757: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335385554764: I'm a leader and I successfully saved my client's new photo
1335385554764: now showing in UI the new photo I just saved ... 
1335385554765: the photo length: 4378
1335385554857: end of server show photo aside %%%%%%%%%
1335385554721: Note down new request by adding requestCounter=5007002 to HashMap processedRequests
1335385554721: Make FirstLeg Ack regardless of new or already-processed requests
1335385554721: The leader sending a First Leg ack to originator client (which id = 5007)
1335385554722: inside sendPacket(Packet p)
1335385554734: Sending UDP payload: 5389
1335385554735: removed replies before id 8 from sentReplies of size 1
1335385554735: inside handleDSMRequest. At requests's remote leader of region 1
1335385554737: Inside UPLOAD_PHOTO!!
1335385554740: my_gpinfo.isSuccess is now (should be true): true
1335385554740: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335385554749: Received PROC_REQUEST 10:8 (1,0)->(1,0), replying PROC_REPLY 10:8 (1,0)->(1,0)
1335385554750: Dispatching Atom PROC_REPLY 10:8 (1,0)->(1,0)
1335385554759: mux: I got a CSM packet at a leader 

1335385554751: Sending UDP payload: 446
1335385554762: Sending UDP payload: 989
1335385554836: Received PROC_REPLY 10:8 (1,0)->(1,0), handing to UserApp
1335385554836: inside handleDSMReply. Now back in originator leader of region 1
1335385554837: DSM layer: Going to and from remote region took latency = 117
1335385554837: DSM layer: orig leader sent packet at 1335385554719 ~ received reply from remote leader at 1335385554836
1335385554839: Originator Region=1's Leader (for Client=5007) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385554839: change leader replyCounter to: 6
1335385554840: reply packet contains the success info for UPLOAD_PHOTO
1335385554840: inside sendReplies of replyCount = 502000006
1335385554843: =======================
1335385554844: inside sendReplyRepeatingRunnable for replyCount = 502000006
1335385554844: Leader about to send REPLY packet, number: 502000006 type: 16 Leader in region: (1,0) to Client nodID: 5007
1335385554845: I (the leader) was not the originator client (which id = 5007) so I use UDP to send packet back to my nonleader
1335385554845: inside sendPacket(Packet p)
1335385554845: === Finished one round of sending REPLY Packet =======
1335385554856: Sending UDP payload: 642
1335385555146: =======================
1335385555146: inside sendReplyRepeatingRunnable for replyCount = 502000006
1335385555146: Leader about to send REPLY packet, number: 502000006 type: 16 Leader in region: (1,0) to Client nodID: 5007
1335385555146: I (the leader) was not the originator client (which id = 5007) so I use UDP to send packet back to my nonleader
1335385555146: inside sendPacket(Packet p)
1335385555146: === Finished one round of sending REPLY Packet =======
1335385555147: Sending UDP payload: 642
1335385555447: =======================
1335385555447: inside sendReplyRepeatingRunnable for replyCount = 502000006
1335385555448: Leader about to send REPLY packet, number: 502000006 type: 16 Leader in region: (1,0) to Client nodID: 5007
1335385555454: I (the leader) was not the originator client (which id = 5007) so I use UDP to send packet back to my nonleader
1335385555455: inside sendPacket(Packet p)
1335385555458: Sending UDP payload: 642
1335385555460: === Finished one round of sending REPLY Packet =======
1335385555755: inside sendPacket(Packet p)
1335385555758: Sending UDP payload: 446
1335385555763: =======================
1335385555764: inside sendReplyRepeatingRunnable for replyCount = 502000006
1335385555765: Leader about to send REPLY packet, number: 502000006 type: 16 Leader in region: (1,0) to Client nodID: 5007
1335385555766: I (the leader) was not the originator client (which id = 5007) so I use UDP to send packet back to my nonleader
1335385555766: inside sendPacket(Packet p)
1335385555767: === Finished one round of sending REPLY Packet =======
1335385555779: Sending UDP payload: 642
1335385555848: inside sendReplyTimeoutR
1335385555849: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 502000006
1335385558291: .......... GPS onLocationChanged ...... 
1335385558293: Loc = Location[mProvider=gps,mTime=1335385559000,mLatitude=42.35802003,mLongitude=-71.09288723,mHasAltitude=true,mAltitude=-25.799999237060547,mHasSpeed=true,mSpeed=0.25,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=5.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385558294: GPS x/long:-71.09288723, GPS y/lat: 42.35802003. Region width in x: 20.0
1335385558295: location PINPOINTS to region = 1.0, previous 1
1335385558296: Hysteresis is 0.0
1335385558296: stay at region 1
1335385560252: .......... GPS onLocationChanged ...... 
1335385560255: Loc = Location[mProvider=gps,mTime=1335385561000,mLatitude=42.35800873,mLongitude=-71.09287705,mHasAltitude=true,mAltitude=-27.0,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=5.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385560256: GPS x/long:-71.09287705, GPS y/lat: 42.35800873. Region width in x: 20.0
1335385560256: location PINPOINTS to region = 1.0, previous 1
1335385560257: Hysteresis is 0.0
1335385560258: stay at region 1
1335385560755: inside sendPacket(Packet p)
1335385560758: Sending UDP payload: 446
1335385561256: .......... GPS onLocationChanged ...... 
1335385561258: Loc = Location[mProvider=gps,mTime=1335385562000,mLatitude=42.35799764,mLongitude=-71.09287407,mHasAltitude=true,mAltitude=-24.600000381469727,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385561260: GPS x/long:-71.09287407, GPS y/lat: 42.35799764. Region width in x: 20.0
1335385561261: location PINPOINTS to region = 1.0, previous 1
1335385561262: Hysteresis is 0.0
1335385561263: stay at region 1
1335385562257: .......... GPS onLocationChanged ...... 
1335385562260: Loc = Location[mProvider=gps,mTime=1335385563000,mLatitude=42.35798851,mLongitude=-71.09286562,mHasAltitude=true,mAltitude=-26.299999237060547,mHasSpeed=true,mSpeed=0.25,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385562261: GPS x/long:-71.09286562, GPS y/lat: 42.35798851. Region width in x: 20.0
1335385562262: location PINPOINTS to region = 1.0, previous 1
1335385562262: Hysteresis is 0.0
1335385562263: stay at region 1
1335385563249: .......... GPS onLocationChanged ...... 
1335385563250: Loc = Location[mProvider=gps,mTime=1335385564000,mLatitude=42.35798025,mLongitude=-71.09285626,mHasAltitude=true,mAltitude=-26.299999237060547,mHasSpeed=true,mSpeed=0.25,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385563250: GPS x/long:-71.09285626, GPS y/lat: 42.35798025. Region width in x: 20.0
1335385563251: location PINPOINTS to region = 1.0, previous 1
1335385563251: Hysteresis is 0.0
1335385563251: stay at region 1
1335385564273: .......... GPS onLocationChanged ...... 
1335385564274: Loc = Location[mProvider=gps,mTime=1335385565000,mLatitude=42.35797332,mLongitude=-71.09284704,mHasAltitude=true,mAltitude=-26.200000762939453,mHasSpeed=true,mSpeed=0.25,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385564274: GPS x/long:-71.09284704, GPS y/lat: 42.35797332. Region width in x: 20.0
1335385564274: location PINPOINTS to region = 1.0, previous 1
1335385564274: Hysteresis is 0.0
1335385564275: stay at region 1
1335385565757: inside sendPacket(Packet p)
1335385565757: Sending UDP payload: 446
1335385566242: .......... GPS onLocationChanged ...... 
1335385566244: Loc = Location[mProvider=gps,mTime=1335385567000,mLatitude=42.3579644,mLongitude=-71.09282993,mHasAltitude=true,mAltitude=-26.299999237060547,mHasSpeed=true,mSpeed=0.25,mHasBearing=true,mBearing=147.5,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385566244: GPS x/long:-71.09282993, GPS y/lat: 42.3579644. Region width in x: 20.0
1335385566245: location PINPOINTS to region = 1.0, previous 1
1335385566246: Hysteresis is 0.0
1335385566246: stay at region 1
1335385567327: canPressButton = TRUE
1335385567328: areButtonsEnabled --> false 
1335385567329: get picture disableButtonsR
1335385567329: areButtonsEnabled --> false
1335385567368: reg=1 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=5 takeCamGood=5 takeGoodSave=3 takeBad=0 takeTimedout=2 takePercent=60% getNum=5 getGood=3 getBad=0 getTimedout=0 getPercent=60%
1335385567369: ** Client making GET photo PACKET to send to the leader. Requesting for region: 3 **
1335385567369: change local requestCounter to 17
1335385567369: Client about to send CLIENT_DOWNLOAD_PHOTO packet, REQUEST: 5020017 Client in region: 1 Client nodID: 5020
1335385567398: ----------------------------
1335385567398: inside sendRequestPacketRepeatingRunnable for requestCount = 5020017
1335385567398: I'm a leader, my requesting photos packet going to mux directly
1335385567399: --- Finished one round of sending REQUEST Packet ---------
1335385567399: mux: Inside mux Packet.CLIENT_REQUEST
1335385567399: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385567440: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335385567399: inside handleClientRequest. Originator leader of region 1
1335385567399: got new request, requestCounter = 5020017
1335385567399: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335385567400: Sending to region: 3
1335385567401: Sending PROC_REQUEST 11:0 (1,0)->(3,0)
1335385567401: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(3,0)
1335385567402: mux: I got a CSM packet at a leader 

1335385567402: Note down new request by adding requestCounter=5020017 to HashMap processedRequests
1335385567402: Make FirstLeg Ack regardless of new or already-processed requests
1335385567402: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5020)
1335385567404: Sending UDP payload: 989
1335385567408: nonce 100 heard from src region (1,0)
1335385568135: Retrying PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568136: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568136: mux: I got a CSM packet at a leader 

1335385568139: Sending UDP payload: 989
1335385568148: nonce 101 heard from src region (1,0)
1335385568237: Retrying PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568237: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568237: mux: I got a CSM packet at a leader 

1335385568239: Sending UDP payload: 989
1335385568239: nonce 102 heard from src region (1,0)
1335385568338: Retrying PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568338: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568338: mux: I got a CSM packet at a leader 

1335385568340: Sending UDP payload: 989
1335385568340: nonce 103 heard from src region (1,0)
1335385568439: Retrying PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568439: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568439: mux: I got a CSM packet at a leader 

1335385568440: Sending UDP payload: 989
1335385568441: nonce 104 heard from src region (1,0)
1335385568540: Retrying PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568540: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568540: mux: I got a CSM packet at a leader 

1335385568541: Sending UDP payload: 989
1335385568542: nonce 105 heard from src region (1,0)
1335385568641: Retrying PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568641: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568641: mux: I got a CSM packet at a leader 

1335385568643: Sending UDP payload: 989
1335385568643: nonce 106 heard from src region (1,0)
1335385568742: Retrying PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568742: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568743: mux: I got a CSM packet at a leader 

1335385568747: Sending UDP payload: 989
1335385568748: nonce 107 heard from src region (1,0)
1335385568843: Retrying PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568844: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568844: mux: I got a CSM packet at a leader 

1335385568845: Sending UDP payload: 989
1335385568846: nonce 108 heard from src region (1,0)
1335385568944: Retrying PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568945: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(3,0)
1335385568945: mux: I got a CSM packet at a leader 

1335385568947: Sending UDP payload: 989
1335385568947: nonce 109 heard from src region (1,0)
1335385569046: Retrying PROC_REQUEST 11:0 (1,0)->(3,0)
1335385569046: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(3,0)
1335385569047: mux: I got a CSM packet at a leader 

1335385569048: Sending UDP payload: 989
1335385569049: nonce 110 heard from src region (1,0)
1335385569147: Retrying PROC_REQUEST 11:0 (1,0)->(3,0)
1335385569147: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(3,0)
1335385569148: mux: I got a CSM packet at a leader 

1335385569149: Sending UDP payload: 989
1335385569150: nonce 111 heard from src region (1,0)
1335385569236: .......... GPS onLocationChanged ...... 
1335385569237: Loc = Location[mProvider=gps,mTime=1335385570000,mLatitude=42.35795942,mLongitude=-71.09281922,mHasAltitude=true,mAltitude=-26.700000762939453,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385569237: GPS x/long:-71.09281922, GPS y/lat: 42.35795942. Region width in x: 20.0
1335385569237: location PINPOINTS to region = 1.0, previous 1
1335385569238: Hysteresis is 0.0
1335385569238: stay at region 1
1335385569248: Retrying PROC_REQUEST 11:0 (1,0)->(3,0)
1335385569249: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(3,0)
1335385569249: mux: I got a CSM packet at a leader 

1335385569251: Sending UDP payload: 989
1335385569253: nonce 112 heard from src region (1,0)
1335385569350: Retrying PROC_REQUEST 11:0 (1,0)->(3,0)
1335385569350: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(3,0)
1335385569350: mux: I got a CSM packet at a leader 

1335385569351: Sending UDP payload: 989
1335385569352: nonce 113 heard from src region (1,0)
1335385569451: Retrying PROC_REQUEST 11:0 (1,0)->(3,0)
1335385569451: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(3,0)
1335385569451: mux: I got a CSM packet at a leader 

1335385569452: Sending UDP payload: 989
1335385569454: nonce 114 heard from src region (1,0)
1335385569552: DSM Layer: Request timed out, send failure PROC_REPLY 11:0 (3,0)->(1,0)
1335385569552: Dispatching Atom PROC_REPLY 11:0 (3,0)->(1,0)
1335385569553: mux: I got a CSM packet at a leader 

1335385569554: Sending UDP payload: 989
1335385569554: Received PROC_REPLY 11:0 (3,0)->(1,0), handing to UserApp
1335385569554: inside handleDSMReply. Now back in originator leader of region 1
1335385569555: DSM layer timed out, don't log dsm layer latency stuff.
1335385569556: Originator Region=1's Leader (for Client=5020) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385569556: change leader replyCounter to: 7
1335385569556: reply packet contains the newest photo/success info from the remote region
1335385569585: Client received Packet.CLIENT_SHOW_REMOTEPHOTOS. Client requested for a photo in a remote region and this is the reply
1335385569586: disabling progressdialog due to successful new photo get
1335385569587: Inside _enableButtons
1335385569587: areButtonsEnabled --> true
1335385569588: send final leg ack regardless of new or already-processed reply
1335385569589: inside finalLegAck: change requestCounter to 18
1335385569589: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5020018 Client in region: (1,0) Client nodID: 5020
1335385569590: I'm a leader client, my final_leg packet going to mux directly
1335385569591: new client_show_remotephoto reply with replyCounter 502000007
1335385569591: note down new reply by adding replyCounter=502000007 to HashMap processedReplies
1335385569592: leader download remote photo latency = 2186
1335385569593: = leader download start 1335385567399 ~ stop 1335385569585
1335385569595: Can't get remote photo, because DSM Layer on originator leader timed out
1335385569604: reg=1 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=5 takeCamGood=5 takeGoodSave=3 takeBad=0 takeTimedout=2 takePercent=60% getNum=5 getGood=3 getBad=1 getTimedout=0 getPercent=60%
1335385569604: getBad++
1335385569556: inside sendReplies of replyCount = 502000007
1335385569556: =======================
1335385569556: inside sendReplyRepeatingRunnable for replyCount = 502000007
1335385569557: Leader about to send REPLY packet, number: 502000007 type: 15 Leader in region: (1,0) to Client nodID: 5020
1335385569557: I (the leader) was also the originator client (id = 5020) so I hand the packet to my mux directly, without UDP
1335385569557: === Finished one round of sending REPLY Packet =======
1335385569591: mux: Inside mux Packet.CLIENT_REQUEST
1335385569591: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385569591: inside handleClientRequest. Originator leader of region 1
1335385569591: got new request, requestCounter = 5020018
1335385569591: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 502000007
1335385569591: Yay the last leg succeeded. Removing reply runnables ...
1335385569592: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 502000007
1335385569592: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 502000007
1335385569592: do not send ack for received final_leg_ack
1335385570757: inside sendPacket(Packet p)
1335385570760: Sending UDP payload: 446
1335385571957: canPressButton = TRUE
1335385571958: areButtonsEnabled --> false 
1335385571958: get picture disableButtonsR
1335385571958: areButtonsEnabled --> false
1335385571990: reg=1 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=5 takeCamGood=5 takeGoodSave=3 takeBad=0 takeTimedout=2 takePercent=60% getNum=6 getGood=3 getBad=1 getTimedout=0 getPercent=50%
1335385571991: ** Client making GET photo PACKET to send to the leader. Requesting for region: 0 **
1335385571991: change local requestCounter to 19
1335385571998: Client about to send CLIENT_DOWNLOAD_PHOTO packet, REQUEST: 5020019 Client in region: 1 Client nodID: 5020
1335385572041: ----------------------------
1335385572042: inside sendRequestPacketRepeatingRunnable for requestCount = 5020019
1335385572042: I'm a leader, my requesting photos packet going to mux directly
1335385572057: --- Finished one round of sending REQUEST Packet ---------
1335385572042: mux: Inside mux Packet.CLIENT_REQUEST
1335385572042: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385572098: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335385572042: inside handleClientRequest. Originator leader of region 1
1335385572042: got new request, requestCounter = 5020019
1335385572042: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335385572044: Sending to region: 0
1335385572045: Sending PROC_REQUEST 11:4 (1,0)->(0,0)
1335385572045: Dispatching Atom PROC_REQUEST 11:4 (1,0)->(0,0)
1335385572046: mux: I got a CSM packet at a leader 

1335385572045: Note down new request by adding requestCounter=5020019 to HashMap processedRequests
1335385572045: Make FirstLeg Ack regardless of new or already-processed requests
1335385572046: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5020)
1335385572066: Sending UDP payload: 989
1335385572066: nonce 116 heard from src region (1,0)
1335385572771: Retrying PROC_REQUEST 11:4 (1,0)->(0,0)
1335385572771: Dispatching Atom PROC_REQUEST 11:4 (1,0)->(0,0)
1335385572772: mux: I got a CSM packet at a leader 

1335385572774: Sending UDP payload: 989
1335385572784: nonce 117 heard from src region (1,0)
1335385572872: Retrying PROC_REQUEST 11:4 (1,0)->(0,0)
1335385572873: Dispatching Atom PROC_REQUEST 11:4 (1,0)->(0,0)
1335385572874: mux: I got a CSM packet at a leader 

1335385572875: Sending UDP payload: 989
1335385572876: nonce 118 heard from src region (1,0)
1335385572974: Retrying PROC_REQUEST 11:4 (1,0)->(0,0)
1335385572974: Dispatching Atom PROC_REQUEST 11:4 (1,0)->(0,0)
1335385572975: mux: I got a CSM packet at a leader 

1335385572976: Sending UDP payload: 989
1335385572977: nonce 119 heard from src region (1,0)
1335385573075: Retrying PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573076: Dispatching Atom PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573076: mux: I got a CSM packet at a leader 

1335385573078: Sending UDP payload: 989
1335385573078: nonce 120 heard from src region (1,0)
1335385573177: Retrying PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573177: Dispatching Atom PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573177: mux: I got a CSM packet at a leader 

1335385573179: Sending UDP payload: 989
1335385573180: nonce 121 heard from src region (1,0)
1335385573278: Retrying PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573278: Dispatching Atom PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573279: mux: I got a CSM packet at a leader 

1335385573280: Sending UDP payload: 989
1335385573284: nonce 122 heard from src region (1,0)
1335385573379: Retrying PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573379: Dispatching Atom PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573380: mux: I got a CSM packet at a leader 

1335385573381: Sending UDP payload: 989
1335385573381: nonce 123 heard from src region (1,0)
1335385573480: Retrying PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573481: Dispatching Atom PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573481: mux: I got a CSM packet at a leader 

1335385573482: Sending UDP payload: 989
1335385573483: nonce 124 heard from src region (1,0)
1335385573581: Retrying PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573582: Dispatching Atom PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573582: mux: I got a CSM packet at a leader 

1335385573584: Sending UDP payload: 989
1335385573589: nonce 125 heard from src region (1,0)
1335385573683: Retrying PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573683: Dispatching Atom PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573684: mux: I got a CSM packet at a leader 

1335385573686: Sending UDP payload: 989
1335385573687: nonce 126 heard from src region (1,0)
1335385573784: Retrying PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573785: Dispatching Atom PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573785: mux: I got a CSM packet at a leader 

1335385573786: Sending UDP payload: 989
1335385573788: nonce 127 heard from src region (1,0)
1335385573885: Retrying PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573886: Dispatching Atom PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573886: mux: I got a CSM packet at a leader 

1335385573888: Sending UDP payload: 989
1335385573894: nonce 128 heard from src region (1,0)
1335385573987: Retrying PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573987: Dispatching Atom PROC_REQUEST 11:4 (1,0)->(0,0)
1335385573988: mux: I got a CSM packet at a leader 

1335385573989: Sending UDP payload: 989
1335385573990: nonce 129 heard from src region (1,0)
1335385574088: Retrying PROC_REQUEST 11:4 (1,0)->(0,0)
1335385574089: Dispatching Atom PROC_REQUEST 11:4 (1,0)->(0,0)
1335385574089: mux: I got a CSM packet at a leader 

1335385574091: Sending UDP payload: 989
1335385574092: nonce 130 heard from src region (1,0)
1335385574190: DSM Layer: Request timed out, send failure PROC_REPLY 11:4 (0,0)->(1,0)
1335385574191: Dispatching Atom PROC_REPLY 11:4 (0,0)->(1,0)
1335385574191: mux: I got a CSM packet at a leader 

1335385574204: Client received Packet.CLIENT_SHOW_REMOTEPHOTOS. Client requested for a photo in a remote region and this is the reply
1335385574204: disabling progressdialog due to successful new photo get
1335385574205: Inside _enableButtons
1335385574205: areButtonsEnabled --> true
1335385574206: send final leg ack regardless of new or already-processed reply
1335385574206: inside finalLegAck: change requestCounter to 20
1335385574207: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5020020 Client in region: (1,0) Client nodID: 5020
1335385574207: I'm a leader client, my final_leg packet going to mux directly
1335385574212: new client_show_remotephoto reply with replyCounter 502000008
1335385574213: note down new reply by adding replyCounter=502000008 to HashMap processedReplies
1335385574214: leader download remote photo latency = 2162
1335385574214: = leader download start 1335385572042 ~ stop 1335385574204
1335385574216: Can't get remote photo, because DSM Layer on originator leader timed out
1335385574225: reg=1 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=5 takeCamGood=5 takeGoodSave=3 takeBad=0 takeTimedout=2 takePercent=60% getNum=6 getGood=3 getBad=2 getTimedout=0 getPercent=50%
1335385574225: getBad++
1335385574194: Sending UDP payload: 989
1335385574197: Received PROC_REPLY 11:4 (0,0)->(1,0), handing to UserApp
1335385574197: inside handleDSMReply. Now back in originator leader of region 1
1335385574197: DSM layer timed out, don't log dsm layer latency stuff.
1335385574200: Originator Region=1's Leader (for Client=5020) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385574200: change leader replyCounter to: 8
1335385574200: reply packet contains the newest photo/success info from the remote region
1335385574200: inside sendReplies of replyCount = 502000008
1335385574201: =======================
1335385574201: inside sendReplyRepeatingRunnable for replyCount = 502000008
1335385574201: Leader about to send REPLY packet, number: 502000008 type: 15 Leader in region: (1,0) to Client nodID: 5020
1335385574201: I (the leader) was also the originator client (id = 5020) so I hand the packet to my mux directly, without UDP
1335385574202: === Finished one round of sending REPLY Packet =======
1335385574208: mux: Inside mux Packet.CLIENT_REQUEST
1335385574208: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385574208: inside handleClientRequest. Originator leader of region 1
1335385574208: got new request, requestCounter = 5020020
1335385574208: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 502000008
1335385574209: Yay the last leg succeeded. Removing reply runnables ...
1335385574211: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 502000008
1335385574211: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 502000008
1335385574211: do not send ack for received final_leg_ack
1335385575099: canPressButton = TRUE
1335385575100: areButtonsEnabled --> false 
1335385575100: get picture disableButtonsR
1335385575100: areButtonsEnabled --> false
1335385575122: reg=1 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=5 takeCamGood=5 takeGoodSave=3 takeBad=0 takeTimedout=2 takePercent=60% getNum=7 getGood=3 getBad=2 getTimedout=0 getPercent=42%
1335385575123: ** Client making GET photo PACKET to send to the leader. Requesting for region: 1 **
1335385575123: change local requestCounter to 21
1335385575123: Client about to send CLIENT_DOWNLOAD_PHOTO packet, REQUEST: 5020021 Client in region: 1 Client nodID: 5020
1335385575182: ----------------------------
1335385575183: inside sendRequestPacketRepeatingRunnable for requestCount = 5020021
1335385575183: I'm a leader, my requesting photos packet going to mux directly
1335385575193: --- Finished one round of sending REQUEST Packet ---------
1335385575184: mux: Inside mux Packet.CLIENT_REQUEST
1335385575184: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385575236: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335385575184: inside handleClientRequest. Originator leader of region 1
1335385575184: got new request, requestCounter = 5020021
1335385575184: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335385575185: Sending to region: 1
1335385575185: Sending PROC_REQUEST 11:9 (1,0)->(1,0)
1335385575185: Dispatching Atom PROC_REQUEST 11:9 (1,0)->(1,0)
1335385575186: mux: I got a CSM packet at a leader 

1335385575185: Note down new request by adding requestCounter=5020021 to HashMap processedRequests
1335385575186: Make FirstLeg Ack regardless of new or already-processed requests
1335385575186: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5020)
1335385575187: Sending UDP payload: 989
1335385575188: removed replies before id 9 from sentReplies of size 1
1335385575188: inside handleDSMRequest. At requests's remote leader of region 1
1335385575188: INSIDE SERVER_GET_PHOTO!!!
1335385575191: dst_region == src_region = 1
1335385575191:  1 self to self atomRequest
1335385575192: Received PROC_REQUEST 11:9 (1,0)->(1,0), replying PROC_REPLY 11:9 (1,0)->(1,0)
1335385575192: Dispatching Atom PROC_REPLY 11:9 (1,0)->(1,0)
1335385575193: mux: I got a CSM packet at a leader 

1335385575238: Client received Packet.CLIENT_SHOW_REMOTEPHOTOS. Client requested for a photo in a remote region and this is the reply
1335385575238: disabling progressdialog due to successful new photo get
1335385575239: Inside _enableButtons
1335385575239: areButtonsEnabled --> true
1335385575239: send final leg ack regardless of new or already-processed reply
1335385575242: inside finalLegAck: change requestCounter to 22
1335385575243: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5020022 Client in region: (1,0) Client nodID: 5020
1335385575243: I'm a leader client, my final_leg packet going to mux directly
1335385575247: new client_show_remotephoto reply with replyCounter 502000009
1335385575247: note down new reply by adding replyCounter=502000009 to HashMap processedReplies
1335385575247: leader download remote photo latency = 55
1335385575247: = leader download start 1335385575183 ~ stop 1335385575238
1335385575250: reg=1 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=5 takeCamGood=5 takeGoodSave=3 takeBad=0 takeTimedout=2 takePercent=60% getNum=7 getGood=4 getBad=2 getTimedout=0 getPercent=57%
1335385575250: Success! Client getting photo from remote region, showing photo...
1335385575250: Remote photo's length: 4378
1335385575203: Sending UDP payload: 5389
1335385575204: Received PROC_REPLY 11:9 (1,0)->(1,0), handing to UserApp
1335385575205: inside handleDSMReply. Now back in originator leader of region 1
1335385575205: DSM layer: Going to and from remote region took latency = 19
1335385575205: DSM layer: orig leader sent packet at 1335385575185 ~ received reply from remote leader at 1335385575204
1335385575206: Originator Region=1's Leader (for Client=5020) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385575206: change leader replyCounter to: 9
1335385575206: reply packet contains the newest photo/success info from the remote region
1335385575206: inside sendReplies of replyCount = 502000009
1335385575207: =======================
1335385575207: inside sendReplyRepeatingRunnable for replyCount = 502000009
1335385575207: Leader about to send REPLY packet, number: 502000009 type: 15 Leader in region: (1,0) to Client nodID: 5020
1335385575207: I (the leader) was also the originator client (id = 5020) so I hand the packet to my mux directly, without UDP
1335385575207: === Finished one round of sending REPLY Packet =======
1335385575243: mux: Inside mux Packet.CLIENT_REQUEST
1335385575243: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385575244: inside handleClientRequest. Originator leader of region 1
1335385575244: got new request, requestCounter = 5020022
1335385575244: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 502000009
1335385575244: Yay the last leg succeeded. Removing reply runnables ...
1335385575244: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 502000009
1335385575244: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 502000009
1335385575244: do not send ack for received final_leg_ack
1335385575780: inside sendPacket(Packet p)
1335385575783: Sending UDP payload: 446
1335385580780: inside sendPacket(Packet p)
1335385580782: Sending UDP payload: 446
1335385584958: Received UDP payload: 446
1335385584969: heard LEADER_REQUEST from node 5008, responding LEADER_REPLY
1335385584974: Received UDP payload: 446
1335385584979: Received UDP payload: 446
1335385584995: Received UDP payload: 446
1335385585005: Received UDP payload: 446
1335385585018: Received UDP payload: 446
1335385585021: Received UDP payload: 446
1335385585034: inside sendPacket(Packet p)
1335385585035: Sending UDP payload: 20790
1335385585036: heard LEADER_REQUEST from node 5008, responding LEADER_REPLY
1335385585040: Received UDP payload: 446
1335385585044: Received UDP payload: 446
1335385585055: Received UDP payload: 446
1335385585061: Received UDP payload: 446
1335385585069: inside sendPacket(Packet p)
1335385585069: heard LEADER_REQUEST from node 5008, responding LEADER_REPLY
1335385585070: Sending UDP payload: 20790
1335385585076: Received UDP payload: 446
1335385585079: Received UDP payload: 446
1335385585088: inside sendPacket(Packet p)
1335385585090: Sending UDP payload: 20790
1335385585091: heard LEADER_REQUEST from node 5008, responding LEADER_REPLY
1335385585108: inside sendPacket(Packet p)
1335385585109: Sending UDP payload: 20790
1335385585111: heard LEADER_REQUEST from node 5008, responding LEADER_REPLY
1335385585115: Received UDP payload: 446
1335385585120: Received UDP payload: 446
1335385585126: Received UDP payload: 446
1335385585129: inside sendPacket(Packet p)
1335385585130: Sending UDP payload: 20790
1335385585131: heard LEADER_REQUEST from node 5008, responding LEADER_REPLY
1335385585154: Received UDP payload: 446
1335385585158: inside sendPacket(Packet p)
1335385585186: Sending UDP payload: 20790
1335385585160: heard LEADER_REQUEST from node 5008, responding LEADER_REPLY
1335385585207: inside sendPacket(Packet p)
1335385585207: heard LEADER_REQUEST from node 5008, responding LEADER_REPLY
1335385585208: Sending UDP payload: 20790
1335385585230: inside sendPacket(Packet p)
1335385585232: Sending UDP payload: 20790
1335385585232: heard LEADER_REQUEST from node 5008, responding LEADER_REPLY
1335385585255: inside sendPacket(Packet p)
1335385585256: Sending UDP payload: 20790
1335385585258: heard LEADER_REQUEST from node 5008, responding LEADER_REPLY
1335385585276: inside sendPacket(Packet p)
1335385592540: canPressButton = TRUE
1335385592540: areButtonsEnabled --> false 
1335385592540: get picture disableButtonsR
1335385592540: areButtonsEnabled --> false
1335385592557: reg=1 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=5 takeCamGood=5 takeGoodSave=3 takeBad=0 takeTimedout=2 takePercent=60% getNum=8 getGood=4 getBad=2 getTimedout=0 getPercent=50%
1335385592558: ** Client making GET photo PACKET to send to the leader. Requesting for region: 1 **
1335385592558: change local requestCounter to 23
1335385592559: Client about to send CLIENT_DOWNLOAD_PHOTO packet, REQUEST: 5020023 Client in region: 1 Client nodID: 5020
1335385592593: ----------------------------
1335385592594: inside sendRequestPacketRepeatingRunnable for requestCount = 5020023
1335385592594: I'm a leader, my requesting photos packet going to mux directly
1335385592594: --- Finished one round of sending REQUEST Packet ---------
1335385592895: ----------------------------
1335385592896: inside sendRequestPacketRepeatingRunnable for requestCount = 5020023
1335385592896: I'm a leader, my requesting photos packet going to mux directly
1335385592896: --- Finished one round of sending REQUEST Packet ---------
1335385593196: ----------------------------
1335385593197: inside sendRequestPacketRepeatingRunnable for requestCount = 5020023
1335385593197: I'm a leader, my requesting photos packet going to mux directly
1335385593198: --- Finished one round of sending REQUEST Packet ---------
1335385593499: ----------------------------
1335385593499: inside sendRequestPacketRepeatingRunnable for requestCount = 5020023
1335385593499: I'm a leader, my requesting photos packet going to mux directly
1335385593499: --- Finished one round of sending REQUEST Packet ---------
1335385593559: inside sendRequestPacketTimeoutR, stops Client sending requestPackets
1335385595251: .......... GPS onLocationChanged ...... 
1335385598558: reg=1 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=5 takeCamGood=5 takeGoodSave=3 takeBad=0 takeTimedout=2 takePercent=60% getNum=8 getGood=4 getBad=2 getTimedout=1 getPercent=50%
1335385598559: inside buttonsEnableProgressTimeoutR. Perhaps no one is in that region. Try again later!
1335385598565: Inside _enableButtons
1335385598566: areButtonsEnabled --> true
1335385657397: canPressButton = TRUE
1335385657397: areButtonsEnabled --> false 
1335385657397: get picture disableButtonsR
1335385657398: areButtonsEnabled --> false
1335385657412: reg=1 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=5 takeCamGood=5 takeGoodSave=3 takeBad=0 takeTimedout=2 takePercent=60% getNum=9 getGood=4 getBad=2 getTimedout=1 getPercent=44%
1335385657412: ** Client making GET photo PACKET to send to the leader. Requesting for region: 3 **
1335385657412: change local requestCounter to 24
1335385657416: Client about to send CLIENT_DOWNLOAD_PHOTO packet, REQUEST: 5020024 Client in region: 1 Client nodID: 5020
1335385657449: ----------------------------
1335385657449: inside sendRequestPacketRepeatingRunnable for requestCount = 5020024
1335385657449: I'm a leader, my requesting photos packet going to mux directly
1335385657450: --- Finished one round of sending REQUEST Packet ---------
1335385657750: ----------------------------
1335385657751: inside sendRequestPacketRepeatingRunnable for requestCount = 5020024
1335385657751: I'm a leader, my requesting photos packet going to mux directly
1335385657751: --- Finished one round of sending REQUEST Packet ---------
1335385658052: ----------------------------
1335385658052: inside sendRequestPacketRepeatingRunnable for requestCount = 5020024
1335385658053: I'm a leader, my requesting photos packet going to mux directly
1335385658053: --- Finished one round of sending REQUEST Packet ---------
1335385658355: ----------------------------
1335385658355: inside sendRequestPacketRepeatingRunnable for requestCount = 5020024
1335385658355: I'm a leader, my requesting photos packet going to mux directly
1335385658356: --- Finished one round of sending REQUEST Packet ---------
1335385658417: inside sendRequestPacketTimeoutR, stops Client sending requestPackets
1335385663414: reg=1 id=5020 state=2 regionWidth=20.0 hyst=0.0 takeNum=5 takeCamGood=5 takeGoodSave=3 takeBad=0 takeTimedout=2 takePercent=60% getNum=9 getGood=4 getBad=2 getTimedout=2 getPercent=44%
1335385663415: inside buttonsEnableProgressTimeoutR. Perhaps no one is in that region. Try again later!
1335385663419: Inside _enableButtons
1335385663419: areButtonsEnabled --> true
1335385752353: HI I'm in ONPAUSE()
1335385753244: inside onDestroy()
