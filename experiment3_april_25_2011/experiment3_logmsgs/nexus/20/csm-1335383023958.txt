1335383023961: *** Opened log file for writing ***
1335383023962: Android build: Nexus S
1335383023962: NET_NAME set to: wlan0
1335383023963: starting Mux with id = -1
1335383023964: areButtonsEnabled --> true
1335383024049: *** Application started ***
1335383024049: HI I'm in ONRESUME()
1335383024054: SAMPLING_DISTANCE : 1, SAMPLING_DURATION : 1000
1335383023973: mux: Mux.java run() beginning -------------
1335383023996: mux: Mux.java's nodeId is5113
1335383023996: mux: starting vncDaemon ........
1335383024000: mux: vncDaemon started
1335383023998: Started VCoreDaemon with parameters maxRx = 5 , maxRY= 1
1335383024001: VCoreDaemon.java onStart() ....
1335383024003: started, mId = 5113
1335383024003: VCoreDaemon.java inside stateTransition ..........
1335383024004: removing leaderRequestRetryR because I'm doing a stateTransition
1335383024004: ..... VCoreDaemon.java out of bounds
1335383024004: region (-1, -1) out of bounds, dormant
1335383024004: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335383025704: Received UDP payload: 446
1335383025887: Received UDP payload: 625
1335383025901: mux: Inside mux Packet.CLIENT_REQUEST
1335383025995: Received UDP payload: 446
1335383026204: Received UDP payload: 625
1335383026264: mux: Inside mux Packet.CLIENT_REQUEST
1335383026295: Received UDP payload: 446
1335383026372: Received UDP payload: 625
1335383026377: mux: Inside mux Packet.CLIENT_REQUEST
1335383026392: Received UDP payload: 625
1335383026400: mux: Inside mux Packet.CLIENT_REQUEST
1335383026524: Received UDP payload: 625
1335383026538: mux: Inside mux Packet.CLIENT_REQUEST
1335383026630: Received UDP payload: 446
1335383026643: Received UDP payload: 446
1335383026702: Received UDP payload: 446
1335383026804: Received UDP payload: 446
1335383026984: Received UDP payload: 446
1335383027092: Received UDP payload: 446
1335383027368: Received UDP payload: 446
1335383027407: Received UDP payload: 446
1335383027600: Received UDP payload: 446
1335383027673: Received UDP payload: 446
1335383027891: Received UDP payload: 446
1335383027947: Received UDP payload: 446
1335383027968: Received UDP payload: 446
1335383027971: Received UDP payload: 446
1335383028030: Received UDP payload: 446
1335383028322: Received UDP payload: 446
1335383028892: Received UDP payload: 446
1335383028942: Received UDP payload: 989
1335383028961: mux: GOT CSM_Msg
1335383029083: Received UDP payload: 989
1335383029108: mux: GOT CSM_Msg
1335383029129: Received UDP payload: 989
1335383029166: mux: GOT CSM_Msg
1335383029167: Received UDP payload: 989
1335383029199: mux: GOT CSM_Msg
1335383029253: Received UDP payload: 989
1335383029263: mux: GOT CSM_Msg
1335383029267: Received UDP payload: 989
1335383029278: mux: GOT CSM_Msg
1335383029301: Received UDP payload: 989
1335383029313: mux: GOT CSM_Msg
1335383029313: Received UDP payload: 989
1335383029333: mux: GOT CSM_Msg
1335383029559: Received UDP payload: 989
1335383029603: mux: GOT CSM_Msg
1335383029614: Received UDP payload: 989
1335383029632: mux: GOT CSM_Msg
1335383029638: Received UDP payload: 989
1335383029648: mux: GOT CSM_Msg
1335383029649: Received UDP payload: 989
1335383029674: mux: GOT CSM_Msg
1335383029675: Received UDP payload: 446
1335383029682: Received UDP payload: 446
1335383029700: Received UDP payload: 989
1335383029711: mux: GOT CSM_Msg
1335383029711: Received UDP payload: 989
1335383029725: mux: GOT CSM_Msg
1335383029728: Received UDP payload: 989
1335383029734: mux: GOT CSM_Msg
1335383029738: Received UDP payload: 989
1335383029757: mux: GOT CSM_Msg
1335383029763: Received UDP payload: 989
1335383029767: mux: GOT CSM_Msg
1335383029775: Received UDP payload: 989
1335383029781: mux: GOT CSM_Msg
1335383029790: Received UDP payload: 989
1335383029800: mux: GOT CSM_Msg
1335383029809: Received UDP payload: 989
1335383029814: mux: GOT CSM_Msg
1335383029825: Received UDP payload: 989
1335383029836: mux: GOT CSM_Msg
1335383029843: Received UDP payload: 989
1335383029847: mux: GOT CSM_Msg
1335383029862: Received UDP payload: 989
1335383029866: mux: GOT CSM_Msg
1335383029879: Received UDP payload: 989
1335383029912: mux: GOT CSM_Msg
1335383029927: Received UDP payload: 446
1335383030062: Received UDP payload: 446
1335383030228: Received UDP payload: 4779
1335383030256: mux: GOT CSM_Msg
1335383030361: Received UDP payload: 446
1335383030560: Received UDP payload: 3500
1335383030570: mux: GOT CSM_Msg
1335383030613: Received UDP payload: 3500
1335383030637: mux: GOT CSM_Msg
1335383030675: Received UDP payload: 446
1335383030736: Received UDP payload: 446
1335383030757: Received UDP payload: 989
1335383030766: mux: GOT CSM_Msg
1335383030773: Received UDP payload: 989
1335383030792: mux: GOT CSM_Msg
1335383030930: Received UDP payload: 989
1335383030940: mux: GOT CSM_Msg
1335383030945: Received UDP payload: 989
1335383030999: mux: GOT CSM_Msg
1335383030999: Received UDP payload: 989
1335383031012: mux: GOT CSM_Msg
1335383031022: Received UDP payload: 446
1335383031030: Received UDP payload: 989
1335383031038: mux: GOT CSM_Msg
1335383031041: Received UDP payload: 989
1335383031062: mux: GOT CSM_Msg
1335383031062: Received UDP payload: 989
1335383031069: mux: GOT CSM_Msg
1335383031070: Received UDP payload: 989
1335383031092: mux: GOT CSM_Msg
1335383031092: Received UDP payload: 989
1335383031102: mux: GOT CSM_Msg
1335383031105: Received UDP payload: 989
1335383031112: mux: GOT CSM_Msg
1335383031127: Received UDP payload: 989
1335383031136: mux: GOT CSM_Msg
1335383031139: Received UDP payload: 989
1335383031159: mux: GOT CSM_Msg
1335383031160: Received UDP payload: 446
1335383031167: Received UDP payload: 989
1335383031177: mux: GOT CSM_Msg
1335383031193: Received UDP payload: 989
1335383031234: mux: GOT CSM_Msg
1335383031235: Received UDP payload: 989
1335383031242: mux: GOT CSM_Msg
1335383031262: Received UDP payload: 989
1335383031306: mux: GOT CSM_Msg
1335383031307: Received UDP payload: 446
1335383031324: Received UDP payload: 989
1335383031339: mux: GOT CSM_Msg
1335383031342: Received UDP payload: 989
1335383031364: mux: GOT CSM_Msg
1335383031364: Received UDP payload: 989
1335383031368: mux: GOT CSM_Msg
1335383031371: Received UDP payload: 989
1335383031378: mux: GOT CSM_Msg
1335383031392: Received UDP payload: 989
1335383031401: mux: GOT CSM_Msg
1335383031402: Received UDP payload: 989
1335383031411: mux: GOT CSM_Msg
1335383031424: Received UDP payload: 989
1335383031432: mux: GOT CSM_Msg
1335383031436: Received UDP payload: 989
1335383031443: mux: GOT CSM_Msg
1335383031445: Received UDP payload: 989
1335383031468: mux: GOT CSM_Msg
1335383031470: Received UDP payload: 446
1335383031476: Received UDP payload: 989
1335383031497: mux: GOT CSM_Msg
1335383031500: Received UDP payload: 989
1335383031509: mux: GOT CSM_Msg
1335383031510: Received UDP payload: 989
1335383031527: mux: GOT CSM_Msg
1335383031528: Received UDP payload: 989
1335383031540: mux: GOT CSM_Msg
1335383031540: Received UDP payload: 989
1335383031546: mux: GOT CSM_Msg
1335383031559: Received UDP payload: 989
1335383031571: mux: GOT CSM_Msg
1335383031571: Received UDP payload: 989
1335383031579: mux: GOT CSM_Msg
1335383031590: Received UDP payload: 989
1335383031602: mux: GOT CSM_Msg
1335383031602: Received UDP payload: 989
1335383031610: mux: GOT CSM_Msg
1335383031622: Received UDP payload: 989
1335383031630: mux: GOT CSM_Msg
1335383031631: Received UDP payload: 989
1335383031641: mux: GOT CSM_Msg
1335383031662: Received UDP payload: 989
1335383031669: mux: GOT CSM_Msg
1335383031670: Received UDP payload: 446
1335383031678: Received UDP payload: 446
1335383031756: Received UDP payload: 6240
1335383031791: mux: GOT CSM_Msg
1335383031795: Received UDP payload: 989
1335383031811: mux: GOT CSM_Msg
1335383031811: Received UDP payload: 446
1335383031845: Received UDP payload: 989
1335383031863: mux: GOT CSM_Msg
1335383031891: Received UDP payload: 446
1335383031939: Received UDP payload: 989
1335383031943: mux: GOT CSM_Msg
1335383031955: Received UDP payload: 989
1335383031964: mux: GOT CSM_Msg
1335383031969: Received UDP payload: 989
1335383031991: mux: GOT CSM_Msg
1335383031994: Received UDP payload: 989
1335383032006: mux: GOT CSM_Msg
1335383032007: Received UDP payload: 989
1335383032022: mux: GOT CSM_Msg
1335383032065: Received UDP payload: 989
1335383032069: mux: GOT CSM_Msg
1335383032076: Received UDP payload: 989
1335383032091: mux: GOT CSM_Msg
1335383032091: Received UDP payload: 989
1335383032099: mux: GOT CSM_Msg
1335383032100: Received UDP payload: 989
1335383032109: mux: GOT CSM_Msg
1335383032112: Received UDP payload: 989
1335383032129: mux: GOT CSM_Msg
1335383032130: Received UDP payload: 989
1335383032138: mux: GOT CSM_Msg
1335383032141: Received UDP payload: 989
1335383032158: mux: GOT CSM_Msg
1335383032187: Received UDP payload: 989
1335383032198: mux: GOT CSM_Msg
1335383032199: Received UDP payload: 989
1335383032211: mux: GOT CSM_Msg
1335383032211: Received UDP payload: 446
1335383032242: Received UDP payload: 446
1335383032329: .......... GPS onLocationChanged ...... 
1335383032330: Loc = Location[mProvider=gps,mTime=1335469433000,mLatitude=42.358233224947405,mLongitude=-71.0928104029821,mHasAltitude=true,mAltitude=-23.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=true,mBearing=65.94086,mHasAccuracy=true,mAccuracy=35.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (-1,-1)
1335383032330: GPS x/long:-71.0928104029821, GPS y/lat: 42.358233224947405. Region width in x: 20.0
1335383032331: location PINPOINTS to region = 2.0, previous -1
1335383032331: Hysteresis is 0.0
1335383032331: location CHANGED TO NEW region = (2,0) from region = (-1,-1)
1335383032332: moving from region (-1,-1), to (2,0)
1335383032332: VCoreDaemon.java inside stateTransition ..........
1335383032332: removing leaderRequestRetryR because I'm doing a stateTransition
1335383032343: ..... VCoreDaemon.java targetState = JOINING
1335383032343: posting leaderRequestRetryR because I'm joining
1335383032343: sending LEADER_REQUEST
1335383032344: inside sendPacket(Packet p)
1335383032344: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335383032351: Sending UDP payload: 446
1335383032362: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335383032551: Received UDP payload: 446
1335383032644: sending LEADER_REQUEST
1335383032644: inside sendPacket(Packet p)
1335383032644: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335383032645: Sending UDP payload: 446
1335383032945: sending LEADER_REQUEST
1335383032946: inside sendPacket(Packet p)
1335383032947: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335383032965: Sending UDP payload: 446
1335383033248: sending LEADER_REQUEST
1335383033249: inside sendPacket(Packet p)
1335383033250: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335383033282: Sending UDP payload: 446
1335383033361: inside leaderRequestTimeoutR beacuse I didn't hear a leader_reply and I'm removing leaderRequestRetryR because leader_request timed out
1335383033362: inside leaderRequestTimeoutR and my state was JOINING, so I'll try to stateTransition to LEADER
1335383033362: VCoreDaemon.java inside stateTransition ..........
1335383033362: removing leaderRequestRetryR because I'm doing a stateTransition
1335383033362: ..... VCoreDaemon.java targetState = LEADER
1335383033362: trying to take leadership to the cloud
1335383033459: .......... GPS onLocationChanged ...... 
1335383033460: Loc = Location[mProvider=gps,mTime=1335469434000,mLatitude=42.35824657719744,mLongitude=-71.09282601978035,mHasAltitude=true,mAltitude=-24.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=true,mBearing=25.645939,mHasAccuracy=true,mAccuracy=35.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383033461: GPS x/long:-71.09282601978035, GPS y/lat: 42.35824657719744. Region width in x: 20.0
1335383033461: location PINPOINTS to region = 2.0, previous 2
1335383033461: Hysteresis is 0.0
1335383033463: stay at region 2
1335383034305: .......... GPS onLocationChanged ...... 
1335383034307: Loc = Location[mProvider=gps,mTime=1335469435000,mLatitude=42.358248533180024,mLongitude=-71.09284248440943,mHasAltitude=true,mAltitude=-21.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=true,mBearing=343.0802,mHasAccuracy=true,mAccuracy=25.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383034307: GPS x/long:-71.09284248440943, GPS y/lat: 42.358248533180024. Region width in x: 20.0
1335383034307: location PINPOINTS to region = 2.0, previous 2
1335383034307: Hysteresis is 0.0
1335383034308: stay at region 2
1335383034834: Received UDP payload: 446
1335383035304: .......... GPS onLocationChanged ...... 
1335383035305: Loc = Location[mProvider=gps,mTime=1335469436000,mLatitude=42.35824884050241,mLongitude=-71.09287044108815,mHasAltitude=true,mAltitude=-20.0,mHasSpeed=true,mSpeed=0.47572836,mHasBearing=true,mBearing=292.25916,mHasAccuracy=true,mAccuracy=25.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383035306: GPS x/long:-71.09287044108815, GPS y/lat: 42.35824884050241. Region width in x: 20.0
1335383035306: location PINPOINTS to region = 2.0, previous 2
1335383035306: Hysteresis is 0.0
1335383035306: stay at region 2
1335383036340: .......... GPS onLocationChanged ...... 
1335383036341: Loc = Location[mProvider=gps,mTime=1335469437000,mLatitude=42.35824579730722,mLongitude=-71.09289312487992,mHasAltitude=true,mAltitude=-20.0,mHasSpeed=true,mSpeed=0.5262704,mHasBearing=true,mBearing=271.71732,mHasAccuracy=true,mAccuracy=25.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383036342: GPS x/long:-71.09289312487992, GPS y/lat: 42.35824579730722. Region width in x: 20.0
1335383036342: location PINPOINTS to region = 2.0, previous 2
1335383036342: Hysteresis is 0.0
1335383036342: stay at region 2
1335383036525: cloud accepted leadership request, no csm data included.
1335383036531: ..... VCoreDaemon.java targetState = LEADER and create new DSMLayer !!!! :D:D:D:D:D
1335383036535: *** Starting CSM Layer ***
1335383036536: *** CSM Layer starting with cache disabled ***
1335383036536: *** CSM Layer starting with forwarding enabled ***
1335383036573: DSMLayer starting
1335383036573: UserApp started.
1335383036575: UserApp for Camera Diploma initialized and waiting for requests.
1335383036890: inside sendPacket(Packet p)
1335383036900: Sending UDP payload: 22318
1335383036903: now fully up as LEADER (id=5113) of (2,0)
1335383036905: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335383036905: inside sendPacket(Packet p)
1335383036907: Sending UDP payload: 446
1335383037237: Received UDP payload: 446
1335383037340: .......... GPS onLocationChanged ...... 
1335383037341: Loc = Location[mProvider=gps,mTime=1335469438000,mLatitude=42.35823824621998,mLongitude=-71.09291199918212,mHasAltitude=true,mAltitude=-22.0,mHasSpeed=true,mSpeed=0.56680435,mHasBearing=true,mBearing=262.30615,mHasAccuracy=true,mAccuracy=15.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383037341: GPS x/long:-71.09291199918212, GPS y/lat: 42.35823824621998. Region width in x: 20.0
1335383037341: location PINPOINTS to region = 2.0, previous 2
1335383037342: Hysteresis is 0.0
1335383037342: stay at region 2
1335383038302: .......... GPS onLocationChanged ...... 
1335383038303: Loc = Location[mProvider=gps,mTime=1335469439000,mLatitude=42.35822844109304,mLongitude=-71.09293217010224,mHasAltitude=true,mAltitude=-22.0,mHasSpeed=true,mSpeed=0.6161051,mHasBearing=true,mBearing=254.65494,mHasAccuracy=true,mAccuracy=15.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383038304: GPS x/long:-71.09293217010224, GPS y/lat: 42.35822844109304. Region width in x: 20.0
1335383038304: location PINPOINTS to region = 2.0, previous 2
1335383038304: Hysteresis is 0.0
1335383038304: stay at region 2
1335383038320: Received UDP payload: 463
1335383038518: Received UDP payload: 5618
1335383038567: mux: GOT CSM_Msg
1335383038568: nonce 485 heard from src region (0,0)
1335383038574: Received UDP payload: 989
1335383038593: mux: GOT CSM_Msg
1335383038593: nonce 486 heard from src region (0,0)
1335383039302: .......... GPS onLocationChanged ...... 
1335383039303: Loc = Location[mProvider=gps,mTime=1335469440000,mLatitude=42.35822019141993,mLongitude=-71.09294769461388,mHasAltitude=true,mAltitude=-24.0,mHasSpeed=true,mSpeed=0.65500927,mHasBearing=true,mBearing=250.98343,mHasAccuracy=true,mAccuracy=15.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383039303: GPS x/long:-71.09294769461388, GPS y/lat: 42.35822019141993. Region width in x: 20.0
1335383039304: location PINPOINTS to region = 2.0, previous 2
1335383039304: Hysteresis is 0.0
1335383039304: stay at region 2
1335383040302: .......... GPS onLocationChanged ...... 
1335383040303: Loc = Location[mProvider=gps,mTime=1335469441000,mLatitude=42.35821223694373,mLongitude=-71.09296205173094,mHasAltitude=true,mAltitude=-23.0,mHasSpeed=true,mSpeed=0.6913496,mHasBearing=true,mBearing=248.45897,mHasAccuracy=true,mAccuracy=15.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383040303: GPS x/long:-71.09296205173094, GPS y/lat: 42.35821223694373. Region width in x: 20.0
1335383040303: location PINPOINTS to region = 2.0, previous 2
1335383040303: Hysteresis is 0.0
1335383040303: stay at region 2
1335383041095: canPressButton = TRUE
1335383041095: areButtonsEnabled --> false
1335383041095: disabling buttons ...
1335383041096: took picture disableButtonsR
1335383041096: areButtonsEnabled --> false
1335383041259: reg=2 id=5113 state=2 regionWidth=20.0 hyst=0.0 takeNum=1 takeCamGood=0 takeGoodSave=0 takeBad=0 takeTimedout=0 takePercent=0% getNum=0 getGood=0 getBad=0 getTimedout=0 getPercent=-1%
1335383041259: Clicked take picture button ..
1335383041356: .......... GPS onLocationChanged ...... 
1335383041317: Received UDP payload: 463
1335383041357: Loc = Location[mProvider=gps,mTime=1335469442000,mLatitude=42.358204358754186,mLongitude=-71.09297622213974,mHasAltitude=true,mAltitude=-23.0,mHasSpeed=true,mSpeed=0.72846544,mHasBearing=true,mBearing=246.20067,mHasAccuracy=true,mAccuracy=15.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383041358: GPS x/long:-71.09297622213974, GPS y/lat: 42.358204358754186. Region width in x: 20.0
1335383041359: location PINPOINTS to region = 2.0, previous 2
1335383041359: Hysteresis is 0.0
1335383041360: stay at region 2
1335383041908: inside sendPacket(Packet p)
1335383041909: Sending UDP payload: 446
1335383042101: inside HandlePictureStorage onPictureTaken()
1335383042102: reg=2 id=5113 state=2 regionWidth=20.0 hyst=0.0 takeNum=1 takeCamGood=1 takeGoodSave=0 takeBad=0 takeTimedout=0 takePercent=0% getNum=0 getGood=0 getBad=0 getTimedout=0 getPercent=-1%
1335383042482: Picture successfully taken, ORIG BYTE LENGTH = 2015287
1335383042856: Our new height x width: 240 x 320
1335383042857: Show photo from handle my camera take
1335383042858: ** Client making NEWly TAKEN photo PACKET to send to leader **
1335383042858: change local requestCounter to 1
1335383042880: BYTE SIZE AFTER COMPRESSION: 5547
1335383042885: Client about to send CLIENT_UPLOAD_PHOTO packet, REQUEST: 5113001 Client in region: 2 Client nodID: 5113
1335383042179: Received UDP payload: 3493
1335383042183: mux: Inside mux Packet.CLIENT_REQUEST
1335383042183: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383042183: inside handleClientRequest. Originator leader of region 2
1335383042183: got new request, requestCounter = 5108034
1335383042184: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335383042185: Sending PROC_REQUEST 10:0 (2,0)->(2,0)
1335383042185: Dispatching Atom PROC_REQUEST 10:0 (2,0)->(2,0)
1335383042186: mux: I got a CSM packet at a leader 

1335383042925: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335383042926: I'm a leader and I successfully saved my client's new photo
1335383042927: now showing in UI the new photo I just saved ... 
1335383042927: the photo length: 2846
1335383042995: end of server show photo aside %%%%%%%%%
1335383042185: Note down new request by adding requestCounter=5108034 to HashMap processedRequests
1335383042185: Make FirstLeg Ack regardless of new or already-processed requests
1335383042186: The leader sending a First Leg ack to originator client (which id = 5108)
1335383042186: inside sendPacket(Packet p)
1335383042200: Sending UDP payload: 3857
1335383042206: removed replies before id 0 from sentReplies of size 0
1335383042206: inside handleDSMRequest. At requests's remote leader of region 2
1335383042215: Inside UPLOAD_PHOTO!!
1335383042222: my_gpinfo.isSuccess is now (should be true): true
1335383042222: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335383042230: Received PROC_REQUEST 10:0 (2,0)->(2,0), replying PROC_REPLY 10:0 (2,0)->(2,0)
1335383042231: Dispatching Atom PROC_REPLY 10:0 (2,0)->(2,0)
1335383042237: mux: I got a CSM packet at a leader 

1335383042236: Sending UDP payload: 446
1335383042241: Sending UDP payload: 989
1335383042241: Received PROC_REPLY 10:0 (2,0)->(2,0), handing to UserApp
1335383042242: inside handleDSMReply. Now back in originator leader of region 2
1335383042242: DSM layer: Going to and from remote region took latency = 58
1335383042242: DSM layer: orig leader sent packet at 1335383042184 ~ received reply from remote leader at 1335383042242
1335383042243: Originator Region=2's Leader (for Client=5108) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383042243: change leader replyCounter to: 1
1335383042244: reply packet contains the success info for UPLOAD_PHOTO
1335383042244: inside sendReplies of replyCount = 511300001
1335383042244: =======================
1335383042244: inside sendReplyRepeatingRunnable for replyCount = 511300001
1335383042245: Leader about to send REPLY packet, number: 511300001 type: 16 Leader in region: (2,0) to Client nodID: 5108
1335383042245: I (the leader) was not the originator client (which id = 5108) so I use UDP to send packet back to my nonleader
1335383042245: inside sendPacket(Packet p)
1335383042245: === Finished one round of sending REPLY Packet =======
1335383042248: Sending UDP payload: 642
1335383043000: .......... GPS onLocationChanged ...... 
1335383042545: =======================
1335383042546: inside sendReplyRepeatingRunnable for replyCount = 511300001
1335383042546: Leader about to send REPLY packet, number: 511300001 type: 16 Leader in region: (2,0) to Client nodID: 5108
1335383042546: I (the leader) was not the originator client (which id = 5108) so I use UDP to send packet back to my nonleader
1335383042546: inside sendPacket(Packet p)
1335383042546: === Finished one round of sending REPLY Packet =======
1335383042549: Sending UDP payload: 642
1335383042589: Received UDP payload: 446
1335383042591: mux: Inside mux Packet.CLIENT_REQUEST
1335383042591: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383042592: inside handleClientRequest. Originator leader of region 2
1335383042592: got new request, requestCounter = 5108036
1335383042592: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300001
1335383042592: Yay the last leg succeeded. Removing reply runnables ...
1335383042592: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300001
1335383042592: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300001
1335383042593: do not send ack for received final_leg_ack
1335383042642: Received UDP payload: 625
1335383042651: mux: Inside mux Packet.CLIENT_REQUEST
1335383042651: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383042651: inside handleClientRequest. Originator leader of region 2
1335383042652: got new request, requestCounter = 5115010
1335383042652: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383042653: Sending to region: 2
1335383042653: Sending PROC_REQUEST 11:1 (2,0)->(2,0)
1335383042654: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(2,0)
1335383042654: mux: I got a CSM packet at a leader 

1335383042654: Note down new request by adding requestCounter=5115010 to HashMap processedRequests
1335383042654: Make FirstLeg Ack regardless of new or already-processed requests
1335383042654: The leader sending a First Leg ack to originator client (which id = 5115)
1335383042654: inside sendPacket(Packet p)
1335383042659: Sending UDP payload: 989
1335383042660: removed replies before id 1 from sentReplies of size 0
1335383042664: inside handleDSMRequest. At requests's remote leader of region 2
1335383042665: INSIDE SERVER_GET_PHOTO!!!
1335383042666: dst_region == src_region = 2
1335383042666:  1 self to self atomRequest
1335383042680: Received PROC_REQUEST 11:1 (2,0)->(2,0), replying PROC_REPLY 11:1 (2,0)->(2,0)
1335383042681: Dispatching Atom PROC_REPLY 11:1 (2,0)->(2,0)
1335383042688: mux: I got a CSM packet at a leader 

1335383042684: Sending UDP payload: 446
1335383042690: Sending UDP payload: 3857
1335383042692: Received PROC_REPLY 11:1 (2,0)->(2,0), handing to UserApp
1335383042692: inside handleDSMReply. Now back in originator leader of region 2
1335383042692: DSM layer: Going to and from remote region took latency = 39
1335383042692: DSM layer: orig leader sent packet at 1335383042653 ~ received reply from remote leader at 1335383042692
1335383042693: Originator Region=2's Leader (for Client=5115) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383042693: change leader replyCounter to: 2
1335383042695: reply packet contains the newest photo/success info from the remote region
1335383042699: inside sendReplies of replyCount = 511300002
1335383042699: =======================
1335383042700: inside sendReplyRepeatingRunnable for replyCount = 511300002
1335383042700: Leader about to send REPLY packet, number: 511300002 type: 15 Leader in region: (2,0) to Client nodID: 5115
1335383042700: I (the leader) was not the originator client (which id = 5115) so I use UDP to send packet back to my nonleader
1335383042700: inside sendPacket(Packet p)
1335383042700: === Finished one round of sending REPLY Packet =======
1335383042715: Sending UDP payload: 3510
1335383042841: Received UDP payload: 446
1335383042844: mux: Inside mux Packet.CLIENT_REQUEST
1335383042844: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383042844: inside handleClientRequest. Originator leader of region 2
1335383042845: got new request, requestCounter = 5115011
1335383042845: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300002
1335383042845: Yay the last leg succeeded. Removing reply runnables ...
1335383042845: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300002
1335383042845: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300002
1335383042846: do not send ack for received final_leg_ack
1335383043034: ----------------------------
1335383043034: inside sendRequestPacketRepeatingRunnable for requestCount = 5113001
1335383043050: I'm a leader, my requesting photos packet going to mux directly
1335383043076: --- Finished one round of sending REQUEST Packet ---------
1335383043011: Loc = Location[mProvider=gps,mTime=1335469443000,mLatitude=42.358197953397564,mLongitude=-71.09298957990356,mHasAltitude=true,mAltitude=-23.0,mHasSpeed=true,mSpeed=0.75952995,mHasBearing=true,mBearing=245.13857,mHasAccuracy=true,mAccuracy=15.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383043012: GPS x/long:-71.09298957990356, GPS y/lat: 42.358197953397564. Region width in x: 20.0
1335383043012: location PINPOINTS to region = 2.0, previous 2
1335383043012: Hysteresis is 0.0
1335383043013: stay at region 2
1335383043051: mux: Inside mux Packet.CLIENT_REQUEST
1335383043051: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383043191: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335383043051: inside handleClientRequest. Originator leader of region 2
1335383043051: got new request, requestCounter = 5113001
1335383043051: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335383043052: Sending PROC_REQUEST 10:2 (2,0)->(2,0)
1335383043052: Dispatching Atom PROC_REQUEST 10:2 (2,0)->(2,0)
1335383043053: mux: I got a CSM packet at a leader 

1335383043194: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335383043196: I'm a leader and I successfully saved my client's new photo
1335383043196: now showing in UI the new photo I just saved ... 
1335383043197: the photo length: 5547
1335383043278: end of server show photo aside %%%%%%%%%
1335383043052: Note down new request by adding requestCounter=5113001 to HashMap processedRequests
1335383043052: Make FirstLeg Ack regardless of new or already-processed requests
1335383043053: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5113)
1335383043055: Sending UDP payload: 6558
1335383043057: removed replies before id 2 from sentReplies of size 0
1335383043059: inside handleDSMRequest. At requests's remote leader of region 2
1335383043079: Inside UPLOAD_PHOTO!!
1335383043080: my_gpinfo.isSuccess is now (should be true): true
1335383043086: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335383043101: Received PROC_REQUEST 10:2 (2,0)->(2,0), replying PROC_REPLY 10:2 (2,0)->(2,0)
1335383043103: Dispatching Atom PROC_REPLY 10:2 (2,0)->(2,0)
1335383043114: mux: I got a CSM packet at a leader 

1335383043282: Client received Packet.CLIENT_UPLOAD_PHOTO_ACK
1335383043282: disabling progressdialog due to successful new photo upload
1335383043282: Inside _enableButtons
1335383043283: areButtonsEnabled --> true
1335383043283: send final leg ack regardless of new or already-processed reply
1335383043284: inside finalLegAck: change requestCounter to 2
1335383043284: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5113002 Client in region: (2,0) Client nodID: 5113
1335383043284: I'm a leader client, my final_leg packet going to mux directly
1335383043299: new client_upload_photo_ack reply with replyCounter 511300003
1335383043299: note down new reply by adding replyCounter=511300003 to HashMap processedReplies
1335383043299: leader upload new photo latency = 1335383043282
1335383043300: = leader upload start 0 ~ stop 1335383043282
1335383043313: reg=2 id=5113 state=2 regionWidth=20.0 hyst=0.0 takeNum=1 takeCamGood=1 takeGoodSave=1 takeBad=0 takeTimedout=0 takePercent=100% getNum=0 getGood=0 getBad=0 getTimedout=0 getPercent=-1%
1335383043314: SUCCESS Client now knows saving photo on its leader succeeded
1335383043118: Sending UDP payload: 989
1335383043124: Received PROC_REPLY 10:2 (2,0)->(2,0), handing to UserApp
1335383043124: inside handleDSMReply. Now back in originator leader of region 2
1335383043124: DSM layer: Going to and from remote region took latency = 73
1335383043124: DSM layer: orig leader sent packet at 1335383043051 ~ received reply from remote leader at 1335383043124
1335383043133: Originator Region=2's Leader (for Client=5113) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383043134: change leader replyCounter to: 3
1335383043144: reply packet contains the success info for UPLOAD_PHOTO
1335383043144: inside sendReplies of replyCount = 511300003
1335383043144: =======================
1335383043144: inside sendReplyRepeatingRunnable for replyCount = 511300003
1335383043145: Leader about to send REPLY packet, number: 511300003 type: 16 Leader in region: (2,0) to Client nodID: 5113
1335383043145: I (the leader) was also the originator client (id = 5113) so I hand the packet to my mux directly, without UDP
1335383043145: === Finished one round of sending REPLY Packet =======
1335383043284: mux: Inside mux Packet.CLIENT_REQUEST
1335383043285: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383043285: inside handleClientRequest. Originator leader of region 2
1335383043285: got new request, requestCounter = 5113002
1335383043286: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300003
1335383043286: Yay the last leg succeeded. Removing reply runnables ...
1335383043286: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300003
1335383043286: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300003
1335383043286: do not send ack for received final_leg_ack
1335383044300: .......... GPS onLocationChanged ...... 
1335383044305: Loc = Location[mProvider=gps,mTime=1335469445000,mLatitude=42.358197864665506,mLongitude=-71.09300218059693,mHasAltitude=true,mAltitude=-20.0,mHasSpeed=true,mSpeed=0.78492945,mHasBearing=true,mBearing=250.32655,mHasAccuracy=true,mAccuracy=15.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383044305: GPS x/long:-71.09300218059693, GPS y/lat: 42.358197864665506. Region width in x: 20.0
1335383044306: location PINPOINTS to region = 2.0, previous 2
1335383044306: Hysteresis is 0.0
1335383044306: stay at region 2
1335383044528: Received UDP payload: 625
1335383044582: mux: Inside mux Packet.CLIENT_REQUEST
1335383044582: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383044583: inside handleClientRequest. Originator leader of region 2
1335383044583: got new request, requestCounter = 5115012
1335383044583: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383044584: Sending to region: 2
1335383044584: Sending PROC_REQUEST 11:3 (2,0)->(2,0)
1335383044585: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(2,0)
1335383044586: mux: I got a CSM packet at a leader 

1335383044585: Note down new request by adding requestCounter=5115012 to HashMap processedRequests
1335383044585: Make FirstLeg Ack regardless of new or already-processed requests
1335383044585: The leader sending a First Leg ack to originator client (which id = 5115)
1335383044585: inside sendPacket(Packet p)
1335383044607: Sending UDP payload: 989
1335383044609: removed replies before id 3 from sentReplies of size 0
1335383044610: inside handleDSMRequest. At requests's remote leader of region 2
1335383044618: INSIDE SERVER_GET_PHOTO!!!
1335383044624: dst_region == src_region = 2
1335383044625:  1 self to self atomRequest
1335383044632: Received PROC_REQUEST 11:3 (2,0)->(2,0), replying PROC_REPLY 11:3 (2,0)->(2,0)
1335383044633: Dispatching Atom PROC_REPLY 11:3 (2,0)->(2,0)
1335383044654: mux: I got a CSM packet at a leader 

1335383044653: Sending UDP payload: 446
1335383044656: Sending UDP payload: 6558
1335383044662: Received PROC_REPLY 11:3 (2,0)->(2,0), handing to UserApp
1335383044662: inside handleDSMReply. Now back in originator leader of region 2
1335383044663: DSM layer: Going to and from remote region took latency = 78
1335383044663: DSM layer: orig leader sent packet at 1335383044584 ~ received reply from remote leader at 1335383044662
1335383044681: Originator Region=2's Leader (for Client=5115) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383044682: change leader replyCounter to: 4
1335383044682: reply packet contains the newest photo/success info from the remote region
1335383044682: inside sendReplies of replyCount = 511300004
1335383044682: =======================
1335383044682: inside sendReplyRepeatingRunnable for replyCount = 511300004
1335383044683: Leader about to send REPLY packet, number: 511300004 type: 15 Leader in region: (2,0) to Client nodID: 5115
1335383044683: I (the leader) was not the originator client (which id = 5115) so I use UDP to send packet back to my nonleader
1335383044683: inside sendPacket(Packet p)
1335383044683: === Finished one round of sending REPLY Packet =======
1335383044691: Sending UDP payload: 6211
1335383044967: Received UDP payload: 446
1335383044984: =======================
1335383044985: inside sendReplyRepeatingRunnable for replyCount = 511300004
1335383044986: Leader about to send REPLY packet, number: 511300004 type: 15 Leader in region: (2,0) to Client nodID: 5115
1335383044997: I (the leader) was not the originator client (which id = 5115) so I use UDP to send packet back to my nonleader
1335383044997: inside sendPacket(Packet p)
1335383044998: === Finished one round of sending REPLY Packet =======
1335383045046: mux: Inside mux Packet.CLIENT_REQUEST
1335383045046: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383045032: Sending UDP payload: 6211
1335383045046: inside handleClientRequest. Originator leader of region 2
1335383045046: got new request, requestCounter = 5115013
1335383045046: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300004
1335383045046: Yay the last leg succeeded. Removing reply runnables ...
1335383045047: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300004
1335383045047: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300004
1335383045047: do not send ack for received final_leg_ack
1335383045194: Received UDP payload: 4297
1335383045209: mux: Inside mux Packet.CLIENT_REQUEST
1335383045209: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383045209: inside handleClientRequest. Originator leader of region 2
1335383045210: got new request, requestCounter = 5108037
1335383045210: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335383045212: Sending PROC_REQUEST 10:4 (2,0)->(2,0)
1335383045214: Dispatching Atom PROC_REQUEST 10:4 (2,0)->(2,0)
1335383045240: mux: I got a CSM packet at a leader 

1335383045309: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335383045314: I'm a leader and I successfully saved my client's new photo
1335383045316: now showing in UI the new photo I just saved ... 
1335383045317: the photo length: 3650
1335383045386: end of server show photo aside %%%%%%%%%
1335383045217: Note down new request by adding requestCounter=5108037 to HashMap processedRequests
1335383045224: Make FirstLeg Ack regardless of new or already-processed requests
1335383045224: The leader sending a First Leg ack to originator client (which id = 5108)
1335383045224: inside sendPacket(Packet p)
1335383045249: Sending UDP payload: 4661
1335383045255: removed replies before id 4 from sentReplies of size 0
1335383045255: inside handleDSMRequest. At requests's remote leader of region 2
1335383045256: Inside UPLOAD_PHOTO!!
1335383045259: my_gpinfo.isSuccess is now (should be true): true
1335383045259: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335383045263: Received PROC_REQUEST 10:4 (2,0)->(2,0), replying PROC_REPLY 10:4 (2,0)->(2,0)
1335383045264: Dispatching Atom PROC_REPLY 10:4 (2,0)->(2,0)
1335383045282: mux: I got a CSM packet at a leader 

1335383045277: Sending UDP payload: 446
1335383045284: Sending UDP payload: 989
1335383045285: Received PROC_REPLY 10:4 (2,0)->(2,0), handing to UserApp
1335383045285: inside handleDSMReply. Now back in originator leader of region 2
1335383045299: DSM layer: Going to and from remote region took latency = 75
1335383045299: DSM layer: orig leader sent packet at 1335383045210 ~ received reply from remote leader at 1335383045285
1335383045310: Originator Region=2's Leader (for Client=5108) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383045311: change leader replyCounter to: 5
1335383045311: reply packet contains the success info for UPLOAD_PHOTO
1335383045311: inside sendReplies of replyCount = 511300005
1335383045311: =======================
1335383045311: inside sendReplyRepeatingRunnable for replyCount = 511300005
1335383045312: Leader about to send REPLY packet, number: 511300005 type: 16 Leader in region: (2,0) to Client nodID: 5108
1335383045312: I (the leader) was not the originator client (which id = 5108) so I use UDP to send packet back to my nonleader
1335383045312: inside sendPacket(Packet p)
1335383045312: === Finished one round of sending REPLY Packet =======
1335383045316: Sending UDP payload: 642
1335383045401: Received UDP payload: 446
1335383045412: mux: Inside mux Packet.CLIENT_REQUEST
1335383045412: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383045412: inside handleClientRequest. Originator leader of region 2
1335383045413: got new request, requestCounter = 5115014
1335383045413: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300004
1335383045413: Yay the last leg succeeded. Removing reply runnables ...
1335383045413: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300004
1335383045413: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300004
1335383045413: do not send ack for received final_leg_ack
1335383045527: Received UDP payload: 4297
1335383045530: mux: Inside mux Packet.CLIENT_REQUEST
1335383045531: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383045531: inside handleClientRequest. Originator leader of region 2
1335383045531: discarding repeated requestCounter=5108037, but still send an ack back
1335383045531: Note down new request by adding requestCounter=5108037 to HashMap processedRequests
1335383045531: Make FirstLeg Ack regardless of new or already-processed requests
1335383045532: The leader sending a First Leg ack to originator client (which id = 5108)
1335383045532: inside sendPacket(Packet p)
1335383045533: Sending UDP payload: 446
1335383045613: =======================
1335383045613: inside sendReplyRepeatingRunnable for replyCount = 511300005
1335383045614: Leader about to send REPLY packet, number: 511300005 type: 16 Leader in region: (2,0) to Client nodID: 5108
1335383045614: I (the leader) was not the originator client (which id = 5108) so I use UDP to send packet back to my nonleader
1335383045614: inside sendPacket(Packet p)
1335383045614: === Finished one round of sending REPLY Packet =======
1335383045616: Sending UDP payload: 642
1335383045706: Received UDP payload: 446
1335383045709: mux: Inside mux Packet.CLIENT_REQUEST
1335383045709: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383045709: inside handleClientRequest. Originator leader of region 2
1335383045709: got new request, requestCounter = 5108038
1335383045710: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300005
1335383045710: Yay the last leg succeeded. Removing reply runnables ...
1335383045710: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300005
1335383045710: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300005
1335383045710: do not send ack for received final_leg_ack
1335383045763: Received UDP payload: 446
1335383045765: mux: Inside mux Packet.CLIENT_REQUEST
1335383045765: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383045765: inside handleClientRequest. Originator leader of region 2
1335383045765: got new request, requestCounter = 5108039
1335383045765: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300005
1335383045765: Yay the last leg succeeded. Removing reply runnables ...
1335383045766: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300005
1335383045773: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300005
1335383045773: do not send ack for received final_leg_ack
1335383046095: Received UDP payload: 625
1335383046131: mux: Inside mux Packet.CLIENT_REQUEST
1335383046131: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383046132: inside handleClientRequest. Originator leader of region 2
1335383046132: got new request, requestCounter = 5115015
1335383046132: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383046136: Sending to region: 2
1335383046137: Sending PROC_REQUEST 11:5 (2,0)->(2,0)
1335383046137: Dispatching Atom PROC_REQUEST 11:5 (2,0)->(2,0)
1335383046150: mux: I got a CSM packet at a leader 

1335383046145: Note down new request by adding requestCounter=5115015 to HashMap processedRequests
1335383046146: Make FirstLeg Ack regardless of new or already-processed requests
1335383046147: The leader sending a First Leg ack to originator client (which id = 5115)
1335383046147: inside sendPacket(Packet p)
1335383046156: Sending UDP payload: 989
1335383046160: removed replies before id 5 from sentReplies of size 0
1335383046160: inside handleDSMRequest. At requests's remote leader of region 2
1335383046162: INSIDE SERVER_GET_PHOTO!!!
1335383046162: dst_region == src_region = 2
1335383046163:  1 self to self atomRequest
1335383046164: Received PROC_REQUEST 11:5 (2,0)->(2,0), replying PROC_REPLY 11:5 (2,0)->(2,0)
1335383046165: Dispatching Atom PROC_REPLY 11:5 (2,0)->(2,0)
1335383046187: mux: I got a CSM packet at a leader 

1335383046184: Sending UDP payload: 446
1335383046192: Sending UDP payload: 4661
1335383046196: Received PROC_REPLY 11:5 (2,0)->(2,0), handing to UserApp
1335383046196: inside handleDSMReply. Now back in originator leader of region 2
1335383046196: DSM layer: Going to and from remote region took latency = 59
1335383046196: DSM layer: orig leader sent packet at 1335383046137 ~ received reply from remote leader at 1335383046196
1335383046210: Originator Region=2's Leader (for Client=5115) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383046210: change leader replyCounter to: 6
1335383046211: reply packet contains the newest photo/success info from the remote region
1335383046212: inside sendReplies of replyCount = 511300006
1335383046213: =======================
1335383046213: inside sendReplyRepeatingRunnable for replyCount = 511300006
1335383046213: Leader about to send REPLY packet, number: 511300006 type: 15 Leader in region: (2,0) to Client nodID: 5115
1335383046214: I (the leader) was not the originator client (which id = 5115) so I use UDP to send packet back to my nonleader
1335383046214: inside sendPacket(Packet p)
1335383046214: === Finished one round of sending REPLY Packet =======
1335383046220: Sending UDP payload: 4314
1335383046312: .......... GPS onLocationChanged ...... 
1335383046313: Loc = Location[mProvider=gps,mTime=1335469447000,mLatitude=42.358186364795955,mLongitude=-71.09297103230666,mHasAltitude=true,mAltitude=-27.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=true,mBearing=265.1419,mHasAccuracy=true,mAccuracy=15.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383046314: GPS x/long:-71.09297103230666, GPS y/lat: 42.358186364795955. Region width in x: 20.0
1335383046314: location PINPOINTS to region = 2.0, previous 2
1335383046314: Hysteresis is 0.0
1335383046314: stay at region 2
1335383046390: Received UDP payload: 446
1335383046394: mux: Inside mux Packet.CLIENT_REQUEST
1335383046394: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383046394: inside handleClientRequest. Originator leader of region 2
1335383046394: got new request, requestCounter = 5115016
1335383046394: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300006
1335383046398: Yay the last leg succeeded. Removing reply runnables ...
1335383046399: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300006
1335383046399: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300006
1335383046399: do not send ack for received final_leg_ack
1335383046908: inside sendPacket(Packet p)
1335383046919: Sending UDP payload: 446
1335383047289: Received UDP payload: 625
1335383047292: mux: Inside mux Packet.CLIENT_REQUEST
1335383047292: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383047292: inside handleClientRequest. Originator leader of region 2
1335383047292: got new request, requestCounter = 5115017
1335383047292: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383047298: Sending to region: 2
1335383047298: Sending PROC_REQUEST 11:6 (2,0)->(2,0)
1335383047305: Dispatching Atom PROC_REQUEST 11:6 (2,0)->(2,0)
1335383047306: mux: I got a CSM packet at a leader 

1335383047305: Note down new request by adding requestCounter=5115017 to HashMap processedRequests
1335383047305: Make FirstLeg Ack regardless of new or already-processed requests
1335383047305: The leader sending a First Leg ack to originator client (which id = 5115)
1335383047306: inside sendPacket(Packet p)
1335383047308: Sending UDP payload: 989
1335383047318: removed replies before id 6 from sentReplies of size 0
1335383047319: inside handleDSMRequest. At requests's remote leader of region 2
1335383047321: INSIDE SERVER_GET_PHOTO!!!
1335383047322: dst_region == src_region = 2
1335383047322:  1 self to self atomRequest
1335383047353: Received PROC_REQUEST 11:6 (2,0)->(2,0), replying PROC_REPLY 11:6 (2,0)->(2,0)
1335383047353: Dispatching Atom PROC_REPLY 11:6 (2,0)->(2,0)
1335383047356: mux: I got a CSM packet at a leader 

1335383047354: Sending UDP payload: 446
1335383047358: Sending UDP payload: 4661
1335383047362: Received PROC_REPLY 11:6 (2,0)->(2,0), handing to UserApp
1335383047363: inside handleDSMReply. Now back in originator leader of region 2
1335383047363: DSM layer: Going to and from remote region took latency = 65
1335383047363: DSM layer: orig leader sent packet at 1335383047298 ~ received reply from remote leader at 1335383047363
1335383047364: Originator Region=2's Leader (for Client=5115) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383047364: change leader replyCounter to: 7
1335383047364: reply packet contains the newest photo/success info from the remote region
1335383047364: inside sendReplies of replyCount = 511300007
1335383047365: =======================
1335383047365: inside sendReplyRepeatingRunnable for replyCount = 511300007
1335383047365: Leader about to send REPLY packet, number: 511300007 type: 15 Leader in region: (2,0) to Client nodID: 5115
1335383047365: I (the leader) was not the originator client (which id = 5115) so I use UDP to send packet back to my nonleader
1335383047365: inside sendPacket(Packet p)
1335383047366: === Finished one round of sending REPLY Packet =======
1335383047367: Sending UDP payload: 4314
1335383047398: .......... GPS onLocationChanged ...... 
1335383047407: Loc = Location[mProvider=gps,mTime=1335469448000,mLatitude=42.35817812979643,mLongitude=-71.09294476110927,mHasAltitude=true,mAltitude=-24.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=true,mBearing=256.06277,mHasAccuracy=true,mAccuracy=15.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383047407: GPS x/long:-71.09294476110927, GPS y/lat: 42.35817812979643. Region width in x: 20.0
1335383047407: location PINPOINTS to region = 2.0, previous 2
1335383047407: Hysteresis is 0.0
1335383047408: stay at region 2
1335383047666: =======================
1335383047666: inside sendReplyRepeatingRunnable for replyCount = 511300007
1335383047667: Leader about to send REPLY packet, number: 511300007 type: 15 Leader in region: (2,0) to Client nodID: 5115
1335383047668: Received UDP payload: 446
1335383047667: I (the leader) was not the originator client (which id = 5115) so I use UDP to send packet back to my nonleader
1335383047676: inside sendPacket(Packet p)
1335383047676: === Finished one round of sending REPLY Packet =======
1335383047717: mux: Inside mux Packet.CLIENT_REQUEST
1335383047717: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383047711: Sending UDP payload: 4314
1335383047717: inside handleClientRequest. Originator leader of region 2
1335383047718: got new request, requestCounter = 5115018
1335383047718: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300007
1335383047718: Yay the last leg succeeded. Removing reply runnables ...
1335383047724: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300007
1335383047725: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300007
1335383047725: do not send ack for received final_leg_ack
1335383047795: Received UDP payload: 446
1335383047797: mux: Inside mux Packet.CLIENT_REQUEST
1335383047797: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383047798: inside handleClientRequest. Originator leader of region 2
1335383047798: got new request, requestCounter = 5115019
1335383047798: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300007
1335383047798: Yay the last leg succeeded. Removing reply runnables ...
1335383047798: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300007
1335383047798: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300007
1335383047807: do not send ack for received final_leg_ack
1335383049073: Received UDP payload: 625
1335383049079: mux: Inside mux Packet.CLIENT_REQUEST
1335383049080: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383049080: inside handleClientRequest. Originator leader of region 2
1335383049080: got new request, requestCounter = 5115020
1335383049080: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383049081: Sending to region: 2
1335383049086: Sending PROC_REQUEST 11:7 (2,0)->(2,0)
1335383049087: Dispatching Atom PROC_REQUEST 11:7 (2,0)->(2,0)
1335383049089: mux: I got a CSM packet at a leader 

1335383049088: Note down new request by adding requestCounter=5115020 to HashMap processedRequests
1335383049088: Make FirstLeg Ack regardless of new or already-processed requests
1335383049088: The leader sending a First Leg ack to originator client (which id = 5115)
1335383049089: inside sendPacket(Packet p)
1335383049102: Received UDP payload: 446
1335383049119: Sending UDP payload: 989
1335383049127: Received UDP payload: 446
1335383049129: removed replies before id 7 from sentReplies of size 0
1335383049129: inside handleDSMRequest. At requests's remote leader of region 2
1335383049130: INSIDE SERVER_GET_PHOTO!!!
1335383049141: dst_region == src_region = 2
1335383049141:  1 self to self atomRequest
1335383049143: Received PROC_REQUEST 11:7 (2,0)->(2,0), replying PROC_REPLY 11:7 (2,0)->(2,0)
1335383049143: Dispatching Atom PROC_REPLY 11:7 (2,0)->(2,0)
1335383049152: mux: I got a CSM packet at a leader 

1335383049144: Sending UDP payload: 446
1335383049154: Received UDP payload: 446
1335383049157: Sending UDP payload: 4661
1335383049162: Received PROC_REPLY 11:7 (2,0)->(2,0), handing to UserApp
1335383049162: inside handleDSMReply. Now back in originator leader of region 2
1335383049162: DSM layer: Going to and from remote region took latency = 81
1335383049163: DSM layer: orig leader sent packet at 1335383049081 ~ received reply from remote leader at 1335383049162
1335383049177: Originator Region=2's Leader (for Client=5115) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383049177: change leader replyCounter to: 8
1335383049177: reply packet contains the newest photo/success info from the remote region
1335383049177: inside sendReplies of replyCount = 511300008
1335383049177: =======================
1335383049178: inside sendReplyRepeatingRunnable for replyCount = 511300008
1335383049178: Leader about to send REPLY packet, number: 511300008 type: 15 Leader in region: (2,0) to Client nodID: 5115
1335383049178: I (the leader) was not the originator client (which id = 5115) so I use UDP to send packet back to my nonleader
1335383049178: inside sendPacket(Packet p)
1335383049178: === Finished one round of sending REPLY Packet =======
1335383049185: Sending UDP payload: 4314
1335383049314: .......... GPS onLocationChanged ...... 
1335383049315: Loc = Location[mProvider=gps,mTime=1335469450000,mLatitude=42.358184157728736,mLongitude=-71.09292667517914,mHasAltitude=true,mAltitude=-21.0,mHasSpeed=true,mSpeed=0.4804085,mHasBearing=true,mBearing=316.08286,mHasAccuracy=true,mAccuracy=10.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383049315: GPS x/long:-71.09292667517914, GPS y/lat: 42.358184157728736. Region width in x: 20.0
1335383049315: location PINPOINTS to region = 2.0, previous 2
1335383049315: Hysteresis is 0.0
1335383049316: stay at region 2
1335383049428: Received UDP payload: 446
1335383049431: mux: Inside mux Packet.CLIENT_REQUEST
1335383049432: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383049432: inside handleClientRequest. Originator leader of region 2
1335383049432: got new request, requestCounter = 5115021
1335383049432: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300008
1335383049432: Yay the last leg succeeded. Removing reply runnables ...
1335383049432: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300008
1335383049433: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300008
1335383049433: do not send ack for received final_leg_ack
1335383049713: Received UDP payload: 446
1335383050314: .......... GPS onLocationChanged ...... 
1335383050315: Loc = Location[mProvider=gps,mTime=1335469451000,mLatitude=42.35819300035776,mLongitude=-71.09292046469037,mHasAltitude=true,mAltitude=-22.0,mHasSpeed=true,mSpeed=0.49268788,mHasBearing=true,mBearing=318.97595,mHasAccuracy=true,mAccuracy=10.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383050316: GPS x/long:-71.09292046469037, GPS y/lat: 42.35819300035776. Region width in x: 20.0
1335383050316: location PINPOINTS to region = 2.0, previous 2
1335383050316: Hysteresis is 0.0
1335383050316: stay at region 2
1335383051486: Received UDP payload: 2535
1335383051510: mux: Inside mux Packet.CLIENT_REQUEST
1335383051511: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383051511: inside handleClientRequest. Originator leader of region 2
1335383051511: got new request, requestCounter = 5102040
1335383051511: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335383051511: Sending PROC_REQUEST 10:8 (2,0)->(2,0)
1335383051515: Dispatching Atom PROC_REQUEST 10:8 (2,0)->(2,0)
1335383051516: mux: I got a CSM packet at a leader 

1335383051555: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335383051557: I'm a leader and I successfully saved my client's new photo
1335383051557: now showing in UI the new photo I just saved ... 
1335383051557: the photo length: 1888
1335383051651: end of server show photo aside %%%%%%%%%
1335383051515: Note down new request by adding requestCounter=5102040 to HashMap processedRequests
1335383051515: Make FirstLeg Ack regardless of new or already-processed requests
1335383051515: The leader sending a First Leg ack to originator client (which id = 5102)
1335383051515: inside sendPacket(Packet p)
1335383051518: Sending UDP payload: 2899
1335383051520: removed replies before id 8 from sentReplies of size 0
1335383051520: inside handleDSMRequest. At requests's remote leader of region 2
1335383051521: Inside UPLOAD_PHOTO!!
1335383051522: my_gpinfo.isSuccess is now (should be true): true
1335383051522: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335383051548: Received PROC_REQUEST 10:8 (2,0)->(2,0), replying PROC_REPLY 10:8 (2,0)->(2,0)
1335383051548: Dispatching Atom PROC_REPLY 10:8 (2,0)->(2,0)
1335383051553: mux: I got a CSM packet at a leader 

1335383051549: Sending UDP payload: 446
1335383051554: Sending UDP payload: 989
1335383051576: Received PROC_REPLY 10:8 (2,0)->(2,0), handing to UserApp
1335383051576: inside handleDSMReply. Now back in originator leader of region 2
1335383051576: DSM layer: Going to and from remote region took latency = 65
1335383051576: DSM layer: orig leader sent packet at 1335383051511 ~ received reply from remote leader at 1335383051576
1335383051577: Originator Region=2's Leader (for Client=5102) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383051577: change leader replyCounter to: 9
1335383051578: reply packet contains the success info for UPLOAD_PHOTO
1335383051578: inside sendReplies of replyCount = 511300009
1335383051578: =======================
1335383051578: inside sendReplyRepeatingRunnable for replyCount = 511300009
1335383051578: Leader about to send REPLY packet, number: 511300009 type: 16 Leader in region: (2,0) to Client nodID: 5102
1335383051578: I (the leader) was not the originator client (which id = 5102) so I use UDP to send packet back to my nonleader
1335383051579: inside sendPacket(Packet p)
1335383051579: === Finished one round of sending REPLY Packet =======
1335383051586: Sending UDP payload: 642
1335383051655: Received UDP payload: 446
1335383051657: mux: Inside mux Packet.CLIENT_REQUEST
1335383051658: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383051658: inside handleClientRequest. Originator leader of region 2
1335383051658: got new request, requestCounter = 5102041
1335383051658: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300009
1335383051658: Yay the last leg succeeded. Removing reply runnables ...
1335383051658: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300009
1335383051659: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300009
1335383051659: do not send ack for received final_leg_ack
1335383051876: Received UDP payload: 3821
1335383051909: inside sendPacket(Packet p)
1335383051944: Sending UDP payload: 446
1335383051971: mux: Inside mux Packet.CLIENT_REQUEST
1335383051971: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383051972: inside handleClientRequest. Originator leader of region 2
1335383051972: got new request, requestCounter = 5103009
1335383051972: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335383051972: Sending PROC_REQUEST 10:9 (2,0)->(2,0)
1335383051973: Dispatching Atom PROC_REQUEST 10:9 (2,0)->(2,0)
1335383051977: mux: I got a CSM packet at a leader 

1335383052025: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335383052027: I'm a leader and I successfully saved my client's new photo
1335383052041: now showing in UI the new photo I just saved ... 
1335383052042: the photo length: 3174
1335383052146: end of server show photo aside %%%%%%%%%
1335383051973: Note down new request by adding requestCounter=5103009 to HashMap processedRequests
1335383051973: Make FirstLeg Ack regardless of new or already-processed requests
1335383051973: The leader sending a First Leg ack to originator client (which id = 5103)
1335383051976: inside sendPacket(Packet p)
1335383051979: Sending UDP payload: 4185
1335383051985: removed replies before id 9 from sentReplies of size 0
1335383052010: inside handleDSMRequest. At requests's remote leader of region 2
1335383052018: Inside UPLOAD_PHOTO!!
1335383052019: my_gpinfo.isSuccess is now (should be true): true
1335383052019: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335383052028: Received PROC_REQUEST 10:9 (2,0)->(2,0), replying PROC_REPLY 10:9 (2,0)->(2,0)
1335383052029: Dispatching Atom PROC_REPLY 10:9 (2,0)->(2,0)
1335383052044: mux: I got a CSM packet at a leader 

1335383052040: Sending UDP payload: 446
1335383052046: Sending UDP payload: 989
1335383052051: Received PROC_REPLY 10:9 (2,0)->(2,0), handing to UserApp
1335383052052: inside handleDSMReply. Now back in originator leader of region 2
1335383052052: DSM layer: Going to and from remote region took latency = 79
1335383052052: DSM layer: orig leader sent packet at 1335383051972 ~ received reply from remote leader at 1335383052051
1335383052053: Originator Region=2's Leader (for Client=5103) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383052053: change leader replyCounter to: 10
1335383052053: reply packet contains the success info for UPLOAD_PHOTO
1335383052054: inside sendReplies of replyCount = 511300010
1335383052054: =======================
1335383052054: inside sendReplyRepeatingRunnable for replyCount = 511300010
1335383052054: Leader about to send REPLY packet, number: 511300010 type: 16 Leader in region: (2,0) to Client nodID: 5103
1335383052054: I (the leader) was not the originator client (which id = 5103) so I use UDP to send packet back to my nonleader
1335383052054: inside sendPacket(Packet p)
1335383052054: === Finished one round of sending REPLY Packet =======
1335383052056: Sending UDP payload: 642
1335383052140: Received UDP payload: 446
1335383052143: mux: Inside mux Packet.CLIENT_REQUEST
1335383052144: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383052144: inside handleClientRequest. Originator leader of region 2
1335383052144: got new request, requestCounter = 5103010
1335383052144: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300010
1335383052144: Yay the last leg succeeded. Removing reply runnables ...
1335383052144: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300010
1335383052145: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300010
1335383052145: do not send ack for received final_leg_ack
1335383053291: Received UDP payload: 446
1335383053341: .......... GPS onLocationChanged ...... 
1335383053342: Loc = Location[mProvider=gps,mTime=1335469454000,mLatitude=42.35820532815368,mLongitude=-71.09291562851962,mHasAltitude=true,mAltitude=-21.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=true,mBearing=328.3546,mHasAccuracy=true,mAccuracy=10.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383053342: GPS x/long:-71.09291562851962, GPS y/lat: 42.35820532815368. Region width in x: 20.0
1335383053342: location PINPOINTS to region = 2.0, previous 2
1335383053343: Hysteresis is 0.0
1335383053343: stay at region 2
1335383053848: Received UDP payload: 989
1335383053915: mux: GOT CSM_Msg
1335383053916: nonce 168 heard from src region (1,0)
1335383054576: Received UDP payload: 989
1335383054580: mux: GOT CSM_Msg
1335383054580: nonce 169 heard from src region (1,0)
1335383054679: Received UDP payload: 989
1335383054690: mux: GOT CSM_Msg
1335383054691: nonce 170 heard from src region (1,0)
1335383054877: Received UDP payload: 989
1335383054926: mux: GOT CSM_Msg
1335383054926: nonce 172 heard from src region (1,0)
1335383055129: Received UDP payload: 989
1335383055209: mux: GOT CSM_Msg
1335383055209: nonce 174 heard from src region (1,0)
1335383055217: Received UDP payload: 989
1335383055224: mux: GOT CSM_Msg
1335383055224: nonce 175 heard from src region (1,0)
1335383055437: Received UDP payload: 989
1335383055452: mux: GOT CSM_Msg
1335383055452: nonce 176 heard from src region (1,0)
1335383055477: Received UDP payload: 989
1335383055505: mux: GOT CSM_Msg
1335383055505: nonce 177 heard from src region (1,0)
1335383055508: Received UDP payload: 989
1335383055516: mux: GOT CSM_Msg
1335383055516: nonce 178 heard from src region (1,0)
1335383055606: Received UDP payload: 989
1335383055611: mux: GOT CSM_Msg
1335383055612: nonce 179 heard from src region (1,0)
1335383055712: Received UDP payload: 989
1335383055721: mux: GOT CSM_Msg
1335383055722: nonce 180 heard from src region (1,0)
1335383055810: Received UDP payload: 989
1335383055820: mux: GOT CSM_Msg
1335383055821: nonce 181 heard from src region (1,0)
1335383055920: Received UDP payload: 989
1335383055943: mux: GOT CSM_Msg
1335383055944: nonce 182 heard from src region (1,0)
1335383056202: Received UDP payload: 5206
1335383056227: mux: Inside mux Packet.CLIENT_REQUEST
1335383056227: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383056228: inside handleClientRequest. Originator leader of region 2
1335383056228: got new request, requestCounter = 5104122
1335383056228: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335383056229: Sending PROC_REQUEST 10:10 (2,0)->(2,0)
1335383056229: Dispatching Atom PROC_REQUEST 10:10 (2,0)->(2,0)
1335383056230: mux: I got a CSM packet at a leader 

1335383056283: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335383056318: I'm a leader and I successfully saved my client's new photo
1335383056319: now showing in UI the new photo I just saved ... 
1335383056319: the photo length: 4559
1335383056426: end of server show photo aside %%%%%%%%%
1335383056229: Note down new request by adding requestCounter=5104122 to HashMap processedRequests
1335383056229: Make FirstLeg Ack regardless of new or already-processed requests
1335383056229: The leader sending a First Leg ack to originator client (which id = 5104)
1335383056230: inside sendPacket(Packet p)
1335383056241: Sending UDP payload: 5570
1335383056248: removed replies before id 10 from sentReplies of size 0
1335383056249: inside handleDSMRequest. At requests's remote leader of region 2
1335383056256: Inside UPLOAD_PHOTO!!
1335383056257: my_gpinfo.isSuccess is now (should be true): true
1335383056257: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335383056274: Received PROC_REQUEST 10:10 (2,0)->(2,0), replying PROC_REPLY 10:10 (2,0)->(2,0)
1335383056275: Dispatching Atom PROC_REPLY 10:10 (2,0)->(2,0)
1335383056280: mux: I got a CSM packet at a leader 

1335383056277: Sending UDP payload: 446
1335383056310: Sending UDP payload: 989
1335383056320: Received PROC_REPLY 10:10 (2,0)->(2,0), handing to UserApp
1335383056320: inside handleDSMReply. Now back in originator leader of region 2
1335383056320: DSM layer: Going to and from remote region took latency = 92
1335383056320: DSM layer: orig leader sent packet at 1335383056228 ~ received reply from remote leader at 1335383056320
1335383056321: Originator Region=2's Leader (for Client=5104) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383056321: change leader replyCounter to: 11
1335383056322: reply packet contains the success info for UPLOAD_PHOTO
1335383056322: inside sendReplies of replyCount = 511300011
1335383056322: =======================
1335383056322: inside sendReplyRepeatingRunnable for replyCount = 511300011
1335383056322: Leader about to send REPLY packet, number: 511300011 type: 16 Leader in region: (2,0) to Client nodID: 5104
1335383056322: I (the leader) was not the originator client (which id = 5104) so I use UDP to send packet back to my nonleader
1335383056323: inside sendPacket(Packet p)
1335383056323: === Finished one round of sending REPLY Packet =======
1335383056329: Sending UDP payload: 642
1335383056482: .......... GPS onLocationChanged ...... 
1335383056477: Received UDP payload: 446
1335383056479: mux: Inside mux Packet.CLIENT_REQUEST
1335383056480: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383056480: inside handleClientRequest. Originator leader of region 2
1335383056480: got new request, requestCounter = 5104123
1335383056480: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300011
1335383056480: Yay the last leg succeeded. Removing reply runnables ...
1335383056480: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300011
1335383056481: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300011
1335383056481: do not send ack for received final_leg_ack
1335383056483: Loc = Location[mProvider=gps,mTime=1335469457000,mLatitude=42.35821372179158,mLongitude=-71.09292119527582,mHasAltitude=true,mAltitude=-17.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=true,mBearing=317.1953,mHasAccuracy=true,mAccuracy=10.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383056483: GPS x/long:-71.09292119527582, GPS y/lat: 42.35821372179158. Region width in x: 20.0
1335383056483: location PINPOINTS to region = 2.0, previous 2
1335383056483: Hysteresis is 0.0
1335383056484: stay at region 2
1335383056915: inside sendPacket(Packet p)
1335383056925: Sending UDP payload: 446
1335383058772: Received UDP payload: 5825
1335383058782: mux: Inside mux Packet.CLIENT_REQUEST
1335383058782: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383058782: inside handleClientRequest. Originator leader of region 2
1335383058782: got new request, requestCounter = 5117076
1335383058782: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335383058783: Sending PROC_REQUEST 10:11 (2,0)->(2,0)
1335383058783: Dispatching Atom PROC_REQUEST 10:11 (2,0)->(2,0)
1335383058784: mux: I got a CSM packet at a leader 

1335383058852: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335383058857: I'm a leader and I successfully saved my client's new photo
1335383058857: now showing in UI the new photo I just saved ... 
1335383058858: the photo length: 5178
1335383058968: end of server show photo aside %%%%%%%%%
1335383058783: Note down new request by adding requestCounter=5117076 to HashMap processedRequests
1335383058783: Make FirstLeg Ack regardless of new or already-processed requests
1335383058784: The leader sending a First Leg ack to originator client (which id = 5117)
1335383058784: inside sendPacket(Packet p)
1335383058801: Sending UDP payload: 6189
1335383058809: removed replies before id 11 from sentReplies of size 0
1335383058809: inside handleDSMRequest. At requests's remote leader of region 2
1335383058810: Inside UPLOAD_PHOTO!!
1335383058824: my_gpinfo.isSuccess is now (should be true): true
1335383058824: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335383058845: Received PROC_REQUEST 10:11 (2,0)->(2,0), replying PROC_REPLY 10:11 (2,0)->(2,0)
1335383058845: Dispatching Atom PROC_REPLY 10:11 (2,0)->(2,0)
1335383058856: mux: I got a CSM packet at a leader 

1335383058846: Sending UDP payload: 446
1335383058872: Sending UDP payload: 989
1335383058875: Received PROC_REPLY 10:11 (2,0)->(2,0), handing to UserApp
1335383058876: inside handleDSMReply. Now back in originator leader of region 2
1335383058876: DSM layer: Going to and from remote region took latency = 94
1335383058876: DSM layer: orig leader sent packet at 1335383058782 ~ received reply from remote leader at 1335383058876
1335383058942: Originator Region=2's Leader (for Client=5117) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383058942: change leader replyCounter to: 12
1335383058942: reply packet contains the success info for UPLOAD_PHOTO
1335383058942: inside sendReplies of replyCount = 511300012
1335383058943: =======================
1335383058943: inside sendReplyRepeatingRunnable for replyCount = 511300012
1335383058944: Leader about to send REPLY packet, number: 511300012 type: 16 Leader in region: (2,0) to Client nodID: 5117
1335383058944: I (the leader) was not the originator client (which id = 5117) so I use UDP to send packet back to my nonleader
1335383058944: inside sendPacket(Packet p)
1335383058944: === Finished one round of sending REPLY Packet =======
1335383058952: Sending UDP payload: 642
1335383059155: Received UDP payload: 5825
1335383059179: mux: Inside mux Packet.CLIENT_REQUEST
1335383059179: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383059183: inside handleClientRequest. Originator leader of region 2
1335383059183: discarding repeated requestCounter=5117076, but still send an ack back
1335383059183: Note down new request by adding requestCounter=5117076 to HashMap processedRequests
1335383059183: Make FirstLeg Ack regardless of new or already-processed requests
1335383059184: The leader sending a First Leg ack to originator client (which id = 5117)
1335383059184: inside sendPacket(Packet p)
1335383059186: Sending UDP payload: 446
1335383059192: Received UDP payload: 446
1335383059209: mux: Inside mux Packet.CLIENT_REQUEST
1335383059210: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383059210: inside handleClientRequest. Originator leader of region 2
1335383059210: got new request, requestCounter = 5117077
1335383059210: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300012
1335383059210: Yay the last leg succeeded. Removing reply runnables ...
1335383059210: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300012
1335383059210: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300012
1335383059211: do not send ack for received final_leg_ack
1335383059658: Received UDP payload: 6115
1335383059692: mux: Inside mux Packet.CLIENT_REQUEST
1335383059693: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383059693: inside handleClientRequest. Originator leader of region 2
1335383059693: got new request, requestCounter = 5105075
1335383059693: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335383059693: Sending PROC_REQUEST 10:12 (2,0)->(2,0)
1335383059694: Dispatching Atom PROC_REQUEST 10:12 (2,0)->(2,0)
1335383059695: mux: I got a CSM packet at a leader 

1335383059749: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335383059766: I'm a leader and I successfully saved my client's new photo
1335383059766: now showing in UI the new photo I just saved ... 
1335383059766: the photo length: 5468
1335383059857: end of server show photo aside %%%%%%%%%
1335383059694: Note down new request by adding requestCounter=5105075 to HashMap processedRequests
1335383059694: Make FirstLeg Ack regardless of new or already-processed requests
1335383059694: The leader sending a First Leg ack to originator client (which id = 5105)
1335383059694: inside sendPacket(Packet p)
1335383059708: Sending UDP payload: 6479
1335383059715: removed replies before id 12 from sentReplies of size 0
1335383059715: inside handleDSMRequest. At requests's remote leader of region 2
1335383059716: Inside UPLOAD_PHOTO!!
1335383059720: my_gpinfo.isSuccess is now (should be true): true
1335383059720: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335383059736: Received PROC_REQUEST 10:12 (2,0)->(2,0), replying PROC_REPLY 10:12 (2,0)->(2,0)
1335383059737: Dispatching Atom PROC_REPLY 10:12 (2,0)->(2,0)
1335383059747: mux: I got a CSM packet at a leader 

1335383059743: Sending UDP payload: 446
1335383059791: Received UDP payload: 625
1335383059820: Sending UDP payload: 989
1335383059849: mux: Inside mux Packet.CLIENT_REQUEST
1335383059849: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383059842: Received PROC_REPLY 10:12 (2,0)->(2,0), handing to UserApp
1335383059842: inside handleDSMReply. Now back in originator leader of region 2
1335383059843: DSM layer: Going to and from remote region took latency = 149
1335383059843: DSM layer: orig leader sent packet at 1335383059693 ~ received reply from remote leader at 1335383059842
1335383059844: Originator Region=2's Leader (for Client=5105) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383059844: change leader replyCounter to: 13
1335383059844: reply packet contains the success info for UPLOAD_PHOTO
1335383059848: inside sendReplies of replyCount = 511300013
1335383059848: =======================
1335383059848: inside sendReplyRepeatingRunnable for replyCount = 511300013
1335383059848: Leader about to send REPLY packet, number: 511300013 type: 16 Leader in region: (2,0) to Client nodID: 5105
1335383059849: I (the leader) was not the originator client (which id = 5105) so I use UDP to send packet back to my nonleader
1335383059849: inside sendPacket(Packet p)
1335383059849: === Finished one round of sending REPLY Packet =======
1335383059850: inside handleClientRequest. Originator leader of region 2
1335383059850: got new request, requestCounter = 5103011
1335383059850: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383059851: Sending to region: 2
1335383059851: Sending PROC_REQUEST 11:13 (2,0)->(2,0)
1335383059852: Dispatching Atom PROC_REQUEST 11:13 (2,0)->(2,0)
1335383059868: mux: I got a CSM packet at a leader 

1335383059852: Note down new request by adding requestCounter=5103011 to HashMap processedRequests
1335383059852: Make FirstLeg Ack regardless of new or already-processed requests
1335383059852: The leader sending a First Leg ack to originator client (which id = 5103)
1335383059852: inside sendPacket(Packet p)
1335383059854: Sending UDP payload: 642
1335383059870: Sending UDP payload: 989
1335383059871: removed replies before id 13 from sentReplies of size 0
1335383059873: inside handleDSMRequest. At requests's remote leader of region 2
1335383059874: INSIDE SERVER_GET_PHOTO!!!
1335383059874: dst_region == src_region = 2
1335383059875:  1 self to self atomRequest
1335383059903: Received PROC_REQUEST 11:13 (2,0)->(2,0), replying PROC_REPLY 11:13 (2,0)->(2,0)
1335383059904: Dispatching Atom PROC_REPLY 11:13 (2,0)->(2,0)
1335383059913: mux: I got a CSM packet at a leader 

1335383059905: Sending UDP payload: 446
1335383059915: Sending UDP payload: 6479
1335383059935: Received UDP payload: 6115
1335383059942: mux: Inside mux Packet.CLIENT_REQUEST
1335383059942: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383059938: Received PROC_REPLY 11:13 (2,0)->(2,0), handing to UserApp
1335383059939: inside handleDSMReply. Now back in originator leader of region 2
1335383059939: DSM layer: Going to and from remote region took latency = 88
1335383059939: DSM layer: orig leader sent packet at 1335383059851 ~ received reply from remote leader at 1335383059939
1335383059940: Originator Region=2's Leader (for Client=5103) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383059940: change leader replyCounter to: 14
1335383059940: reply packet contains the newest photo/success info from the remote region
1335383059940: inside sendReplies of replyCount = 511300014
1335383059941: =======================
1335383059941: inside sendReplyRepeatingRunnable for replyCount = 511300014
1335383059941: Leader about to send REPLY packet, number: 511300014 type: 15 Leader in region: (2,0) to Client nodID: 5103
1335383059942: I (the leader) was not the originator client (which id = 5103) so I use UDP to send packet back to my nonleader
1335383059942: inside sendPacket(Packet p)
1335383059942: === Finished one round of sending REPLY Packet =======
1335383059943: inside handleClientRequest. Originator leader of region 2
1335383059943: discarding repeated requestCounter=5105075, but still send an ack back
1335383059943: Note down new request by adding requestCounter=5105075 to HashMap processedRequests
1335383059943: Make FirstLeg Ack regardless of new or already-processed requests
1335383059943: The leader sending a First Leg ack to originator client (which id = 5105)
1335383059943: inside sendPacket(Packet p)
1335383059973: Sending UDP payload: 6132
1335383059978: Sending UDP payload: 446
1335383060053: Received UDP payload: 625
1335383060056: mux: Inside mux Packet.CLIENT_REQUEST
1335383060056: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383060056: inside handleClientRequest. Originator leader of region 2
1335383060056: discarding repeated requestCounter=5103011, but still send an ack back
1335383060056: Note down new request by adding requestCounter=5103011 to HashMap processedRequests
1335383060057: Make FirstLeg Ack regardless of new or already-processed requests
1335383060057: The leader sending a First Leg ack to originator client (which id = 5103)
1335383060057: inside sendPacket(Packet p)
1335383060058: Sending UDP payload: 446
1335383060149: =======================
1335383060149: inside sendReplyRepeatingRunnable for replyCount = 511300013
1335383060150: Leader about to send REPLY packet, number: 511300013 type: 16 Leader in region: (2,0) to Client nodID: 5105
1335383060150: I (the leader) was not the originator client (which id = 5105) so I use UDP to send packet back to my nonleader
1335383060150: inside sendPacket(Packet p)
1335383060150: === Finished one round of sending REPLY Packet =======
1335383060151: Sending UDP payload: 642
1335383060241: =======================
1335383060242: inside sendReplyRepeatingRunnable for replyCount = 511300014
1335383060243: Leader about to send REPLY packet, number: 511300014 type: 15 Leader in region: (2,0) to Client nodID: 5103
1335383060243: I (the leader) was not the originator client (which id = 5103) so I use UDP to send packet back to my nonleader
1335383060243: inside sendPacket(Packet p)
1335383060243: === Finished one round of sending REPLY Packet =======
1335383060244: Sending UDP payload: 6132
1335383060246: Received UDP payload: 6115
1335383060248: mux: Inside mux Packet.CLIENT_REQUEST
1335383060248: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383060249: inside handleClientRequest. Originator leader of region 2
1335383060249: discarding repeated requestCounter=5105075, but still send an ack back
1335383060249: Note down new request by adding requestCounter=5105075 to HashMap processedRequests
1335383060249: Make FirstLeg Ack regardless of new or already-processed requests
1335383060249: The leader sending a First Leg ack to originator client (which id = 5105)
1335383060249: inside sendPacket(Packet p)
1335383060252: Sending UDP payload: 446
1335383060443: Received UDP payload: 625
1335383060449: mux: Inside mux Packet.CLIENT_REQUEST
1335383060450: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383060450: inside handleClientRequest. Originator leader of region 2
1335383060450: discarding repeated requestCounter=5103011, but still send an ack back
1335383060451: Note down new request by adding requestCounter=5103011 to HashMap processedRequests
1335383060451: Make FirstLeg Ack regardless of new or already-processed requests
1335383060451: The leader sending a First Leg ack to originator client (which id = 5103)
1335383060451: inside sendPacket(Packet p)
1335383060456: =======================
1335383060457: inside sendReplyRepeatingRunnable for replyCount = 511300013
1335383060458: Leader about to send REPLY packet, number: 511300013 type: 16 Leader in region: (2,0) to Client nodID: 5105
1335383060459: I (the leader) was not the originator client (which id = 5105) so I use UDP to send packet back to my nonleader
1335383060459: inside sendPacket(Packet p)
1335383060459: === Finished one round of sending REPLY Packet =======
1335383060464: Sending UDP payload: 446
1335383060488: Sending UDP payload: 642
1335383060544: =======================
1335383060544: inside sendReplyRepeatingRunnable for replyCount = 511300014
1335383060545: Leader about to send REPLY packet, number: 511300014 type: 15 Leader in region: (2,0) to Client nodID: 5103
1335383060545: I (the leader) was not the originator client (which id = 5103) so I use UDP to send packet back to my nonleader
1335383060545: inside sendPacket(Packet p)
1335383060545: === Finished one round of sending REPLY Packet =======
1335383060546: Sending UDP payload: 6132
1335383060597: Received UDP payload: 446
1335383060607: mux: Inside mux Packet.CLIENT_REQUEST
1335383060607: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383060607: inside handleClientRequest. Originator leader of region 2
1335383060607: got new request, requestCounter = 5105076
1335383060607: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300013
1335383060608: Yay the last leg succeeded. Removing reply runnables ...
1335383060608: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300013
1335383060608: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300013
1335383060608: do not send ack for received final_leg_ack
1335383060846: =======================
1335383060847: inside sendReplyRepeatingRunnable for replyCount = 511300014
1335383060854: Leader about to send REPLY packet, number: 511300014 type: 15 Leader in region: (2,0) to Client nodID: 5103
1335383060857: I (the leader) was not the originator client (which id = 5103) so I use UDP to send packet back to my nonleader
1335383060860: inside sendPacket(Packet p)
1335383060862: Sending UDP payload: 6132
1335383060863: === Finished one round of sending REPLY Packet =======
1335383060893: Received UDP payload: 446
1335383060908: mux: Inside mux Packet.CLIENT_REQUEST
1335383060908: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383060908: inside handleClientRequest. Originator leader of region 2
1335383060909: got new request, requestCounter = 5105077
1335383060909: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300013
1335383060909: Yay the last leg succeeded. Removing reply runnables ...
1335383060909: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300013
1335383060909: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300013
1335383060909: do not send ack for received final_leg_ack
1335383060942: inside sendReplyTimeoutR
1335383060943: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300014
1335383060970: Received UDP payload: 446
1335383060972: mux: Inside mux Packet.CLIENT_REQUEST
1335383060972: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383060972: inside handleClientRequest. Originator leader of region 2
1335383060972: got new request, requestCounter = 5105078
1335383060972: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300013
1335383060974: Yay the last leg succeeded. Removing reply runnables ...
1335383060974: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300013
1335383060974: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300013
1335383060974: do not send ack for received final_leg_ack
1335383061142: Received UDP payload: 446
1335383061174: mux: Inside mux Packet.CLIENT_REQUEST
1335383061175: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383061175: inside handleClientRequest. Originator leader of region 2
1335383061175: got new request, requestCounter = 5103012
1335383061175: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300014
1335383061175: Yay the last leg succeeded. Removing reply runnables ...
1335383061175: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300014
1335383061175: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300014
1335383061175: do not send ack for received final_leg_ack
1335383061183: Received UDP payload: 446
1335383061204: mux: Inside mux Packet.CLIENT_REQUEST
1335383061205: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383061205: inside handleClientRequest. Originator leader of region 2
1335383061205: got new request, requestCounter = 5103013
1335383061205: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300014
1335383061205: Yay the last leg succeeded. Removing reply runnables ...
1335383061205: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300014
1335383061206: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300014
1335383061206: do not send ack for received final_leg_ack
1335383061208: Received UDP payload: 446
1335383061213: mux: Inside mux Packet.CLIENT_REQUEST
1335383061213: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383061213: inside handleClientRequest. Originator leader of region 2
1335383061214: got new request, requestCounter = 5103014
1335383061214: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300014
1335383061214: Yay the last leg succeeded. Removing reply runnables ...
1335383061214: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300014
1335383061214: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300014
1335383061214: do not send ack for received final_leg_ack
1335383061275: canPressButton = TRUE
1335383061275: areButtonsEnabled --> false
1335383061276: disabling buttons ...
1335383061276: took picture disableButtonsR
1335383061276: areButtonsEnabled --> false
1335383061411: reg=2 id=5113 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=1 takeGoodSave=1 takeBad=0 takeTimedout=0 takePercent=50% getNum=0 getGood=0 getBad=0 getTimedout=0 getPercent=-1%
1335383061412: Clicked take picture button ..
1335383061301: Received UDP payload: 446
1335383061303: mux: Inside mux Packet.CLIENT_REQUEST
1335383061304: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383061304: inside handleClientRequest. Originator leader of region 2
1335383061304: got new request, requestCounter = 5103015
1335383061304: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300014
1335383061304: Yay the last leg succeeded. Removing reply runnables ...
1335383061304: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300014
1335383061304: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300014
1335383061304: do not send ack for received final_leg_ack
1335383061842: Received UDP payload: 989
1335383061847: mux: GOT CSM_Msg
1335383061847: nonce 185 heard from src region (1,0)
1335383061908: Received UDP payload: 625
1335383061910: mux: Inside mux Packet.CLIENT_REQUEST
1335383061910: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383061910: inside handleClientRequest. Originator leader of region 2
1335383061911: got new request, requestCounter = 5102042
1335383061911: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383061911: Sending to region: 0
1335383061912: Sending PROC_REQUEST 11:0 (2,0)->(0,0)
1335383061912: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(0,0)
1335383061913: mux: I got a CSM packet at a leader 

1335383061912: Note down new request by adding requestCounter=5102042 to HashMap processedRequests
1335383061912: Make FirstLeg Ack regardless of new or already-processed requests
1335383061913: The leader sending a First Leg ack to originator client (which id = 5102)
1335383061913: inside sendPacket(Packet p)
1335383061916: inside sendPacket(Packet p)
1335383061919: Sending UDP payload: 989
1335383061925: nonce 28 heard from src region (2,0)
1335383061927: Sending UDP payload: 446
1335383061931: Sending UDP payload: 446
1335383061964: Received UDP payload: 989
1335383061968: mux: GOT CSM_Msg
1335383061968: nonce 28 heard from src region (2,0)
1335383062246: inside HandlePictureStorage onPictureTaken()
1335383062247: reg=2 id=5113 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=2 takeGoodSave=1 takeBad=0 takeTimedout=0 takePercent=50% getNum=0 getGood=0 getBad=0 getTimedout=0 getPercent=-1%
1335383062639: Picture successfully taken, ORIG BYTE LENGTH = 1731842
1335383063043: Our new height x width: 240 x 320
1335383063044: Show photo from handle my camera take
1335383063044: ** Client making NEWly TAKEN photo PACKET to send to leader **
1335383063045: change local requestCounter to 3
1335383063068: BYTE SIZE AFTER COMPRESSION: 5265
1335383063069: Client about to send CLIENT_UPLOAD_PHOTO packet, REQUEST: 5113003 Client in region: 2 Client nodID: 5113
1335383062570: Received UDP payload: 625
1335383062596: mux: Inside mux Packet.CLIENT_REQUEST
1335383062598: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383062600: inside handleClientRequest. Originator leader of region 2
1335383062601: got new request, requestCounter = 5104124
1335383062603: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383062611: Sending to region: 0
1335383062615: Sending PROC_REQUEST 11:1 (2,0)->(0,0)
1335383062619: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(0,0)
1335383062628: mux: I got a CSM packet at a leader 

1335383062621: Note down new request by adding requestCounter=5104124 to HashMap processedRequests
1335383062623: Make FirstLeg Ack regardless of new or already-processed requests
1335383062624: The leader sending a First Leg ack to originator client (which id = 5104)
1335383062625: inside sendPacket(Packet p)
1335383062687: Retrying PROC_REQUEST 11:0 (2,0)->(0,0)
1335383062709: Sending UDP payload: 989
1335383062709: nonce 29 heard from src region (2,0)
1335383062710: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(0,0)
1335383062716: mux: I got a CSM packet at a leader 

1335383062715: Sending UDP payload: 446
1335383062718: Sending UDP payload: 989
1335383062718: nonce 30 heard from src region (2,0)
1335383062805: Received UDP payload: 5925
1335383062808: mux: Inside mux Packet.CLIENT_REQUEST
1335383062808: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383062808: inside handleClientRequest. Originator leader of region 2
1335383062808: got new request, requestCounter = 5120061
1335383062808: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335383062809: Sending PROC_REQUEST 10:14 (2,0)->(2,0)
1335383062809: Dispatching Atom PROC_REQUEST 10:14 (2,0)->(2,0)
1335383062810: mux: I got a CSM packet at a leader 

1335383063129: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335383063131: I'm a leader and I successfully saved my client's new photo
1335383063131: now showing in UI the new photo I just saved ... 
1335383063131: the photo length: 5278
1335383063210: end of server show photo aside %%%%%%%%%
1335383062809: Note down new request by adding requestCounter=5120061 to HashMap processedRequests
1335383062810: Make FirstLeg Ack regardless of new or already-processed requests
1335383062810: The leader sending a First Leg ack to originator client (which id = 5120)
1335383062810: inside sendPacket(Packet p)
1335383062811: Retrying PROC_REQUEST 11:0 (2,0)->(0,0)
1335383062811: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(0,0)
1335383062842: mux: I got a CSM packet at a leader 

1335383062813: Sending UDP payload: 6289
1335383062815: removed replies before id 14 from sentReplies of size 0
1335383062815: inside handleDSMRequest. At requests's remote leader of region 2
1335383062816: Inside UPLOAD_PHOTO!!
1335383062832: my_gpinfo.isSuccess is now (should be true): true
1335383062833: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335383062835: Received PROC_REQUEST 10:14 (2,0)->(2,0), replying PROC_REPLY 10:14 (2,0)->(2,0)
1335383062840: Dispatching Atom PROC_REPLY 10:14 (2,0)->(2,0)
1335383062849: mux: I got a CSM packet at a leader 

1335383062841: Sending UDP payload: 446
1335383062848: Sending UDP payload: 989
1335383062849: nonce 32 heard from src region (2,0)
1335383062851: Sending UDP payload: 989
1335383062852: Received PROC_REPLY 10:14 (2,0)->(2,0), handing to UserApp
1335383062852: inside handleDSMReply. Now back in originator leader of region 2
1335383062852: DSM layer: Going to and from remote region took latency = 43
1335383062852: DSM layer: orig leader sent packet at 1335383062809 ~ received reply from remote leader at 1335383062852
1335383062867: Originator Region=2's Leader (for Client=5120) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383062870: change leader replyCounter to: 15
1335383062870: reply packet contains the success info for UPLOAD_PHOTO
1335383062870: inside sendReplies of replyCount = 511300015
1335383062870: =======================
1335383062870: inside sendReplyRepeatingRunnable for replyCount = 511300015
1335383062871: Leader about to send REPLY packet, number: 511300015 type: 16 Leader in region: (2,0) to Client nodID: 5120
1335383062871: I (the leader) was not the originator client (which id = 5120) so I use UDP to send packet back to my nonleader
1335383062871: inside sendPacket(Packet p)
1335383062871: === Finished one round of sending REPLY Packet =======
1335383062873: Sending UDP payload: 642
1335383062912: Retrying PROC_REQUEST 11:0 (2,0)->(0,0)
1335383062913: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(0,0)
1335383062913: mux: I got a CSM packet at a leader 

1335383062915: Sending UDP payload: 989
1335383062916: nonce 34 heard from src region (2,0)
1335383063013: Retrying PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063014: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063014: mux: I got a CSM packet at a leader 

1335383063016: Sending UDP payload: 989
1335383063017: nonce 35 heard from src region (2,0)
1335383063236: ----------------------------
1335383063236: inside sendRequestPacketRepeatingRunnable for requestCount = 5113003
1335383063237: I'm a leader, my requesting photos packet going to mux directly
1335383063246: --- Finished one round of sending REQUEST Packet ---------
1335383063074: Received UDP payload: 446
1335383063077: mux: Inside mux Packet.CLIENT_REQUEST
1335383063077: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383063077: inside handleClientRequest. Originator leader of region 2
1335383063077: got new request, requestCounter = 5120062
1335383063077: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300015
1335383063077: Yay the last leg succeeded. Removing reply runnables ...
1335383063078: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300015
1335383063078: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300015
1335383063078: do not send ack for received final_leg_ack
1335383063115: Retrying PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063115: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063116: mux: I got a CSM packet at a leader 

1335383063117: Sending UDP payload: 989
1335383063118: nonce 36 heard from src region (2,0)
1335383063139: Received UDP payload: 989
1335383063143: mux: GOT CSM_Msg
1335383063144: nonce 35 heard from src region (2,0)
1335383063216: Retrying PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063216: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063217: mux: I got a CSM packet at a leader 

1335383063218: Sending UDP payload: 989
1335383063230: nonce 37 heard from src region (2,0)
1335383063237: mux: Inside mux Packet.CLIENT_REQUEST
1335383063237: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383063469: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335383063237: inside handleClientRequest. Originator leader of region 2
1335383063237: got new request, requestCounter = 5113003
1335383063238: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335383063238: Sending PROC_REQUEST 10:15 (2,0)->(2,0)
1335383063239: Dispatching Atom PROC_REQUEST 10:15 (2,0)->(2,0)
1335383063239: mux: I got a CSM packet at a leader 

1335383063471: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335383063472: I'm a leader and I successfully saved my client's new photo
1335383063472: now showing in UI the new photo I just saved ... 
1335383063475: the photo length: 5265
1335383063649: end of server show photo aside %%%%%%%%%
1335383063239: Note down new request by adding requestCounter=5113003 to HashMap processedRequests
1335383063239: Make FirstLeg Ack regardless of new or already-processed requests
1335383063239: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5113)
1335383063242: Sending UDP payload: 6276
1335383063244: removed replies before id 15 from sentReplies of size 0
1335383063246: inside handleDSMRequest. At requests's remote leader of region 2
1335383063249: Inside UPLOAD_PHOTO!!
1335383063270: my_gpinfo.isSuccess is now (should be true): true
1335383063271: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335383063280: Received PROC_REQUEST 10:15 (2,0)->(2,0), replying PROC_REPLY 10:15 (2,0)->(2,0)
1335383063280: Dispatching Atom PROC_REPLY 10:15 (2,0)->(2,0)
1335383063281: mux: I got a CSM packet at a leader 

1335383063652: Client received Packet.CLIENT_UPLOAD_PHOTO_ACK
1335383063662: disabling progressdialog due to successful new photo upload
1335383063663: Inside _enableButtons
1335383063663: areButtonsEnabled --> true
1335383063664: send final leg ack regardless of new or already-processed reply
1335383063664: inside finalLegAck: change requestCounter to 4
1335383063665: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5113004 Client in region: (2,0) Client nodID: 5113
1335383063665: I'm a leader client, my final_leg packet going to mux directly
1335383063667: new client_upload_photo_ack reply with replyCounter 511300016
1335383063667: note down new reply by adding replyCounter=511300016 to HashMap processedReplies
1335383063668: leader upload new photo latency = 1335383063652
1335383063668: = leader upload start 0 ~ stop 1335383063652
1335383063670: reg=2 id=5113 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=2 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=100% getNum=0 getGood=0 getBad=0 getTimedout=0 getPercent=-1%
1335383063670: SUCCESS Client now knows saving photo on its leader succeeded
1335383063305: Sending UDP payload: 989
1335383063306: Received UDP payload: 446
1335383063312: Received PROC_REPLY 10:15 (2,0)->(2,0), handing to UserApp
1335383063318: Retrying PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063319: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063337: mux: I got a CSM packet at a leader 

1335383063319: Retrying PROC_REQUEST 11:1 (2,0)->(0,0)
1335383063320: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(0,0)
1335383063344: mux: I got a CSM packet at a leader 

1335383063312: inside handleDSMReply. Now back in originator leader of region 2
1335383063326: DSM layer: Going to and from remote region took latency = 74
1335383063326: DSM layer: orig leader sent packet at 1335383063238 ~ received reply from remote leader at 1335383063312
1335383063331: Originator Region=2's Leader (for Client=5113) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383063331: change leader replyCounter to: 16
1335383063331: reply packet contains the success info for UPLOAD_PHOTO
1335383063331: inside sendReplies of replyCount = 511300016
1335383063331: =======================
1335383063331: inside sendReplyRepeatingRunnable for replyCount = 511300016
1335383063332: Leader about to send REPLY packet, number: 511300016 type: 16 Leader in region: (2,0) to Client nodID: 5113
1335383063332: I (the leader) was also the originator client (id = 5113) so I hand the packet to my mux directly, without UDP
1335383063332: === Finished one round of sending REPLY Packet =======
1335383063342: Sending UDP payload: 989
1335383063344: nonce 40 heard from src region (2,0)
1335383063346: Sending UDP payload: 989
1335383063391: nonce 41 heard from src region (2,0)
1335383063431: Retrying PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063431: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063432: mux: I got a CSM packet at a leader 

1335383063432: Retrying PROC_REQUEST 11:1 (2,0)->(0,0)
1335383063432: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(0,0)
1335383063435: mux: I got a CSM packet at a leader 

1335383063434: Sending UDP payload: 989
1335383063435: nonce 42 heard from src region (2,0)
1335383063438: Sending UDP payload: 989
1335383063439: nonce 43 heard from src region (2,0)
1335383063533: Retrying PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063534: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063536: mux: I got a CSM packet at a leader 

1335383063534: Retrying PROC_REQUEST 11:1 (2,0)->(0,0)
1335383063535: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(0,0)
1335383063538: mux: I got a CSM packet at a leader 

1335383063537: Sending UDP payload: 989
1335383063538: nonce 44 heard from src region (2,0)
1335383063540: Sending UDP payload: 989
1335383063540: nonce 45 heard from src region (2,0)
1335383063716: Client received Packet.CLIENT_UPLOAD_PHOTO_ACK
1335383063716: disabling progressdialog due to successful new photo upload
1335383063717: Inside _enableButtons
1335383063718: areButtonsEnabled --> true
1335383063718: send final leg ack regardless of new or already-processed reply
1335383063718: inside finalLegAck: change requestCounter to 5
1335383063718: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5113005 Client in region: (2,0) Client nodID: 5113
1335383063732: I'm a leader client, my final_leg packet going to mux directly
1335383063771: cupa discarding repeated replyCounter=511300016, but still sent an ack back
1335383063633: =======================
1335383063633: inside sendReplyRepeatingRunnable for replyCount = 511300016
1335383063634: Leader about to send REPLY packet, number: 511300016 type: 16 Leader in region: (2,0) to Client nodID: 5113
1335383063634: I (the leader) was also the originator client (id = 5113) so I hand the packet to my mux directly, without UDP
1335383063634: === Finished one round of sending REPLY Packet =======
1335383063636: Retrying PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063636: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063637: mux: I got a CSM packet at a leader 

1335383063638: Sending UDP payload: 989
1335383063639: Retrying PROC_REQUEST 11:1 (2,0)->(0,0)
1335383063640: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(0,0)
1335383063641: mux: I got a CSM packet at a leader 

1335383063641: nonce 46 heard from src region (2,0)
1335383063643: Sending UDP payload: 989
1335383063644: nonce 47 heard from src region (2,0)
1335383063665: mux: Inside mux Packet.CLIENT_REQUEST
1335383063666: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383063666: inside handleClientRequest. Originator leader of region 2
1335383063666: got new request, requestCounter = 5113004
1335383063666: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300016
1335383063666: Yay the last leg succeeded. Removing reply runnables ...
1335383063666: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300016
1335383063666: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300016
1335383063667: do not send ack for received final_leg_ack
1335383063747: Retrying PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063747: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063748: mux: I got a CSM packet at a leader 

1335383063747: Retrying PROC_REQUEST 11:1 (2,0)->(0,0)
1335383063748: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(0,0)
1335383063752: mux: I got a CSM packet at a leader 

1335383063750: Sending UDP payload: 989
1335383063752: nonce 48 heard from src region (2,0)
1335383063763: Sending UDP payload: 989
1335383063766: nonce 49 heard from src region (2,0)
1335383063771: mux: Inside mux Packet.CLIENT_REQUEST
1335383063773: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383063774: inside handleClientRequest. Originator leader of region 2
1335383063774: got new request, requestCounter = 5113005
1335383063774: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300016
1335383063774: Yay the last leg succeeded. Removing reply runnables ...
1335383063774: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300016
1335383063774: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300016
1335383063774: do not send ack for received final_leg_ack
1335383063859: Retrying PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063860: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063861: mux: I got a CSM packet at a leader 

1335383063860: Retrying PROC_REQUEST 11:1 (2,0)->(0,0)
1335383063861: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(0,0)
1335383063872: mux: I got a CSM packet at a leader 

1335383063863: Sending UDP payload: 989
1335383063872: nonce 50 heard from src region (2,0)
1335383063877: Sending UDP payload: 989
1335383063884: nonce 51 heard from src region (2,0)
1335383063928: Received UDP payload: 989
1335383063937: mux: GOT CSM_Msg
1335383063937: nonce 50 heard from src region (2,0)
1335383063964: Received UDP payload: 989
1335383063966: Retrying PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063967: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(0,0)
1335383063969: mux: I got a CSM packet at a leader 

1335383063967: Retrying PROC_REQUEST 11:1 (2,0)->(0,0)
1335383063968: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(0,0)
1335383063978: mux: I got a CSM packet at a leader 

1335383063974: Sending UDP payload: 989
1335383063978: nonce 52 heard from src region (2,0)
1335383063984: mux: GOT CSM_Msg
1335383063982: Sending UDP payload: 989
1335383063984: nonce 53 heard from src region (2,0)
1335383063996: nonce 51 heard from src region (2,0)
1335383064019: Received UDP payload: 989
1335383064035: mux: GOT CSM_Msg
1335383064035: nonce 52 heard from src region (2,0)
1335383064070: DSM Layer: Request timed out, send failure PROC_REPLY 11:0 (0,0)->(2,0)
1335383064070: Dispatching Atom PROC_REPLY 11:0 (0,0)->(2,0)
1335383064076: mux: I got a CSM packet at a leader 

1335383064075: Retrying PROC_REQUEST 11:1 (2,0)->(0,0)
1335383064076: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(0,0)
1335383064114: mux: I got a CSM packet at a leader 

1335383064078: Sending UDP payload: 989
1335383064083: Received PROC_REPLY 11:0 (0,0)->(2,0), handing to UserApp
1335383064084: inside handleDSMReply. Now back in originator leader of region 2
1335383064084: DSM layer timed out, don't log dsm layer latency stuff.
1335383064104: Originator Region=2's Leader (for Client=5102) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383064104: change leader replyCounter to: 17
1335383064104: reply packet contains the newest photo/success info from the remote region
1335383064104: inside sendReplies of replyCount = 511300017
1335383064104: =======================
1335383064105: inside sendReplyRepeatingRunnable for replyCount = 511300017
1335383064105: Leader about to send REPLY packet, number: 511300017 type: 15 Leader in region: (2,0) to Client nodID: 5102
1335383064105: I (the leader) was not the originator client (which id = 5102) so I use UDP to send packet back to my nonleader
1335383064105: inside sendPacket(Packet p)
1335383064105: === Finished one round of sending REPLY Packet =======
1335383064108: Received UDP payload: 989
1335383064141: mux: GOT CSM_Msg
1335383064116: Sending UDP payload: 989
1335383064135: nonce 55 heard from src region (2,0)
1335383064138: Sending UDP payload: 642
1335383064141: Received DUPLICATE PROC_REPLY 11:0 (0,0)->(2,0)
1335383064176: Retrying PROC_REQUEST 11:1 (2,0)->(0,0)
1335383064177: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(0,0)
1335383064177: mux: I got a CSM packet at a leader 

1335383064179: Sending UDP payload: 989
1335383064180: nonce 56 heard from src region (2,0)
1335383064208: Received UDP payload: 446
1335383064212: mux: Inside mux Packet.CLIENT_REQUEST
1335383064212: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383064212: inside handleClientRequest. Originator leader of region 2
1335383064213: got new request, requestCounter = 5102043
1335383064213: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300017
1335383064213: Yay the last leg succeeded. Removing reply runnables ...
1335383064213: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300017
1335383064213: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300017
1335383064213: do not send ack for received final_leg_ack
1335383064278: Retrying PROC_REQUEST 11:1 (2,0)->(0,0)
1335383064278: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(0,0)
1335383064278: mux: I got a CSM packet at a leader 

1335383064280: Sending UDP payload: 989
1335383064299: nonce 57 heard from src region (2,0)
1335383064329: Received UDP payload: 989
1335383064339: mux: GOT CSM_Msg
1335383064339: nonce 57 heard from src region (2,0)
1335383064340: Received UDP payload: 625
1335383064346: mux: Inside mux Packet.CLIENT_REQUEST
1335383064346: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383064346: inside handleClientRequest. Originator leader of region 2
1335383064347: got new request, requestCounter = 5117078
1335383064347: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383064348: Sending to region: 1
1335383064348: Sending PROC_REQUEST 11:0 (2,0)->(1,0)
1335383064349: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(1,0)
1335383064350: mux: I got a CSM packet at a leader 

1335383064349: Note down new request by adding requestCounter=5117078 to HashMap processedRequests
1335383064349: Make FirstLeg Ack regardless of new or already-processed requests
1335383064349: The leader sending a First Leg ack to originator client (which id = 5117)
1335383064349: inside sendPacket(Packet p)
1335383064351: Sending UDP payload: 989
1335383064352: nonce 58 heard from src region (2,0)
1335383064353: Sending UDP payload: 446
1335383064372: .......... GPS onLocationChanged ...... 
1335383064372: Loc = Location[mProvider=gps,mTime=1335469465000,mLatitude=42.35821929742257,mLongitude=-71.0929106355975,mHasAltitude=true,mAltitude=-22.0,mHasSpeed=true,mSpeed=0.05700645,mHasBearing=true,mBearing=50.3311,mHasAccuracy=true,mAccuracy=10.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383064373: GPS x/long:-71.0929106355975, GPS y/lat: 42.35821929742257. Region width in x: 20.0
1335383064373: location PINPOINTS to region = 2.0, previous 2
1335383064373: Hysteresis is 0.0
1335383064373: stay at region 2
1335383064379: Retrying PROC_REQUEST 11:1 (2,0)->(0,0)
1335383064380: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(0,0)
1335383064380: mux: I got a CSM packet at a leader 

1335383064381: Sending UDP payload: 989
1335383064383: nonce 59 heard from src region (2,0)
1335383064432: Received UDP payload: 446
1335383064481: Retrying PROC_REQUEST 11:1 (2,0)->(0,0)
1335383064481: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(0,0)
1335383064482: mux: I got a CSM packet at a leader 

1335383064500: Sending UDP payload: 989
1335383064504: nonce 60 heard from src region (2,0)
1335383064596: Retrying PROC_REQUEST 11:1 (2,0)->(0,0)
1335383064597: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(0,0)
1335383064602: mux: I got a CSM packet at a leader 

1335383064603: Sending UDP payload: 989
1335383064605: nonce 61 heard from src region (2,0)
1335383064652: Received UDP payload: 625
1335383064665: mux: Inside mux Packet.CLIENT_REQUEST
1335383064666: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383064666: inside handleClientRequest. Originator leader of region 2
1335383064666: discarding repeated requestCounter=5117078, but still send an ack back
1335383064666: Note down new request by adding requestCounter=5117078 to HashMap processedRequests
1335383064666: Make FirstLeg Ack regardless of new or already-processed requests
1335383064666: The leader sending a First Leg ack to originator client (which id = 5117)
1335383064666: inside sendPacket(Packet p)
1335383064667: Sending UDP payload: 446
1335383064699: Retrying PROC_REQUEST 11:1 (2,0)->(0,0)
1335383064700: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(0,0)
1335383064701: mux: I got a CSM packet at a leader 

1335383064702: Sending UDP payload: 989
1335383064704: Received UDP payload: 446
1335383064707: nonce 62 heard from src region (2,0)
1335383064801: DSM Layer: Request timed out, send failure PROC_REPLY 11:1 (0,0)->(2,0)
1335383064802: Dispatching Atom PROC_REPLY 11:1 (0,0)->(2,0)
1335383064803: mux: I got a CSM packet at a leader 

1335383064804: Sending UDP payload: 989
1335383064806: Received PROC_REPLY 11:1 (0,0)->(2,0), handing to UserApp
1335383064806: inside handleDSMReply. Now back in originator leader of region 2
1335383064807: DSM layer timed out, don't log dsm layer latency stuff.
1335383064808: Originator Region=2's Leader (for Client=5104) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383064808: change leader replyCounter to: 18
1335383064808: reply packet contains the newest photo/success info from the remote region
1335383064808: inside sendReplies of replyCount = 511300018
1335383064808: =======================
1335383064808: inside sendReplyRepeatingRunnable for replyCount = 511300018
1335383064809: Leader about to send REPLY packet, number: 511300018 type: 15 Leader in region: (2,0) to Client nodID: 5104
1335383064809: I (the leader) was not the originator client (which id = 5104) so I use UDP to send packet back to my nonleader
1335383064809: inside sendPacket(Packet p)
1335383064809: === Finished one round of sending REPLY Packet =======
1335383064817: Sending UDP payload: 642
1335383064971: Received UDP payload: 989
1335383064981: mux: GOT CSM_Msg
1335383064981: nonce 61 heard from src region (2,0)
1335383065102: Retrying PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065103: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065103: mux: I got a CSM packet at a leader 

1335383065106: Sending UDP payload: 989
1335383065107: nonce 64 heard from src region (2,0)
1335383065109: =======================
1335383065110: inside sendReplyRepeatingRunnable for replyCount = 511300018
1335383065110: Leader about to send REPLY packet, number: 511300018 type: 15 Leader in region: (2,0) to Client nodID: 5104
1335383065110: I (the leader) was not the originator client (which id = 5104) so I use UDP to send packet back to my nonleader
1335383065110: inside sendPacket(Packet p)
1335383065111: === Finished one round of sending REPLY Packet =======
1335383065112: Sending UDP payload: 642
1335383065205: Retrying PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065205: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065205: mux: I got a CSM packet at a leader 

1335383065208: Sending UDP payload: 989
1335383065209: nonce 65 heard from src region (2,0)
1335383065224: Received UDP payload: 989
1335383065236: mux: GOT CSM_Msg
1335383065237: Received DUPLICATE PROC_REPLY 11:1 (0,0)->(2,0)
1335383065306: Retrying PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065306: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065307: mux: I got a CSM packet at a leader 

1335383065308: Sending UDP payload: 989
1335383065309: nonce 66 heard from src region (2,0)
1335383065408: Retrying PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065408: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065409: mux: I got a CSM packet at a leader 

1335383065416: Sending UDP payload: 989
1335383065417: =======================
1335383065417: inside sendReplyRepeatingRunnable for replyCount = 511300018
1335383065432: Leader about to send REPLY packet, number: 511300018 type: 15 Leader in region: (2,0) to Client nodID: 5104
1335383065433: I (the leader) was not the originator client (which id = 5104) so I use UDP to send packet back to my nonleader
1335383065433: inside sendPacket(Packet p)
1335383065437: Received UDP payload: 446
1335383065442: nonce 67 heard from src region (2,0)
1335383065467: mux: Inside mux Packet.CLIENT_REQUEST
1335383065467: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383065433: === Finished one round of sending REPLY Packet =======
1335383065450: Sending UDP payload: 642
1335383065466: Received UDP payload: 446
1335383065468: inside handleClientRequest. Originator leader of region 2
1335383065468: got new request, requestCounter = 5104125
1335383065468: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300018
1335383065476: Yay the last leg succeeded. Removing reply runnables ...
1335383065477: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300018
1335383065477: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300018
1335383065477: do not send ack for received final_leg_ack
1335383065480: mux: Inside mux Packet.CLIENT_REQUEST
1335383065481: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383065481: inside handleClientRequest. Originator leader of region 2
1335383065481: got new request, requestCounter = 5104126
1335383065481: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300018
1335383065481: Yay the last leg succeeded. Removing reply runnables ...
1335383065481: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300018
1335383065481: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300018
1335383065481: do not send ack for received final_leg_ack
1335383065509: Retrying PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065509: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065510: mux: I got a CSM packet at a leader 

1335383065511: Sending UDP payload: 989
1335383065513: nonce 68 heard from src region (2,0)
1335383065610: Retrying PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065611: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065611: mux: I got a CSM packet at a leader 

1335383065613: Sending UDP payload: 989
1335383065616: nonce 69 heard from src region (2,0)
1335383065712: Retrying PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065712: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065713: mux: I got a CSM packet at a leader 

1335383065714: Sending UDP payload: 989
1335383065716: nonce 70 heard from src region (2,0)
1335383065813: Retrying PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065814: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065815: mux: I got a CSM packet at a leader 

1335383065819: Sending UDP payload: 989
1335383065833: nonce 71 heard from src region (2,0)
1335383065868: Received UDP payload: 446
1335383065874: mux: Inside mux Packet.CLIENT_REQUEST
1335383065874: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383065875: inside handleClientRequest. Originator leader of region 2
1335383065875: got new request, requestCounter = 5104127
1335383065875: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300018
1335383065876: Yay the last leg succeeded. Removing reply runnables ...
1335383065876: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300018
1335383065876: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300018
1335383065877: do not send ack for received final_leg_ack
1335383065916: Retrying PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065916: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(1,0)
1335383065916: mux: I got a CSM packet at a leader 

1335383065927: Sending UDP payload: 989
1335383065929: nonce 72 heard from src region (2,0)
1335383065933: Received UDP payload: 989
1335383065937: mux: GOT CSM_Msg
1335383065937: removed replies before id 2 from sentReplies of size 0
1335383065937: inside handleDSMRequest. At requests's remote leader of region 2
1335383065938: INSIDE SERVER_GET_PHOTO!!!
1335383065939: Received PROC_REQUEST 11:2 (1,0)->(2,0), replying PROC_REPLY 11:2 (2,0)->(1,0)
1335383065940: Dispatching Atom PROC_REPLY 11:2 (2,0)->(1,0)
1335383065940: mux: I got a CSM packet at a leader 

1335383065950: Sending UDP payload: 6276
1335383065965: nonce 73 heard from src region (2,0)
1335383066018: Retrying PROC_REQUEST 11:0 (2,0)->(1,0)
1335383066018: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(1,0)
1335383066019: mux: I got a CSM packet at a leader 

1335383066024: Sending UDP payload: 989
1335383066036: nonce 74 heard from src region (2,0)
1335383066122: Retrying PROC_REQUEST 11:0 (2,0)->(1,0)
1335383066123: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(1,0)
1335383066125: mux: I got a CSM packet at a leader 

1335383066129: Sending UDP payload: 989
1335383066141: nonce 75 heard from src region (2,0)
1335383066227: Retrying PROC_REQUEST 11:0 (2,0)->(1,0)
1335383066227: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(1,0)
1335383066228: mux: I got a CSM packet at a leader 

1335383066229: Sending UDP payload: 989
1335383066234: nonce 76 heard from src region (2,0)
1335383066328: Retrying PROC_REQUEST 11:0 (2,0)->(1,0)
1335383066329: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(1,0)
1335383066330: mux: I got a CSM packet at a leader 

1335383066331: Sending UDP payload: 989
1335383066337: nonce 77 heard from src region (2,0)
1335383066430: Retrying PROC_REQUEST 11:0 (2,0)->(1,0)
1335383066431: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(1,0)
1335383066431: mux: I got a CSM packet at a leader 

1335383066433: Sending UDP payload: 989
1335383066436: nonce 78 heard from src region (2,0)
1335383066532: DSM Layer: Request timed out, send failure PROC_REPLY 11:0 (1,0)->(2,0)
1335383066533: Dispatching Atom PROC_REPLY 11:0 (1,0)->(2,0)
1335383066534: mux: I got a CSM packet at a leader 

1335383066538: Sending UDP payload: 989
1335383066541: Received PROC_REPLY 11:0 (1,0)->(2,0), handing to UserApp
1335383066541: inside handleDSMReply. Now back in originator leader of region 2
1335383066541: DSM layer timed out, don't log dsm layer latency stuff.
1335383066547: Originator Region=2's Leader (for Client=5117) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383066548: change leader replyCounter to: 19
1335383066548: reply packet contains the newest photo/success info from the remote region
1335383066548: inside sendReplies of replyCount = 511300019
1335383066549: =======================
1335383066549: inside sendReplyRepeatingRunnable for replyCount = 511300019
1335383066550: Leader about to send REPLY packet, number: 511300019 type: 15 Leader in region: (2,0) to Client nodID: 5117
1335383066550: I (the leader) was not the originator client (which id = 5117) so I use UDP to send packet back to my nonleader
1335383066550: inside sendPacket(Packet p)
1335383066564: === Finished one round of sending REPLY Packet =======
1335383066572: Sending UDP payload: 642
1335383066625: Received UDP payload: 446
1335383066628: mux: Inside mux Packet.CLIENT_REQUEST
1335383066628: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383066628: inside handleClientRequest. Originator leader of region 2
1335383066628: got new request, requestCounter = 5117079
1335383066628: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300019
1335383066628: Yay the last leg succeeded. Removing reply runnables ...
1335383066628: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300019
1335383066629: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300019
1335383066630: do not send ack for received final_leg_ack
1335383066917: canPressButton = TRUE
1335383066922: areButtonsEnabled --> false 
1335383066923: get picture disableButtonsR
1335383066923: areButtonsEnabled --> false
1335383066994: reg=2 id=5113 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=2 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=100% getNum=1 getGood=0 getBad=0 getTimedout=0 getPercent=0%
1335383066994: ** Client making GET photo PACKET to send to the leader. Requesting for region: 2 **
1335383066995: change local requestCounter to 6
1335383066996: Client about to send CLIENT_DOWNLOAD_PHOTO packet, REQUEST: 5113006 Client in region: 2 Client nodID: 5113
1335383066917: inside sendPacket(Packet p)
1335383066919: Sending UDP payload: 446
1335383067103: ----------------------------
1335383067104: inside sendRequestPacketRepeatingRunnable for requestCount = 5113006
1335383067105: I'm a leader, my requesting photos packet going to mux directly
1335383067111: --- Finished one round of sending REQUEST Packet ---------
1335383067076: Received UDP payload: 5819
1335383067081: mux: GOT CSM_Msg
1335383067082: Received DUPLICATE PROC_REPLY 11:0 (1,0)->(2,0)
1335383067105: mux: Inside mux Packet.CLIENT_REQUEST
1335383067105: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383067175: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335383067105: inside handleClientRequest. Originator leader of region 2
1335383067106: got new request, requestCounter = 5113006
1335383067106: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383067107: Sending to region: 2
1335383067107: Sending PROC_REQUEST 11:16 (2,0)->(2,0)
1335383067108: Dispatching Atom PROC_REQUEST 11:16 (2,0)->(2,0)
1335383067108: mux: I got a CSM packet at a leader 

1335383067108: Note down new request by adding requestCounter=5113006 to HashMap processedRequests
1335383067108: Make FirstLeg Ack regardless of new or already-processed requests
1335383067108: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5113)
1335383067110: Sending UDP payload: 989
1335383067113: removed replies before id 16 from sentReplies of size 0
1335383067113: inside handleDSMRequest. At requests's remote leader of region 2
1335383067114: INSIDE SERVER_GET_PHOTO!!!
1335383067115: dst_region == src_region = 2
1335383067115:  1 self to self atomRequest
1335383067130: Received PROC_REQUEST 11:16 (2,0)->(2,0), replying PROC_REPLY 11:16 (2,0)->(2,0)
1335383067132: Dispatching Atom PROC_REPLY 11:16 (2,0)->(2,0)
1335383067133: mux: I got a CSM packet at a leader 

1335383067202: Client received Packet.CLIENT_SHOW_REMOTEPHOTOS. Client requested for a photo in a remote region and this is the reply
1335383067203: disabling progressdialog due to successful new photo get
1335383067203: Inside _enableButtons
1335383067204: areButtonsEnabled --> true
1335383067204: send final leg ack regardless of new or already-processed reply
1335383067207: inside finalLegAck: change requestCounter to 7
1335383067207: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5113007 Client in region: (2,0) Client nodID: 5113
1335383067208: I'm a leader client, my final_leg packet going to mux directly
1335383067210: new client_show_remotephoto reply with replyCounter 511300020
1335383067211: note down new reply by adding replyCounter=511300020 to HashMap processedReplies
1335383067211: leader download remote photo latency = 97
1335383067213: = leader download start 1335383067105 ~ stop 1335383067202
1335383067248: reg=2 id=5113 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=2 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=100% getNum=1 getGood=1 getBad=0 getTimedout=0 getPercent=100%
1335383067250: Success! Client getting photo from remote region, showing photo...
1335383067265: Remote photo's length: 5265
1335383067134: Sending UDP payload: 6276
1335383067138: Received PROC_REPLY 11:16 (2,0)->(2,0), handing to UserApp
1335383067138: inside handleDSMReply. Now back in originator leader of region 2
1335383067139: DSM layer: Going to and from remote region took latency = 31
1335383067139: DSM layer: orig leader sent packet at 1335383067107 ~ received reply from remote leader at 1335383067138
1335383067148: Originator Region=2's Leader (for Client=5113) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383067148: change leader replyCounter to: 20
1335383067148: reply packet contains the newest photo/success info from the remote region
1335383067148: inside sendReplies of replyCount = 511300020
1335383067148: =======================
1335383067149: inside sendReplyRepeatingRunnable for replyCount = 511300020
1335383067149: Leader about to send REPLY packet, number: 511300020 type: 15 Leader in region: (2,0) to Client nodID: 5113
1335383067149: I (the leader) was also the originator client (id = 5113) so I hand the packet to my mux directly, without UDP
1335383067149: === Finished one round of sending REPLY Packet =======
1335383067209: mux: Inside mux Packet.CLIENT_REQUEST
1335383067209: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383067209: inside handleClientRequest. Originator leader of region 2
1335383067209: got new request, requestCounter = 5113007
1335383067209: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300020
1335383067209: Yay the last leg succeeded. Removing reply runnables ...
1335383067210: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300020
1335383067210: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300020
1335383067210: do not send ack for received final_leg_ack
1335383068274: Received UDP payload: 446
1335383068443: Received UDP payload: 625
1335383068475: mux: Inside mux Packet.CLIENT_REQUEST
1335383068476: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383068481: inside handleClientRequest. Originator leader of region 2
1335383068482: got new request, requestCounter = 5105079
1335383068482: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383068497: Sending to region: 1
1335383068499: Sending PROC_REQUEST 11:1 (2,0)->(1,0)
1335383068499: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(1,0)
1335383068508: mux: I got a CSM packet at a leader 

1335383068499: Note down new request by adding requestCounter=5105079 to HashMap processedRequests
1335383068499: Make FirstLeg Ack regardless of new or already-processed requests
1335383068499: The leader sending a First Leg ack to originator client (which id = 5105)
1335383068500: inside sendPacket(Packet p)
1335383068509: Sending UDP payload: 989
1335383068511: nonce 82 heard from src region (2,0)
1335383068516: Sending UDP payload: 446
1335383068895: Received UDP payload: 625
1335383068943: mux: Inside mux Packet.CLIENT_REQUEST
1335383068943: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383068943: inside handleClientRequest. Originator leader of region 2
1335383068943: got new request, requestCounter = 5104128
1335383068943: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383068944: Sending to region: 2
1335383068945: Sending PROC_REQUEST 11:17 (2,0)->(2,0)
1335383068945: Dispatching Atom PROC_REQUEST 11:17 (2,0)->(2,0)
1335383068950: mux: I got a CSM packet at a leader 

1335383068945: Note down new request by adding requestCounter=5104128 to HashMap processedRequests
1335383068949: Make FirstLeg Ack regardless of new or already-processed requests
1335383068949: The leader sending a First Leg ack to originator client (which id = 5104)
1335383068950: inside sendPacket(Packet p)
1335383068951: Sending UDP payload: 989
1335383068969: removed replies before id 17 from sentReplies of size 0
1335383068969: inside handleDSMRequest. At requests's remote leader of region 2
1335383068970: INSIDE SERVER_GET_PHOTO!!!
1335383068973: dst_region == src_region = 2
1335383068973:  1 self to self atomRequest
1335383068975: Received PROC_REQUEST 11:17 (2,0)->(2,0), replying PROC_REPLY 11:17 (2,0)->(2,0)
1335383068975: Dispatching Atom PROC_REPLY 11:17 (2,0)->(2,0)
1335383068998: mux: I got a CSM packet at a leader 

1335383068976: Sending UDP payload: 446
1335383069011: Sending UDP payload: 6276
1335383069014: Received PROC_REPLY 11:17 (2,0)->(2,0), handing to UserApp
1335383069014: inside handleDSMReply. Now back in originator leader of region 2
1335383069014: DSM layer: Going to and from remote region took latency = 70
1335383069014: DSM layer: orig leader sent packet at 1335383068944 ~ received reply from remote leader at 1335383069014
1335383069016: Originator Region=2's Leader (for Client=5104) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383069016: change leader replyCounter to: 21
1335383069016: reply packet contains the newest photo/success info from the remote region
1335383069016: inside sendReplies of replyCount = 511300021
1335383069016: =======================
1335383069017: inside sendReplyRepeatingRunnable for replyCount = 511300021
1335383069017: Leader about to send REPLY packet, number: 511300021 type: 15 Leader in region: (2,0) to Client nodID: 5104
1335383069017: I (the leader) was not the originator client (which id = 5104) so I use UDP to send packet back to my nonleader
1335383069017: inside sendPacket(Packet p)
1335383069017: === Finished one round of sending REPLY Packet =======
1335383069067: Sending UDP payload: 5929
1335383069268: Retrying PROC_REQUEST 11:1 (2,0)->(1,0)
1335383069269: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(1,0)
1335383069274: mux: I got a CSM packet at a leader 

1335383069277: Sending UDP payload: 989
1335383069281: nonce 85 heard from src region (2,0)
1335383069320: =======================
1335383069321: inside sendReplyRepeatingRunnable for replyCount = 511300021
1335383069321: Leader about to send REPLY packet, number: 511300021 type: 15 Leader in region: (2,0) to Client nodID: 5104
1335383069322: I (the leader) was not the originator client (which id = 5104) so I use UDP to send packet back to my nonleader
1335383069322: inside sendPacket(Packet p)
1335383069322: === Finished one round of sending REPLY Packet =======
1335383069334: Sending UDP payload: 5929
1335383069374: Retrying PROC_REQUEST 11:1 (2,0)->(1,0)
1335383069381: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(1,0)
1335383069381: mux: I got a CSM packet at a leader 

1335383069391: Sending UDP payload: 989
1335383069392: nonce 86 heard from src region (2,0)
1335383069440: Received UDP payload: 5819
1335383069444: mux: GOT CSM_Msg
1335383069445: Received PROC_REPLY 11:1 (1,0)->(2,0), handing to UserApp
1335383069445: inside handleDSMReply. Now back in originator leader of region 2
1335383069445: DSM layer: Going to and from remote region took latency = 501
1335383069446: DSM layer: orig leader sent packet at 1335383068944 ~ received reply from remote leader at 1335383069445
1335383069447: Originator Region=2's Leader (for Client=5105) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383069447: change leader replyCounter to: 22
1335383069447: reply packet contains the newest photo/success info from the remote region
1335383069447: inside sendReplies of replyCount = 511300022
1335383069447: =======================
1335383069447: inside sendReplyRepeatingRunnable for replyCount = 511300022
1335383069448: Leader about to send REPLY packet, number: 511300022 type: 15 Leader in region: (2,0) to Client nodID: 5105
1335383069448: I (the leader) was not the originator client (which id = 5105) so I use UDP to send packet back to my nonleader
1335383069448: inside sendPacket(Packet p)
1335383069448: === Finished one round of sending REPLY Packet =======
1335383069460: Sending UDP payload: 5472
1335383069622: =======================
1335383069623: inside sendReplyRepeatingRunnable for replyCount = 511300021
1335383069624: Leader about to send REPLY packet, number: 511300021 type: 15 Leader in region: (2,0) to Client nodID: 5104
1335383069626: I (the leader) was not the originator client (which id = 5104) so I use UDP to send packet back to my nonleader
1335383069627: inside sendPacket(Packet p)
1335383069633: === Finished one round of sending REPLY Packet =======
1335383069637: Sending UDP payload: 5929
1335383069749: =======================
1335383069749: inside sendReplyRepeatingRunnable for replyCount = 511300022
1335383069750: Leader about to send REPLY packet, number: 511300022 type: 15 Leader in region: (2,0) to Client nodID: 5105
1335383069751: I (the leader) was not the originator client (which id = 5105) so I use UDP to send packet back to my nonleader
1335383069751: inside sendPacket(Packet p)
1335383069751: === Finished one round of sending REPLY Packet =======
1335383069752: Sending UDP payload: 5472
1335383069934: =======================
1335383069934: inside sendReplyRepeatingRunnable for replyCount = 511300021
1335383069936: Leader about to send REPLY packet, number: 511300021 type: 15 Leader in region: (2,0) to Client nodID: 5104
1335383069936: I (the leader) was not the originator client (which id = 5104) so I use UDP to send packet back to my nonleader
1335383069937: inside sendPacket(Packet p)
1335383069950: Sending UDP payload: 5929
1335383069952: === Finished one round of sending REPLY Packet =======
1335383070019: inside sendReplyTimeoutR
1335383070020: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300021
1335383070055: =======================
1335383070055: inside sendReplyRepeatingRunnable for replyCount = 511300022
1335383070055: Leader about to send REPLY packet, number: 511300022 type: 15 Leader in region: (2,0) to Client nodID: 5105
1335383070055: I (the leader) was not the originator client (which id = 5105) so I use UDP to send packet back to my nonleader
1335383070055: inside sendPacket(Packet p)
1335383070055: === Finished one round of sending REPLY Packet =======
1335383070057: Sending UDP payload: 5472
1335383070187: Received UDP payload: 446
1335383070194: mux: Inside mux Packet.CLIENT_REQUEST
1335383070194: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383070195: inside handleClientRequest. Originator leader of region 2
1335383070195: got new request, requestCounter = 5105080
1335383070195: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300022
1335383070196: Yay the last leg succeeded. Removing reply runnables ...
1335383070196: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300022
1335383070196: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300022
1335383070197: do not send ack for received final_leg_ack
1335383070318: Received UDP payload: 446
1335383070329: mux: Inside mux Packet.CLIENT_REQUEST
1335383070330: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383070330: inside handleClientRequest. Originator leader of region 2
1335383070330: got new request, requestCounter = 5105081
1335383070330: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300022
1335383070330: Yay the last leg succeeded. Removing reply runnables ...
1335383070330: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300022
1335383070331: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300022
1335383070331: do not send ack for received final_leg_ack
1335383070579: Received UDP payload: 446
1335383070609: mux: Inside mux Packet.CLIENT_REQUEST
1335383070609: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383070609: inside handleClientRequest. Originator leader of region 2
1335383070610: got new request, requestCounter = 5104129
1335383070610: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300021
1335383070610: Yay the last leg succeeded. Removing reply runnables ...
1335383070610: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300021
1335383070610: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300021
1335383070610: do not send ack for received final_leg_ack
1335383070781: Received UDP payload: 446
1335383070840: mux: Inside mux Packet.CLIENT_REQUEST
1335383070841: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383070841: inside handleClientRequest. Originator leader of region 2
1335383070841: got new request, requestCounter = 5104130
1335383070841: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300021
1335383070841: Yay the last leg succeeded. Removing reply runnables ...
1335383070841: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300021
1335383070841: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300021
1335383070842: do not send ack for received final_leg_ack
1335383070857: Received UDP payload: 446
1335383070887: mux: Inside mux Packet.CLIENT_REQUEST
1335383070887: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383070888: inside handleClientRequest. Originator leader of region 2
1335383070888: got new request, requestCounter = 5104131
1335383070888: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300021
1335383070888: Yay the last leg succeeded. Removing reply runnables ...
1335383070888: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300021
1335383070888: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300021
1335383070888: do not send ack for received final_leg_ack
1335383070893: Received UDP payload: 446
1335383070898: mux: Inside mux Packet.CLIENT_REQUEST
1335383070898: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383070898: inside handleClientRequest. Originator leader of region 2
1335383070898: got new request, requestCounter = 5104132
1335383070898: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300021
1335383070899: Yay the last leg succeeded. Removing reply runnables ...
1335383070899: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300021
1335383070899: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300021
1335383070899: do not send ack for received final_leg_ack
1335383071918: inside sendPacket(Packet p)
1335383071928: Sending UDP payload: 446
1335383073051: Received UDP payload: 625
1335383073117: mux: Inside mux Packet.CLIENT_REQUEST
1335383073117: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383073117: inside handleClientRequest. Originator leader of region 2
1335383073121: got new request, requestCounter = 5117080
1335383073121: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383073122: Sending to region: 2
1335383073123: Sending PROC_REQUEST 11:18 (2,0)->(2,0)
1335383073123: Dispatching Atom PROC_REQUEST 11:18 (2,0)->(2,0)
1335383073124: mux: I got a CSM packet at a leader 

1335383073123: Note down new request by adding requestCounter=5117080 to HashMap processedRequests
1335383073123: Make FirstLeg Ack regardless of new or already-processed requests
1335383073123: The leader sending a First Leg ack to originator client (which id = 5117)
1335383073123: inside sendPacket(Packet p)
1335383073125: Sending UDP payload: 989
1335383073126: removed replies before id 18 from sentReplies of size 0
1335383073126: inside handleDSMRequest. At requests's remote leader of region 2
1335383073139: INSIDE SERVER_GET_PHOTO!!!
1335383073140: dst_region == src_region = 2
1335383073140:  1 self to self atomRequest
1335383073160: Received PROC_REQUEST 11:18 (2,0)->(2,0), replying PROC_REPLY 11:18 (2,0)->(2,0)
1335383073160: Dispatching Atom PROC_REPLY 11:18 (2,0)->(2,0)
1335383073164: mux: I got a CSM packet at a leader 

1335383073161: Sending UDP payload: 446
1335383073167: Sending UDP payload: 6276
1335383073173: Received PROC_REPLY 11:18 (2,0)->(2,0), handing to UserApp
1335383073173: inside handleDSMReply. Now back in originator leader of region 2
1335383073174: DSM layer: Going to and from remote region took latency = 51
1335383073174: DSM layer: orig leader sent packet at 1335383073122 ~ received reply from remote leader at 1335383073173
1335383073176: Originator Region=2's Leader (for Client=5117) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383073178: change leader replyCounter to: 23
1335383073178: reply packet contains the newest photo/success info from the remote region
1335383073178: inside sendReplies of replyCount = 511300023
1335383073178: =======================
1335383073178: inside sendReplyRepeatingRunnable for replyCount = 511300023
1335383073179: Leader about to send REPLY packet, number: 511300023 type: 15 Leader in region: (2,0) to Client nodID: 5117
1335383073179: I (the leader) was not the originator client (which id = 5117) so I use UDP to send packet back to my nonleader
1335383073179: inside sendPacket(Packet p)
1335383073179: === Finished one round of sending REPLY Packet =======
1335383073195: Sending UDP payload: 5929
1335383073297: Received UDP payload: 446
1335383073347: Received UDP payload: 446
1335383073350: mux: Inside mux Packet.CLIENT_REQUEST
1335383073350: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383073351: inside handleClientRequest. Originator leader of region 2
1335383073351: got new request, requestCounter = 5117081
1335383073351: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300023
1335383073351: Yay the last leg succeeded. Removing reply runnables ...
1335383073351: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300023
1335383073359: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300023
1335383073359: do not send ack for received final_leg_ack
1335383073424: Received UDP payload: 625
1335383073432: mux: Inside mux Packet.CLIENT_REQUEST
1335383073479: Received UDP payload: 989
1335383073484: mux: GOT CSM_Msg
1335383073485: nonce 196 heard from src region (1,0)
1335383073513: Received UDP payload: 446
1335383073526: mux: Inside Packet.SERVER_REPLY
1335383073527: mux: Ignoring SERVER_REPLY since it's not for me  5113
1335383073712: Received UDP payload: 446
1335383073765: mux: Inside mux Packet.CLIENT_REQUEST
1335383075306: .......... GPS onLocationChanged ...... 
1335383075307: Loc = Location[mProvider=gps,mTime=1335469476000,mLatitude=42.3582217866792,mLongitude=-71.09293174477423,mHasAltitude=true,mAltitude=-15.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=true,mBearing=320.47485,mHasAccuracy=true,mAccuracy=10.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383075308: GPS x/long:-71.09293174477423, GPS y/lat: 42.3582217866792. Region width in x: 20.0
1335383075308: location PINPOINTS to region = 2.0, previous 2
1335383075308: Hysteresis is 0.0
1335383075310: stay at region 2
1335383075583: Received UDP payload: 625
1335383075648: mux: Inside mux Packet.CLIENT_REQUEST
1335383075649: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383075650: inside handleClientRequest. Originator leader of region 2
1335383075650: got new request, requestCounter = 5102044
1335383075651: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383075658: Sending to region: 1
1335383075658: Sending PROC_REQUEST 11:2 (2,0)->(1,0)
1335383075659: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(1,0)
1335383075669: mux: I got a CSM packet at a leader 

1335383075668: Note down new request by adding requestCounter=5102044 to HashMap processedRequests
1335383075668: Make FirstLeg Ack regardless of new or already-processed requests
1335383075668: The leader sending a First Leg ack to originator client (which id = 5102)
1335383075668: inside sendPacket(Packet p)
1335383075688: Sending UDP payload: 989
1335383075692: nonce 89 heard from src region (2,0)
1335383075693: Sending UDP payload: 446
1335383075782: Received UDP payload: 5819
1335383075796: mux: GOT CSM_Msg
1335383075796: Received PROC_REPLY 11:2 (1,0)->(2,0), handing to UserApp
1335383075797: inside handleDSMReply. Now back in originator leader of region 2
1335383075797: DSM layer: Going to and from remote region took latency = 138
1335383075797: DSM layer: orig leader sent packet at 1335383075658 ~ received reply from remote leader at 1335383075796
1335383075798: Originator Region=2's Leader (for Client=5102) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383075813: change leader replyCounter to: 24
1335383075813: reply packet contains the newest photo/success info from the remote region
1335383075813: inside sendReplies of replyCount = 511300024
1335383075813: =======================
1335383075813: inside sendReplyRepeatingRunnable for replyCount = 511300024
1335383075814: Leader about to send REPLY packet, number: 511300024 type: 15 Leader in region: (2,0) to Client nodID: 5102
1335383075814: I (the leader) was not the originator client (which id = 5102) so I use UDP to send packet back to my nonleader
1335383075814: inside sendPacket(Packet p)
1335383075814: === Finished one round of sending REPLY Packet =======
1335383075828: Sending UDP payload: 5472
1335383076114: =======================
1335383076115: inside sendReplyRepeatingRunnable for replyCount = 511300024
1335383076117: Leader about to send REPLY packet, number: 511300024 type: 15 Leader in region: (2,0) to Client nodID: 5102
1335383076125: I (the leader) was not the originator client (which id = 5102) so I use UDP to send packet back to my nonleader
1335383076126: inside sendPacket(Packet p)
1335383076131: Sending UDP payload: 5472
1335383076133: === Finished one round of sending REPLY Packet =======
1335383076241: Received UDP payload: 446
1335383076243: mux: Inside mux Packet.CLIENT_REQUEST
1335383076243: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383076244: inside handleClientRequest. Originator leader of region 2
1335383076244: got new request, requestCounter = 5102045
1335383076244: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300024
1335383076244: Yay the last leg succeeded. Removing reply runnables ...
1335383076244: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300024
1335383076244: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300024
1335383076244: do not send ack for received final_leg_ack
1335383076692: Received UDP payload: 3673
1335383076742: mux: Inside mux Packet.CLIENT_REQUEST
1335383076742: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383076742: inside handleClientRequest. Originator leader of region 2
1335383076742: got new request, requestCounter = 5103016
1335383076743: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335383076743: Sending PROC_REQUEST 10:19 (2,0)->(2,0)
1335383076743: Dispatching Atom PROC_REQUEST 10:19 (2,0)->(2,0)
1335383076744: mux: I got a CSM packet at a leader 

1335383076794: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335383076796: I'm a leader and I successfully saved my client's new photo
1335383076796: now showing in UI the new photo I just saved ... 
1335383076797: the photo length: 3026
1335383076895: end of server show photo aside %%%%%%%%%
1335383076744: Note down new request by adding requestCounter=5103016 to HashMap processedRequests
1335383076744: Make FirstLeg Ack regardless of new or already-processed requests
1335383076744: The leader sending a First Leg ack to originator client (which id = 5103)
1335383076744: inside sendPacket(Packet p)
1335383076750: Sending UDP payload: 4037
1335383076753: removed replies before id 19 from sentReplies of size 0
1335383076753: inside handleDSMRequest. At requests's remote leader of region 2
1335383076757: Inside UPLOAD_PHOTO!!
1335383076772: my_gpinfo.isSuccess is now (should be true): true
1335383076772: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335383076777: Received PROC_REQUEST 10:19 (2,0)->(2,0), replying PROC_REPLY 10:19 (2,0)->(2,0)
1335383076788: Dispatching Atom PROC_REPLY 10:19 (2,0)->(2,0)
1335383076791: mux: I got a CSM packet at a leader 

1335383076789: Sending UDP payload: 446
1335383076797: Sending UDP payload: 989
1335383076798: Received PROC_REPLY 10:19 (2,0)->(2,0), handing to UserApp
1335383076798: inside handleDSMReply. Now back in originator leader of region 2
1335383076798: DSM layer: Going to and from remote region took latency = 55
1335383076798: DSM layer: orig leader sent packet at 1335383076743 ~ received reply from remote leader at 1335383076798
1335383076822: Originator Region=2's Leader (for Client=5103) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383076823: change leader replyCounter to: 25
1335383076823: reply packet contains the success info for UPLOAD_PHOTO
1335383076823: inside sendReplies of replyCount = 511300025
1335383076823: =======================
1335383076823: inside sendReplyRepeatingRunnable for replyCount = 511300025
1335383076824: Leader about to send REPLY packet, number: 511300025 type: 16 Leader in region: (2,0) to Client nodID: 5103
1335383076824: I (the leader) was not the originator client (which id = 5103) so I use UDP to send packet back to my nonleader
1335383076824: inside sendPacket(Packet p)
1335383076824: === Finished one round of sending REPLY Packet =======
1335383076826: Sending UDP payload: 642
1335383076858: Received UDP payload: 446
1335383076861: mux: Inside mux Packet.CLIENT_REQUEST
1335383076861: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383076861: inside handleClientRequest. Originator leader of region 2
1335383076861: got new request, requestCounter = 5103017
1335383076861: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300025
1335383076861: Yay the last leg succeeded. Removing reply runnables ...
1335383076862: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300025
1335383076862: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300025
1335383076862: do not send ack for received final_leg_ack
1335383076921: inside sendPacket(Packet p)
1335383076922: Sending UDP payload: 446
1335383077306: .......... GPS onLocationChanged ...... 
1335383077307: Loc = Location[mProvider=gps,mTime=1335469478000,mLatitude=42.35821872227828,mLongitude=-71.09294632427506,mHasAltitude=true,mAltitude=-14.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=true,mBearing=2.4020572,mHasAccuracy=true,mAccuracy=15.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383077307: GPS x/long:-71.09294632427506, GPS y/lat: 42.35821872227828. Region width in x: 20.0
1335383077307: location PINPOINTS to region = 2.0, previous 2
1335383077307: Hysteresis is 0.0
1335383077307: stay at region 2
1335383077354: Received UDP payload: 446
1335383077675: Received UDP payload: 446
1335383077967: Received UDP payload: 446
1335383078272: Received UDP payload: 446
1335383078330: Received UDP payload: 446
1335383080364: .......... GPS onLocationChanged ...... 
1335383080365: Loc = Location[mProvider=gps,mTime=1335469481000,mLatitude=42.358225913875636,mLongitude=-71.09295599683244,mHasAltitude=true,mAltitude=-22.0,mHasSpeed=true,mSpeed=0.38792655,mHasBearing=true,mBearing=350.03735,mHasAccuracy=true,mAccuracy=10.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383080365: GPS x/long:-71.09295599683244, GPS y/lat: 42.358225913875636. Region width in x: 20.0
1335383080365: location PINPOINTS to region = 2.0, previous 2
1335383080365: Hysteresis is 0.0
1335383080366: stay at region 2
1335383080547: Received UDP payload: 6690
1335383080611: mux: Inside mux Packet.CLIENT_REQUEST
1335383080612: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383080613: inside handleClientRequest. Originator leader of region 2
1335383080618: got new request, requestCounter = 5104133
1335383080618: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335383080620: Sending PROC_REQUEST 10:20 (2,0)->(2,0)
1335383080633: Dispatching Atom PROC_REQUEST 10:20 (2,0)->(2,0)
1335383080637: mux: I got a CSM packet at a leader 

1335383080671: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335383080675: I'm a leader and I successfully saved my client's new photo
1335383080685: now showing in UI the new photo I just saved ... 
1335383080685: the photo length: 6043
1335383080770: end of server show photo aside %%%%%%%%%
1335383080633: Note down new request by adding requestCounter=5104133 to HashMap processedRequests
1335383080637: Make FirstLeg Ack regardless of new or already-processed requests
1335383080637: The leader sending a First Leg ack to originator client (which id = 5104)
1335383080637: inside sendPacket(Packet p)
1335383080639: Sending UDP payload: 7054
1335383080659: removed replies before id 20 from sentReplies of size 0
1335383080659: inside handleDSMRequest. At requests's remote leader of region 2
1335383080660: Inside UPLOAD_PHOTO!!
1335383080661: my_gpinfo.isSuccess is now (should be true): true
1335383080661: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335383080663: Received PROC_REQUEST 10:20 (2,0)->(2,0), replying PROC_REPLY 10:20 (2,0)->(2,0)
1335383080663: Dispatching Atom PROC_REPLY 10:20 (2,0)->(2,0)
1335383080673: mux: I got a CSM packet at a leader 

1335383080664: Sending UDP payload: 446
1335383080674: Sending UDP payload: 989
1335383080676: Received PROC_REPLY 10:20 (2,0)->(2,0), handing to UserApp
1335383080676: inside handleDSMReply. Now back in originator leader of region 2
1335383080676: DSM layer: Going to and from remote region took latency = 57
1335383080677: DSM layer: orig leader sent packet at 1335383080619 ~ received reply from remote leader at 1335383080676
1335383080699: Originator Region=2's Leader (for Client=5104) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383080700: change leader replyCounter to: 26
1335383080700: reply packet contains the success info for UPLOAD_PHOTO
1335383080700: inside sendReplies of replyCount = 511300026
1335383080700: =======================
1335383080700: inside sendReplyRepeatingRunnable for replyCount = 511300026
1335383080701: Leader about to send REPLY packet, number: 511300026 type: 16 Leader in region: (2,0) to Client nodID: 5104
1335383080701: I (the leader) was not the originator client (which id = 5104) so I use UDP to send packet back to my nonleader
1335383080701: inside sendPacket(Packet p)
1335383080701: === Finished one round of sending REPLY Packet =======
1335383080703: Sending UDP payload: 642
1335383080944: Received UDP payload: 6690
1335383080957: mux: Inside mux Packet.CLIENT_REQUEST
1335383080958: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383080958: inside handleClientRequest. Originator leader of region 2
1335383080959: discarding repeated requestCounter=5104133, but still send an ack back
1335383080959: Note down new request by adding requestCounter=5104133 to HashMap processedRequests
1335383080959: Make FirstLeg Ack regardless of new or already-processed requests
1335383080960: The leader sending a First Leg ack to originator client (which id = 5104)
1335383080960: inside sendPacket(Packet p)
1335383080963: Sending UDP payload: 446
1335383081002: =======================
1335383081002: inside sendReplyRepeatingRunnable for replyCount = 511300026
1335383081003: Leader about to send REPLY packet, number: 511300026 type: 16 Leader in region: (2,0) to Client nodID: 5104
1335383081003: I (the leader) was not the originator client (which id = 5104) so I use UDP to send packet back to my nonleader
1335383081004: inside sendPacket(Packet p)
1335383081004: === Finished one round of sending REPLY Packet =======
1335383081007: Sending UDP payload: 642
1335383081156: Received UDP payload: 446
1335383081198: mux: Inside mux Packet.CLIENT_REQUEST
1335383081198: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383081199: inside handleClientRequest. Originator leader of region 2
1335383081199: got new request, requestCounter = 5104134
1335383081199: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300026
1335383081199: Yay the last leg succeeded. Removing reply runnables ...
1335383081199: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300026
1335383081199: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300026
1335383081199: do not send ack for received final_leg_ack
1335383081211: Received UDP payload: 446
1335383081229: mux: Inside mux Packet.CLIENT_REQUEST
1335383081229: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383081229: inside handleClientRequest. Originator leader of region 2
1335383081230: got new request, requestCounter = 5104135
1335383081230: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300026
1335383081230: Yay the last leg succeeded. Removing reply runnables ...
1335383081230: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300026
1335383081230: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300026
1335383081230: do not send ack for received final_leg_ack
1335383081291: Received UDP payload: 6690
1335383081297: mux: Inside mux Packet.CLIENT_REQUEST
1335383081298: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383081298: inside handleClientRequest. Originator leader of region 2
1335383081298: discarding repeated requestCounter=5104133, but still send an ack back
1335383081298: Note down new request by adding requestCounter=5104133 to HashMap processedRequests
1335383081298: Make FirstLeg Ack regardless of new or already-processed requests
1335383081298: The leader sending a First Leg ack to originator client (which id = 5104)
1335383081298: inside sendPacket(Packet p)
1335383081299: Sending UDP payload: 446
1335383081411: Received UDP payload: 5627
1335383081413: mux: Inside mux Packet.CLIENT_REQUEST
1335383081413: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383081413: inside handleClientRequest. Originator leader of region 2
1335383081413: got new request, requestCounter = 5108040
1335383081414: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335383081426: Sending PROC_REQUEST 10:21 (2,0)->(2,0)
1335383081426: Dispatching Atom PROC_REQUEST 10:21 (2,0)->(2,0)
1335383081427: mux: I got a CSM packet at a leader 

1335383081467: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335383081468: I'm a leader and I successfully saved my client's new photo
1335383081471: now showing in UI the new photo I just saved ... 
1335383081471: the photo length: 4980
1335383081562: end of server show photo aside %%%%%%%%%
1335383081427: Note down new request by adding requestCounter=5108040 to HashMap processedRequests
1335383081427: Make FirstLeg Ack regardless of new or already-processed requests
1335383081427: The leader sending a First Leg ack to originator client (which id = 5108)
1335383081427: inside sendPacket(Packet p)
1335383081429: Sending UDP payload: 5991
1335383081437: removed replies before id 21 from sentReplies of size 0
1335383081437: inside handleDSMRequest. At requests's remote leader of region 2
1335383081439: Inside UPLOAD_PHOTO!!
1335383081440: my_gpinfo.isSuccess is now (should be true): true
1335383081440: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335383081458: Received PROC_REQUEST 10:21 (2,0)->(2,0), replying PROC_REPLY 10:21 (2,0)->(2,0)
1335383081458: Dispatching Atom PROC_REPLY 10:21 (2,0)->(2,0)
1335383081462: mux: I got a CSM packet at a leader 

1335383081460: Sending UDP payload: 446
1335383081463: Sending UDP payload: 989
1335383081469: Received PROC_REPLY 10:21 (2,0)->(2,0), handing to UserApp
1335383081469: inside handleDSMReply. Now back in originator leader of region 2
1335383081470: DSM layer: Going to and from remote region took latency = 55
1335383081470: DSM layer: orig leader sent packet at 1335383081414 ~ received reply from remote leader at 1335383081469
1335383081471: Originator Region=2's Leader (for Client=5108) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383081471: change leader replyCounter to: 27
1335383081471: reply packet contains the success info for UPLOAD_PHOTO
1335383081489: inside sendReplies of replyCount = 511300027
1335383081489: =======================
1335383081489: inside sendReplyRepeatingRunnable for replyCount = 511300027
1335383081490: Leader about to send REPLY packet, number: 511300027 type: 16 Leader in region: (2,0) to Client nodID: 5108
1335383081490: I (the leader) was not the originator client (which id = 5108) so I use UDP to send packet back to my nonleader
1335383081492: inside sendPacket(Packet p)
1335383081492: === Finished one round of sending REPLY Packet =======
1335383081493: Sending UDP payload: 642
1335383081523: Received UDP payload: 625
1335383081526: mux: Inside mux Packet.CLIENT_REQUEST
1335383081791: =======================
1335383081792: inside sendReplyRepeatingRunnable for replyCount = 511300027
1335383081798: Leader about to send REPLY packet, number: 511300027 type: 16 Leader in region: (2,0) to Client nodID: 5108
1335383081798: I (the leader) was not the originator client (which id = 5108) so I use UDP to send packet back to my nonleader
1335383081799: inside sendPacket(Packet p)
1335383081799: === Finished one round of sending REPLY Packet =======
1335383081809: Sending UDP payload: 642
1335383081833: Received UDP payload: 625
1335383081837: mux: Inside mux Packet.CLIENT_REQUEST
1335383081905: Received UDP payload: 446
1335383081908: mux: Inside mux Packet.CLIENT_REQUEST
1335383081908: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383081908: inside handleClientRequest. Originator leader of region 2
1335383081908: got new request, requestCounter = 5108041
1335383081908: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300027
1335383081908: Yay the last leg succeeded. Removing reply runnables ...
1335383081908: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300027
1335383081909: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300027
1335383081909: do not send ack for received final_leg_ack
1335383081922: inside sendPacket(Packet p)
1335383081923: Sending UDP payload: 446
1335383082150: Received UDP payload: 625
1335383082223: mux: Inside mux Packet.CLIENT_REQUEST
1335383082227: Received UDP payload: 989
1335383082259: mux: GOT CSM_Msg
1335383082259: nonce 199 heard from src region (1,0)
1335383082266: Received UDP payload: 446
1335383082295: mux: Inside Packet.SERVER_REPLY
1335383082295: mux: Ignoring SERVER_REPLY since it's not for me  5113
1335383082367: .......... GPS onLocationChanged ...... 
1335383082368: Loc = Location[mProvider=gps,mTime=1335469483000,mLatitude=42.35823504948845,mLongitude=-71.09295934063043,mHasAltitude=true,mAltitude=-22.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=true,mBearing=344.83347,mHasAccuracy=true,mAccuracy=10.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383082368: GPS x/long:-71.09295934063043, GPS y/lat: 42.35823504948845. Region width in x: 20.0
1335383082368: location PINPOINTS to region = 2.0, previous 2
1335383082369: Hysteresis is 0.0
1335383082369: stay at region 2
1335383083041: Received UDP payload: 989
1335383083058: mux: GOT CSM_Msg
1335383083058: nonce 200 heard from src region (1,0)
1335383083112: Received UDP payload: 989
1335383083124: mux: GOT CSM_Msg
1335383083124: nonce 201 heard from src region (1,0)
1335383083219: Received UDP payload: 989
1335383083224: mux: GOT CSM_Msg
1335383083225: nonce 202 heard from src region (1,0)
1335383083269: Received UDP payload: 625
1335383083272: mux: Inside mux Packet.CLIENT_REQUEST
1335383083272: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383083272: inside handleClientRequest. Originator leader of region 2
1335383083272: got new request, requestCounter = 5117082
1335383083273: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383083274: Sending to region: 0
1335383083275: Sending PROC_REQUEST 11:2 (2,0)->(0,0)
1335383083275: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(0,0)
1335383083287: mux: I got a CSM packet at a leader 

1335383083286: Received UDP payload: 446
1335383083275: Note down new request by adding requestCounter=5117082 to HashMap processedRequests
1335383083286: Make FirstLeg Ack regardless of new or already-processed requests
1335383083287: The leader sending a First Leg ack to originator client (which id = 5117)
1335383083287: inside sendPacket(Packet p)
1335383083297: Sending UDP payload: 989
1335383083302: nonce 96 heard from src region (2,0)
1335383083303: Sending UDP payload: 446
1335383083319: Received UDP payload: 989
1335383083331: mux: GOT CSM_Msg
1335383083331: nonce 203 heard from src region (1,0)
1335383083356: Received UDP payload: 989
1335383083361: mux: GOT CSM_Msg
1335383083361: nonce 96 heard from src region (2,0)
1335383083417: Received UDP payload: 989
1335383083424: mux: GOT CSM_Msg
1335383083425: nonce 204 heard from src region (1,0)
1335383083524: Received UDP payload: 989
1335383083534: mux: GOT CSM_Msg
1335383083535: nonce 205 heard from src region (1,0)
1335383083654: Received UDP payload: 989
1335383083699: mux: GOT CSM_Msg
1335383083699: nonce 206 heard from src region (1,0)
1335383083753: Received UDP payload: 989
1335383083759: mux: GOT CSM_Msg
1335383083759: nonce 207 heard from src region (1,0)
1335383083900: Received UDP payload: 3358
1335383083931: mux: Inside mux Packet.CLIENT_REQUEST
1335383083986: Received UDP payload: 989
1335383083991: mux: GOT CSM_Msg
1335383083991: nonce 208 heard from src region (1,0)
1335383084031: Retrying PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084032: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084032: mux: I got a CSM packet at a leader 

1335383084034: Sending UDP payload: 989
1335383084034: nonce 97 heard from src region (2,0)
1335383084066: Received UDP payload: 989
1335383084071: mux: GOT CSM_Msg
1335383084071: nonce 211 heard from src region (1,0)
1335383084122: Received UDP payload: 446
1335383084126: mux: Inside mux Packet.CLIENT_REQUEST
1335383084133: Retrying PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084133: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084133: mux: I got a CSM packet at a leader 

1335383084135: Sending UDP payload: 989
1335383084136: nonce 98 heard from src region (2,0)
1335383084197: Received UDP payload: 989
1335383084202: mux: GOT CSM_Msg
1335383084202: nonce 213 heard from src region (1,0)
1335383084219: Received UDP payload: 989
1335383084236: Retrying PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084236: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084237: mux: I got a CSM packet at a leader 

1335383084261: Sending UDP payload: 989
1335383084261: nonce 99 heard from src region (2,0)
1335383084269: mux: GOT CSM_Msg
1335383084270: nonce 97 heard from src region (2,0)
1335383084270: Received UDP payload: 989
1335383084288: mux: GOT CSM_Msg
1335383084288: nonce 214 heard from src region (1,0)
1335383084299: Received UDP payload: 625
1335383084312: mux: Inside mux Packet.CLIENT_REQUEST
1335383084312: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383084312: inside handleClientRequest. Originator leader of region 2
1335383084312: got new request, requestCounter = 5120063
1335383084313: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383084313: Sending to region: 1
1335383084314: Sending PROC_REQUEST 11:3 (2,0)->(1,0)
1335383084314: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(1,0)
1335383084315: mux: I got a CSM packet at a leader 

1335383084314: Note down new request by adding requestCounter=5120063 to HashMap processedRequests
1335383084314: Make FirstLeg Ack regardless of new or already-processed requests
1335383084314: The leader sending a First Leg ack to originator client (which id = 5120)
1335383084315: inside sendPacket(Packet p)
1335383084316: Sending UDP payload: 989
1335383084317: nonce 100 heard from src region (2,0)
1335383084318: Sending UDP payload: 446
1335383084340: Retrying PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084341: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084342: mux: I got a CSM packet at a leader 

1335383084343: Sending UDP payload: 989
1335383084358: nonce 101 heard from src region (2,0)
1335383084395: .......... GPS onLocationChanged ...... 
1335383084378: Received UDP payload: 642
1335383084381: mux: Inside Packet.SERVER_REPLY
1335383084381: mux: Ignoring SERVER_REPLY since it's not for me  5113
1335383084396: Loc = Location[mProvider=gps,mTime=1335469485000,mLatitude=42.35824472134908,mLongitude=-71.0929611676937,mHasAltitude=true,mAltitude=-20.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=true,mBearing=331.6667,mHasAccuracy=true,mAccuracy=10.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383084396: GPS x/long:-71.0929611676937, GPS y/lat: 42.35824472134908. Region width in x: 20.0
1335383084397: location PINPOINTS to region = 2.0, previous 2
1335383084397: Hysteresis is 0.0
1335383084397: stay at region 2
1335383084427: Received UDP payload: 989
1335383084433: mux: GOT CSM_Msg
1335383084434: nonce 101 heard from src region (2,0)
1335383084442: Retrying PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084442: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084443: mux: I got a CSM packet at a leader 

1335383084444: Sending UDP payload: 989
1335383084455: nonce 102 heard from src region (2,0)
1335383084494: Received UDP payload: 446
1335383084497: mux: Inside mux Packet.CLIENT_REQUEST
1335383084543: Retrying PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084544: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084544: mux: I got a CSM packet at a leader 

1335383084546: Sending UDP payload: 989
1335383084561: nonce 103 heard from src region (2,0)
1335383084645: Retrying PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084645: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084646: mux: I got a CSM packet at a leader 

1335383084647: Sending UDP payload: 989
1335383084649: nonce 104 heard from src region (2,0)
1335383084692: Received UDP payload: 642
1335383084696: mux: Inside Packet.SERVER_REPLY
1335383084696: mux: Ignoring SERVER_REPLY since it's not for me  5113
1335383084746: Retrying PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084747: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084748: mux: I got a CSM packet at a leader 

1335383084749: Sending UDP payload: 989
1335383084754: nonce 105 heard from src region (2,0)
1335383084826: Received UDP payload: 446
1335383084829: mux: Inside mux Packet.CLIENT_REQUEST
1335383084848: Retrying PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084849: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084849: mux: I got a CSM packet at a leader 

1335383084851: Sending UDP payload: 989
1335383084858: nonce 106 heard from src region (2,0)
1335383084932: Received UDP payload: 989
1335383084937: mux: GOT CSM_Msg
1335383084938: nonce 104 heard from src region (2,0)
1335383084950: Retrying PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084950: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(0,0)
1335383084951: mux: I got a CSM packet at a leader 

1335383084953: Sending UDP payload: 989
1335383084956: nonce 107 heard from src region (2,0)
1335383084995: Received UDP payload: 989
1335383085003: mux: GOT CSM_Msg
1335383085003: nonce 107 heard from src region (2,0)
1335383085051: Retrying PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085052: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085053: mux: I got a CSM packet at a leader 

1335383085052: Retrying PROC_REQUEST 11:2 (2,0)->(0,0)
1335383085053: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(0,0)
1335383085059: mux: I got a CSM packet at a leader 

1335383085055: Sending UDP payload: 989
1335383085058: nonce 108 heard from src region (2,0)
1335383085060: Sending UDP payload: 989
1335383085061: nonce 109 heard from src region (2,0)
1335383085154: Retrying PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085155: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085156: mux: I got a CSM packet at a leader 

1335383085159: Sending UDP payload: 989
1335383085161: Retrying PROC_REQUEST 11:2 (2,0)->(0,0)
1335383085161: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(0,0)
1335383085163: mux: I got a CSM packet at a leader 

1335383085163: nonce 110 heard from src region (2,0)
1335383085172: Sending UDP payload: 989
1335383085174: nonce 111 heard from src region (2,0)
1335383085263: Retrying PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085263: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085264: mux: I got a CSM packet at a leader 

1335383085264: Retrying PROC_REQUEST 11:2 (2,0)->(0,0)
1335383085264: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(0,0)
1335383085267: mux: I got a CSM packet at a leader 

1335383085266: Sending UDP payload: 989
1335383085267: nonce 112 heard from src region (2,0)
1335383085268: Sending UDP payload: 989
1335383085269: nonce 113 heard from src region (2,0)
1335383085369: Retrying PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085370: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085371: mux: I got a CSM packet at a leader 

1335383085370: Retrying PROC_REQUEST 11:2 (2,0)->(0,0)
1335383085371: Dispatching Atom PROC_REQUEST 11:2 (2,0)->(0,0)
1335383085393: mux: I got a CSM packet at a leader 

1335383085386: Sending UDP payload: 989
1335383085392: nonce 114 heard from src region (2,0)
1335383085403: Sending UDP payload: 989
1335383085407: nonce 115 heard from src region (2,0)
1335383085408: Received UDP payload: 446
1335383085421: mux: Inside mux Packet.CLIENT_REQUEST
1335383085486: Retrying PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085486: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085487: mux: I got a CSM packet at a leader 

1335383085486: DSM Layer: Request timed out, send failure PROC_REPLY 11:2 (0,0)->(2,0)
1335383085487: Dispatching Atom PROC_REPLY 11:2 (0,0)->(2,0)
1335383085505: mux: I got a CSM packet at a leader 

1335383085489: Sending UDP payload: 989
1335383085505: nonce 116 heard from src region (2,0)
1335383085507: Sending UDP payload: 989
1335383085517: Received PROC_REPLY 11:2 (0,0)->(2,0), handing to UserApp
1335383085520: inside handleDSMReply. Now back in originator leader of region 2
1335383085520: DSM layer timed out, don't log dsm layer latency stuff.
1335383085521: Originator Region=2's Leader (for Client=5117) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383085521: change leader replyCounter to: 28
1335383085521: reply packet contains the newest photo/success info from the remote region
1335383085522: inside sendReplies of replyCount = 511300028
1335383085522: =======================
1335383085522: inside sendReplyRepeatingRunnable for replyCount = 511300028
1335383085522: Leader about to send REPLY packet, number: 511300028 type: 15 Leader in region: (2,0) to Client nodID: 5117
1335383085523: I (the leader) was not the originator client (which id = 5117) so I use UDP to send packet back to my nonleader
1335383085523: inside sendPacket(Packet p)
1335383085523: === Finished one round of sending REPLY Packet =======
1335383085533: Sending UDP payload: 642
1335383085588: Retrying PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085589: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085589: mux: I got a CSM packet at a leader 

1335383085591: Sending UDP payload: 989
1335383085592: nonce 118 heard from src region (2,0)
1335383085652: Received UDP payload: 446
1335383085655: mux: Inside mux Packet.CLIENT_REQUEST
1335383085655: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383085655: inside handleClientRequest. Originator leader of region 2
1335383085655: got new request, requestCounter = 5117083
1335383085656: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300028
1335383085656: Yay the last leg succeeded. Removing reply runnables ...
1335383085656: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300028
1335383085656: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300028
1335383085658: do not send ack for received final_leg_ack
1335383085690: Retrying PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085690: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085691: mux: I got a CSM packet at a leader 

1335383085693: Sending UDP payload: 989
1335383085695: nonce 119 heard from src region (2,0)
1335383085791: Retrying PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085792: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085792: mux: I got a CSM packet at a leader 

1335383085794: Sending UDP payload: 989
1335383085796: nonce 120 heard from src region (2,0)
1335383085893: Retrying PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085893: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085894: mux: I got a CSM packet at a leader 

1335383085897: Sending UDP payload: 989
1335383085899: nonce 121 heard from src region (2,0)
1335383085994: Retrying PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085995: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(1,0)
1335383085995: mux: I got a CSM packet at a leader 

1335383085997: Sending UDP payload: 989
1335383085998: nonce 122 heard from src region (2,0)
1335383086096: Retrying PROC_REQUEST 11:3 (2,0)->(1,0)
1335383086097: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(1,0)
1335383086099: mux: I got a CSM packet at a leader 

1335383086103: Sending UDP payload: 989
1335383086105: nonce 123 heard from src region (2,0)
1335383086202: Retrying PROC_REQUEST 11:3 (2,0)->(1,0)
1335383086204: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(1,0)
1335383086204: mux: I got a CSM packet at a leader 

1335383086213: Sending UDP payload: 989
1335383086223: nonce 124 heard from src region (2,0)
1335383086289: Received UDP payload: 625
1335383086291: mux: Inside mux Packet.CLIENT_REQUEST
1335383086292: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383086292: inside handleClientRequest. Originator leader of region 2
1335383086292: got new request, requestCounter = 5104136
1335383086292: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383086293: Sending to region: 3
1335383086297: Sending PROC_REQUEST 11:0 (2,0)->(3,0)
1335383086298: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(3,0)
1335383086299: mux: I got a CSM packet at a leader 

1335383086298: Note down new request by adding requestCounter=5104136 to HashMap processedRequests
1335383086298: Make FirstLeg Ack regardless of new or already-processed requests
1335383086298: The leader sending a First Leg ack to originator client (which id = 5104)
1335383086298: inside sendPacket(Packet p)
1335383086300: Sending UDP payload: 989
1335383086309: Retrying PROC_REQUEST 11:3 (2,0)->(1,0)
1335383086309: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(1,0)
1335383086330: mux: I got a CSM packet at a leader 

1335383086316: Received UDP payload: 625
1335383086335: mux: Inside mux Packet.CLIENT_REQUEST
1335383086335: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383086326: nonce 125 heard from src region (2,0)
1335383086329: Sending UDP payload: 446
1335383086331: Sending UDP payload: 989
1335383086335: nonce 126 heard from src region (2,0)
1335383086336: inside handleClientRequest. Originator leader of region 2
1335383086336: discarding repeated requestCounter=5104136, but still send an ack back
1335383086336: Note down new request by adding requestCounter=5104136 to HashMap processedRequests
1335383086336: Make FirstLeg Ack regardless of new or already-processed requests
1335383086336: The leader sending a First Leg ack to originator client (which id = 5104)
1335383086336: inside sendPacket(Packet p)
1335383086337: Sending UDP payload: 446
1335383086410: Retrying PROC_REQUEST 11:3 (2,0)->(1,0)
1335383086411: Dispatching Atom PROC_REQUEST 11:3 (2,0)->(1,0)
1335383086412: mux: I got a CSM packet at a leader 

1335383086413: Sending UDP payload: 989
1335383086425: nonce 127 heard from src region (2,0)
1335383086513: DSM Layer: Request timed out, send failure PROC_REPLY 11:3 (1,0)->(2,0)
1335383086513: Dispatching Atom PROC_REPLY 11:3 (1,0)->(2,0)
1335383086514: mux: I got a CSM packet at a leader 

1335383086517: Sending UDP payload: 989
1335383086528: Received PROC_REPLY 11:3 (1,0)->(2,0), handing to UserApp
1335383086528: inside handleDSMReply. Now back in originator leader of region 2
1335383086528: DSM layer timed out, don't log dsm layer latency stuff.
1335383086531: Originator Region=2's Leader (for Client=5120) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383086531: change leader replyCounter to: 29
1335383086535: reply packet contains the newest photo/success info from the remote region
1335383086536: inside sendReplies of replyCount = 511300029
1335383086536: =======================
1335383086536: inside sendReplyRepeatingRunnable for replyCount = 511300029
1335383086537: Leader about to send REPLY packet, number: 511300029 type: 15 Leader in region: (2,0) to Client nodID: 5120
1335383086537: I (the leader) was not the originator client (which id = 5120) so I use UDP to send packet back to my nonleader
1335383086537: inside sendPacket(Packet p)
1335383086538: === Finished one round of sending REPLY Packet =======
1335383086555: Sending UDP payload: 642
1335383086625: Received UDP payload: 625
1335383086627: mux: Inside mux Packet.CLIENT_REQUEST
1335383086627: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383086627: inside handleClientRequest. Originator leader of region 2
1335383086628: discarding repeated requestCounter=5104136, but still send an ack back
1335383086628: Note down new request by adding requestCounter=5104136 to HashMap processedRequests
1335383086628: Make FirstLeg Ack regardless of new or already-processed requests
1335383086628: The leader sending a First Leg ack to originator client (which id = 5104)
1335383086628: inside sendPacket(Packet p)
1335383086629: Sending UDP payload: 446
1335383086752: Received UDP payload: 3722
1335383086767: mux: GOT CSM_Msg
1335383086768: Received DUPLICATE PROC_REPLY 11:3 (1,0)->(2,0)
1335383086838: =======================
1335383086838: inside sendReplyRepeatingRunnable for replyCount = 511300029
1335383086838: Leader about to send REPLY packet, number: 511300029 type: 15 Leader in region: (2,0) to Client nodID: 5120
1335383086838: I (the leader) was not the originator client (which id = 5120) so I use UDP to send packet back to my nonleader
1335383086838: inside sendPacket(Packet p)
1335383086839: === Finished one round of sending REPLY Packet =======
1335383086840: Sending UDP payload: 642
1335383086922: inside sendPacket(Packet p)
1335383086924: Sending UDP payload: 446
1335383086929: Received UDP payload: 625
1335383086934: mux: Inside mux Packet.CLIENT_REQUEST
1335383086934: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383086934: inside handleClientRequest. Originator leader of region 2
1335383086935: discarding repeated requestCounter=5104136, but still send an ack back
1335383086935: Note down new request by adding requestCounter=5104136 to HashMap processedRequests
1335383086935: Make FirstLeg Ack regardless of new or already-processed requests
1335383086935: The leader sending a First Leg ack to originator client (which id = 5104)
1335383086936: inside sendPacket(Packet p)
1335383086938: Sending UDP payload: 446
1335383087018: Retrying PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087019: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087019: mux: I got a CSM packet at a leader 

1335383087021: Sending UDP payload: 989
1335383087022: nonce 129 heard from src region (2,0)
1335383087119: Retrying PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087120: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087121: mux: I got a CSM packet at a leader 

1335383087122: Sending UDP payload: 989
1335383087124: nonce 130 heard from src region (2,0)
1335383087139: =======================
1335383087139: inside sendReplyRepeatingRunnable for replyCount = 511300029
1335383087140: Leader about to send REPLY packet, number: 511300029 type: 15 Leader in region: (2,0) to Client nodID: 5120
1335383087140: I (the leader) was not the originator client (which id = 5120) so I use UDP to send packet back to my nonleader
1335383087148: inside sendPacket(Packet p)
1335383087149: === Finished one round of sending REPLY Packet =======
1335383087150: Sending UDP payload: 642
1335383087221: Retrying PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087221: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087222: mux: I got a CSM packet at a leader 

1335383087223: Sending UDP payload: 989
1335383087226: nonce 131 heard from src region (2,0)
1335383087304: .......... GPS onLocationChanged ...... 
1335383087305: Loc = Location[mProvider=gps,mTime=1335469488000,mLatitude=42.358254610758294,mLongitude=-71.09296269800612,mHasAltitude=true,mAltitude=-17.0,mHasSpeed=true,mSpeed=0.37764516,mHasBearing=true,mBearing=334.9874,mHasAccuracy=true,mAccuracy=20.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383087305: GPS x/long:-71.09296269800612, GPS y/lat: 42.358254610758294. Region width in x: 20.0
1335383087305: location PINPOINTS to region = 2.0, previous 2
1335383087305: Hysteresis is 0.0
1335383087305: stay at region 2
1335383087322: Retrying PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087323: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087323: mux: I got a CSM packet at a leader 

1335383087325: Sending UDP payload: 989
1335383087326: nonce 132 heard from src region (2,0)
1335383087423: Retrying PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087423: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087424: mux: I got a CSM packet at a leader 

1335383087425: Sending UDP payload: 989
1335383087433: nonce 133 heard from src region (2,0)
1335383087449: =======================
1335383087450: inside sendReplyRepeatingRunnable for replyCount = 511300029
1335383087450: Leader about to send REPLY packet, number: 511300029 type: 15 Leader in region: (2,0) to Client nodID: 5120
1335383087450: I (the leader) was not the originator client (which id = 5120) so I use UDP to send packet back to my nonleader
1335383087451: inside sendPacket(Packet p)
1335383087451: === Finished one round of sending REPLY Packet =======
1335383087458: Sending UDP payload: 642
1335383087524: Retrying PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087524: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087525: mux: I got a CSM packet at a leader 

1335383087526: Sending UDP payload: 989
1335383087529: nonce 134 heard from src region (2,0)
1335383087539: inside sendReplyTimeoutR
1335383087539: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300029
1335383087625: Retrying PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087626: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087626: mux: I got a CSM packet at a leader 

1335383087628: Sending UDP payload: 989
1335383087629: nonce 135 heard from src region (2,0)
1335383087727: Retrying PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087728: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087729: mux: I got a CSM packet at a leader 

1335383087733: Sending UDP payload: 989
1335383087734: nonce 136 heard from src region (2,0)
1335383087830: Retrying PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087831: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087832: mux: I got a CSM packet at a leader 

1335383087834: Sending UDP payload: 989
1335383087836: nonce 137 heard from src region (2,0)
1335383087932: Retrying PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087932: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(3,0)
1335383087933: mux: I got a CSM packet at a leader 

1335383087934: Sending UDP payload: 989
1335383087935: nonce 138 heard from src region (2,0)
1335383088034: Retrying PROC_REQUEST 11:0 (2,0)->(3,0)
1335383088035: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(3,0)
1335383088036: mux: I got a CSM packet at a leader 

1335383088040: Sending UDP payload: 989
1335383088051: nonce 139 heard from src region (2,0)
1335383088141: Retrying PROC_REQUEST 11:0 (2,0)->(3,0)
1335383088142: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(3,0)
1335383088143: mux: I got a CSM packet at a leader 

1335383088150: Sending UDP payload: 989
1335383088159: nonce 140 heard from src region (2,0)
1335383088192: Received UDP payload: 625
1335383088198: mux: Inside mux Packet.CLIENT_REQUEST
1335383088246: Retrying PROC_REQUEST 11:0 (2,0)->(3,0)
1335383088247: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(3,0)
1335383088247: mux: I got a CSM packet at a leader 

1335383088248: Sending UDP payload: 989
1335383088253: nonce 141 heard from src region (2,0)
1335383088279: Received UDP payload: 989
1335383088287: mux: GOT CSM_Msg
1335383088287: nonce 218 heard from src region (1,0)
1335383088348: Retrying PROC_REQUEST 11:0 (2,0)->(3,0)
1335383088348: Dispatching Atom PROC_REQUEST 11:0 (2,0)->(3,0)
1335383088348: mux: I got a CSM packet at a leader 

1335383088350: Sending UDP payload: 989
1335383088351: nonce 142 heard from src region (2,0)
1335383088380: Received UDP payload: 446
1335383088382: mux: Inside Packet.SERVER_REPLY
1335383088382: mux: Ignoring SERVER_REPLY since it's not for me  5113
1335383088421: Received UDP payload: 3722
1335383088425: mux: GOT CSM_Msg
1335383088425: nonce 219 heard from src region (1,0)
1335383088449: DSM Layer: Request timed out, send failure PROC_REPLY 11:0 (3,0)->(2,0)
1335383088450: Dispatching Atom PROC_REPLY 11:0 (3,0)->(2,0)
1335383088450: mux: I got a CSM packet at a leader 

1335383088452: Sending UDP payload: 989
1335383088453: Received PROC_REPLY 11:0 (3,0)->(2,0), handing to UserApp
1335383088453: inside handleDSMReply. Now back in originator leader of region 2
1335383088454: DSM layer timed out, don't log dsm layer latency stuff.
1335383088455: Originator Region=2's Leader (for Client=5104) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383088455: change leader replyCounter to: 30
1335383088455: reply packet contains the newest photo/success info from the remote region
1335383088455: inside sendReplies of replyCount = 511300030
1335383088456: =======================
1335383088456: inside sendReplyRepeatingRunnable for replyCount = 511300030
1335383088456: Leader about to send REPLY packet, number: 511300030 type: 15 Leader in region: (2,0) to Client nodID: 5104
1335383088456: I (the leader) was not the originator client (which id = 5104) so I use UDP to send packet back to my nonleader
1335383088456: inside sendPacket(Packet p)
1335383088456: === Finished one round of sending REPLY Packet =======
1335383088458: Sending UDP payload: 642
1335383088603: Received UDP payload: 446
1335383088661: Received UDP payload: 3375
1335383088667: mux: Inside Packet.SERVER_REPLY
1335383088668: mux: Ignoring SERVER_REPLY since it's not for me  5113
1335383088688: Received UDP payload: 446
1335383088705: mux: Inside mux Packet.CLIENT_REQUEST
1335383088741: Received UDP payload: 3375
1335383088751: mux: Inside Packet.SERVER_REPLY
1335383088751: mux: Ignoring SERVER_REPLY since it's not for me  5113
1335383088757: =======================
1335383088757: inside sendReplyRepeatingRunnable for replyCount = 511300030
1335383088758: Leader about to send REPLY packet, number: 511300030 type: 15 Leader in region: (2,0) to Client nodID: 5104
1335383088758: I (the leader) was not the originator client (which id = 5104) so I use UDP to send packet back to my nonleader
1335383088758: inside sendPacket(Packet p)
1335383088758: === Finished one round of sending REPLY Packet =======
1335383088760: Sending UDP payload: 642
1335383089032: Received UDP payload: 446
1335383089035: mux: Inside mux Packet.CLIENT_REQUEST
1335383089035: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383089036: inside handleClientRequest. Originator leader of region 2
1335383089036: got new request, requestCounter = 5120064
1335383089036: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300029
1335383089036: Yay the last leg succeeded. Removing reply runnables ...
1335383089037: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300029
1335383089037: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300029
1335383089037: do not send ack for received final_leg_ack
1335383089059: =======================
1335383089059: inside sendReplyRepeatingRunnable for replyCount = 511300030
1335383089059: Leader about to send REPLY packet, number: 511300030 type: 15 Leader in region: (2,0) to Client nodID: 5104
1335383089059: I (the leader) was not the originator client (which id = 5104) so I use UDP to send packet back to my nonleader
1335383089060: inside sendPacket(Packet p)
1335383089060: === Finished one round of sending REPLY Packet =======
1335383089061: Sending UDP payload: 642
1335383089154: canPressButton = TRUE
1335383089155: areButtonsEnabled --> false
1335383089155: disabling buttons ...
1335383089156: took picture disableButtonsR
1335383089156: areButtonsEnabled --> false
1335383089202: reg=2 id=5113 state=2 regionWidth=20.0 hyst=0.0 takeNum=3 takeCamGood=2 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=66% getNum=1 getGood=1 getBad=0 getTimedout=0 getPercent=100%
1335383089202: Clicked take picture button ..
1335383089360: =======================
1335383089360: inside sendReplyRepeatingRunnable for replyCount = 511300030
1335383089361: Leader about to send REPLY packet, number: 511300030 type: 15 Leader in region: (2,0) to Client nodID: 5104
1335383089361: I (the leader) was not the originator client (which id = 5104) so I use UDP to send packet back to my nonleader
1335383089361: inside sendPacket(Packet p)
1335383089361: === Finished one round of sending REPLY Packet =======
1335383089363: Sending UDP payload: 642
1335383089457: inside sendReplyTimeoutR
1335383089457: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300030
1335383089927: inside HandlePictureStorage onPictureTaken()
1335383089929: reg=2 id=5113 state=2 regionWidth=20.0 hyst=0.0 takeNum=3 takeCamGood=3 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=66% getNum=1 getGood=1 getBad=0 getTimedout=0 getPercent=100%
1335383090384: Picture successfully taken, ORIG BYTE LENGTH = 1896890
1335383090651: Our new height x width: 240 x 320
1335383090651: Show photo from handle my camera take
1335383090652: ** Client making NEWly TAKEN photo PACKET to send to leader **
1335383090652: change local requestCounter to 8
1335383090665: BYTE SIZE AFTER COMPRESSION: 5068
1335383090666: Client about to send CLIENT_UPLOAD_PHOTO packet, REQUEST: 5113008 Client in region: 2 Client nodID: 5113
1335383090725: .......... GPS onLocationChanged ...... 
1335383090729: ----------------------------
1335383090730: inside sendRequestPacketRepeatingRunnable for requestCount = 5113008
1335383090730: I'm a leader, my requesting photos packet going to mux directly
1335383090749: --- Finished one round of sending REQUEST Packet ---------
1335383090726: Loc = Location[mProvider=gps,mTime=1335469491000,mLatitude=42.35826739350417,mLongitude=-71.0929660934117,mHasAltitude=true,mAltitude=-22.0,mHasSpeed=true,mSpeed=0.41626292,mHasBearing=true,mBearing=341.0142,mHasAccuracy=true,mAccuracy=10.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383090727: GPS x/long:-71.0929660934117, GPS y/lat: 42.35826739350417. Region width in x: 20.0
1335383090727: location PINPOINTS to region = 2.0, previous 2
1335383090727: Hysteresis is 0.0
1335383090728: stay at region 2
1335383090730: mux: Inside mux Packet.CLIENT_REQUEST
1335383090731: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383090796: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335383090731: inside handleClientRequest. Originator leader of region 2
1335383090731: got new request, requestCounter = 5113008
1335383090731: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335383090731: Sending PROC_REQUEST 10:22 (2,0)->(2,0)
1335383090732: Dispatching Atom PROC_REQUEST 10:22 (2,0)->(2,0)
1335383090733: mux: I got a CSM packet at a leader 

1335383090797: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335383090799: I'm a leader and I successfully saved my client's new photo
1335383090799: now showing in UI the new photo I just saved ... 
1335383090800: the photo length: 5068
1335383090870: end of server show photo aside %%%%%%%%%
1335383090732: Note down new request by adding requestCounter=5113008 to HashMap processedRequests
1335383090732: Make FirstLeg Ack regardless of new or already-processed requests
1335383090732: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5113)
1335383090735: Sending UDP payload: 6079
1335383090737: removed replies before id 22 from sentReplies of size 0
1335383090737: inside handleDSMRequest. At requests's remote leader of region 2
1335383090751: Inside UPLOAD_PHOTO!!
1335383090755: my_gpinfo.isSuccess is now (should be true): true
1335383090755: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335383090761: Received PROC_REQUEST 10:22 (2,0)->(2,0), replying PROC_REPLY 10:22 (2,0)->(2,0)
1335383090762: Dispatching Atom PROC_REPLY 10:22 (2,0)->(2,0)
1335383090762: mux: I got a CSM packet at a leader 

1335383090881: Client received Packet.CLIENT_UPLOAD_PHOTO_ACK
1335383090882: disabling progressdialog due to successful new photo upload
1335383090882: Inside _enableButtons
1335383090882: areButtonsEnabled --> true
1335383090883: send final leg ack regardless of new or already-processed reply
1335383090883: inside finalLegAck: change requestCounter to 9
1335383090883: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5113009 Client in region: (2,0) Client nodID: 5113
1335383090884: I'm a leader client, my final_leg packet going to mux directly
1335383090886: new client_upload_photo_ack reply with replyCounter 511300031
1335383090886: note down new reply by adding replyCounter=511300031 to HashMap processedReplies
1335383090886: leader upload new photo latency = 1335383090881
1335383090886: = leader upload start 0 ~ stop 1335383090881
1335383090889: reg=2 id=5113 state=2 regionWidth=20.0 hyst=0.0 takeNum=3 takeCamGood=3 takeGoodSave=3 takeBad=0 takeTimedout=0 takePercent=100% getNum=1 getGood=1 getBad=0 getTimedout=0 getPercent=100%
1335383090889: SUCCESS Client now knows saving photo on its leader succeeded
1335383090766: Sending UDP payload: 989
1335383090769: Received PROC_REPLY 10:22 (2,0)->(2,0), handing to UserApp
1335383090769: inside handleDSMReply. Now back in originator leader of region 2
1335383090769: DSM layer: Going to and from remote region took latency = 38
1335383090769: DSM layer: orig leader sent packet at 1335383090731 ~ received reply from remote leader at 1335383090769
1335383090771: Originator Region=2's Leader (for Client=5113) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383090782: change leader replyCounter to: 31
1335383090782: reply packet contains the success info for UPLOAD_PHOTO
1335383090782: inside sendReplies of replyCount = 511300031
1335383090783: =======================
1335383090783: inside sendReplyRepeatingRunnable for replyCount = 511300031
1335383090783: Leader about to send REPLY packet, number: 511300031 type: 16 Leader in region: (2,0) to Client nodID: 5113
1335383090783: I (the leader) was also the originator client (id = 5113) so I hand the packet to my mux directly, without UDP
1335383090784: === Finished one round of sending REPLY Packet =======
1335383090884: mux: Inside mux Packet.CLIENT_REQUEST
1335383090884: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383090884: inside handleClientRequest. Originator leader of region 2
1335383090885: got new request, requestCounter = 5113009
1335383090885: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300031
1335383090885: Yay the last leg succeeded. Removing reply runnables ...
1335383090885: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300031
1335383090885: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300031
1335383090885: do not send ack for received final_leg_ack
1335383091922: inside sendPacket(Packet p)
1335383091924: Sending UDP payload: 446
1335383092318: .......... GPS onLocationChanged ...... 
1335383092319: Loc = Location[mProvider=gps,mTime=1335469493000,mLatitude=42.35827711558645,mLongitude=-71.09296776434111,mHasAltitude=true,mAltitude=-24.0,mHasSpeed=true,mSpeed=0.4262793,mHasBearing=true,mBearing=345.71185,mHasAccuracy=true,mAccuracy=15.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383092319: GPS x/long:-71.09296776434111, GPS y/lat: 42.35827711558645. Region width in x: 20.0
1335383092319: location PINPOINTS to region = 2.0, previous 2
1335383092319: Hysteresis is 0.0
1335383092320: stay at region 2
1335383093187: Received UDP payload: 2553
1335383093237: mux: Inside mux Packet.CLIENT_REQUEST
1335383093238: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383093238: inside handleClientRequest. Originator leader of region 2
1335383093238: got new request, requestCounter = 5102046
1335383093242: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335383093243: Sending PROC_REQUEST 10:23 (2,0)->(2,0)
1335383093243: Dispatching Atom PROC_REQUEST 10:23 (2,0)->(2,0)
1335383093244: mux: I got a CSM packet at a leader 

1335383093326: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335383093327: I'm a leader and I successfully saved my client's new photo
1335383093327: now showing in UI the new photo I just saved ... 
1335383093328: the photo length: 1906
1335383093455: end of server show photo aside %%%%%%%%%
1335383093243: Note down new request by adding requestCounter=5102046 to HashMap processedRequests
1335383093243: Make FirstLeg Ack regardless of new or already-processed requests
1335383093243: The leader sending a First Leg ack to originator client (which id = 5102)
1335383093244: inside sendPacket(Packet p)
1335383093245: Sending UDP payload: 2917
1335383093246: removed replies before id 23 from sentReplies of size 0
1335383093246: inside handleDSMRequest. At requests's remote leader of region 2
1335383093252: Inside UPLOAD_PHOTO!!
1335383093263: my_gpinfo.isSuccess is now (should be true): true
1335383093263: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335383093294: Received UDP payload: 446
1335383093299: Received PROC_REQUEST 10:23 (2,0)->(2,0), replying PROC_REPLY 10:23 (2,0)->(2,0)
1335383093300: Dispatching Atom PROC_REPLY 10:23 (2,0)->(2,0)
1335383093324: mux: I got a CSM packet at a leader 

1335383093314: Sending UDP payload: 446
1335383093325: Sending UDP payload: 989
1335383093332: Received PROC_REPLY 10:23 (2,0)->(2,0), handing to UserApp
1335383093332: inside handleDSMReply. Now back in originator leader of region 2
1335383093332: DSM layer: Going to and from remote region took latency = 90
1335383093333: DSM layer: orig leader sent packet at 1335383093242 ~ received reply from remote leader at 1335383093332
1335383093352: Originator Region=2's Leader (for Client=5102) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383093353: change leader replyCounter to: 32
1335383093353: reply packet contains the success info for UPLOAD_PHOTO
1335383093353: inside sendReplies of replyCount = 511300032
1335383093353: =======================
1335383093353: inside sendReplyRepeatingRunnable for replyCount = 511300032
1335383093353: Leader about to send REPLY packet, number: 511300032 type: 16 Leader in region: (2,0) to Client nodID: 5102
1335383093353: I (the leader) was not the originator client (which id = 5102) so I use UDP to send packet back to my nonleader
1335383093354: inside sendPacket(Packet p)
1335383093354: === Finished one round of sending REPLY Packet =======
1335383093355: Sending UDP payload: 642
1335383093653: =======================
1335383093654: inside sendReplyRepeatingRunnable for replyCount = 511300032
1335383093654: Leader about to send REPLY packet, number: 511300032 type: 16 Leader in region: (2,0) to Client nodID: 5102
1335383093655: I (the leader) was not the originator client (which id = 5102) so I use UDP to send packet back to my nonleader
1335383093655: inside sendPacket(Packet p)
1335383093655: === Finished one round of sending REPLY Packet =======
1335383093666: Sending UDP payload: 642
1335383093825: Received UDP payload: 446
1335383093830: mux: Inside mux Packet.CLIENT_REQUEST
1335383093831: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383093831: inside handleClientRequest. Originator leader of region 2
1335383093831: got new request, requestCounter = 5102047
1335383093831: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300032
1335383093832: Yay the last leg succeeded. Removing reply runnables ...
1335383093832: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300032
1335383093833: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300032
1335383093833: do not send ack for received final_leg_ack
1335383093846: Received UDP payload: 446
1335383093859: mux: Inside mux Packet.CLIENT_REQUEST
1335383093860: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383093860: inside handleClientRequest. Originator leader of region 2
1335383093860: got new request, requestCounter = 5102048
1335383093861: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300032
1335383093861: Yay the last leg succeeded. Removing reply runnables ...
1335383093861: the key's associated reply_REPEATING_ RMap runnable ALREADY deleted for replyCount 511300032
1335383093861: the key's associated reply_TIMEOUT_RMap runnable ALREADY deleted for replyCount 511300032
1335383093862: do not send ack for received final_leg_ack
1335383093940: Received UDP payload: 989
1335383093953: mux: GOT CSM_Msg
1335383093953: nonce 220 heard from src region (1,0)
1335383094162: Received UDP payload: 446
1335383094216: mux: Inside Packet.SERVER_REPLY
1335383094217: mux: Ignoring SERVER_REPLY since it's not for me  5113
1335383094583: Received UDP payload: 625
1335383094594: mux: Inside mux Packet.CLIENT_REQUEST
1335383094950: Received UDP payload: 625
1335383094987: mux: Inside mux Packet.CLIENT_REQUEST
1335383094999: Received UDP payload: 989
1335383095023: mux: GOT CSM_Msg
1335383095023: nonce 223 heard from src region (1,0)
1335383095063: Received UDP payload: 989
1335383095068: mux: GOT CSM_Msg
1335383095069: nonce 224 heard from src region (1,0)
1335383095140: Received UDP payload: 625
1335383095142: mux: Inside mux Packet.CLIENT_REQUEST
1335383095142: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383095142: inside handleClientRequest. Originator leader of region 2
1335383095143: got new request, requestCounter = 5117084
1335383095143: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383095144: Sending to region: 1
1335383095144: Sending PROC_REQUEST 11:4 (2,0)->(1,0)
1335383095146: Dispatching Atom PROC_REQUEST 11:4 (2,0)->(1,0)
1335383095147: mux: I got a CSM packet at a leader 

1335383095146: Note down new request by adding requestCounter=5117084 to HashMap processedRequests
1335383095146: Make FirstLeg Ack regardless of new or already-processed requests
1335383095146: The leader sending a First Leg ack to originator client (which id = 5117)
1335383095146: inside sendPacket(Packet p)
1335383095148: Sending UDP payload: 989
1335383095153: nonce 148 heard from src region (2,0)
1335383095157: Sending UDP payload: 446
1335383095271: Received UDP payload: 989
1335383095285: mux: GOT CSM_Msg
1335383095285: nonce 226 heard from src region (1,0)
1335383095373: Received UDP payload: 989
1335383095394: mux: GOT CSM_Msg
1335383095395: nonce 227 heard from src region (1,0)
1335383095581: Received UDP payload: 989
1335383095592: mux: GOT CSM_Msg
1335383095592: nonce 229 heard from src region (1,0)
1335383095682: canPressButton = TRUE
1335383095683: areButtonsEnabled --> false 
1335383095683: get picture disableButtonsR
1335383095684: areButtonsEnabled --> false
1335383095724: reg=2 id=5113 state=2 regionWidth=20.0 hyst=0.0 takeNum=3 takeCamGood=3 takeGoodSave=3 takeBad=0 takeTimedout=0 takePercent=100% getNum=2 getGood=1 getBad=0 getTimedout=0 getPercent=50%
1335383095724: ** Client making GET photo PACKET to send to the leader. Requesting for region: 2 **
1335383095725: change local requestCounter to 10
1335383095725: Client about to send CLIENT_DOWNLOAD_PHOTO packet, REQUEST: 5113010 Client in region: 2 Client nodID: 5113
1335383095692: Received UDP payload: 989
1335383095698: mux: GOT CSM_Msg
1335383095698: nonce 230 heard from src region (1,0)
1335383095833: ----------------------------
1335383095834: inside sendRequestPacketRepeatingRunnable for requestCount = 5113010
1335383095834: I'm a leader, my requesting photos packet going to mux directly
1335383095849: --- Finished one round of sending REQUEST Packet ---------
1335383095786: Received UDP payload: 989
1335383095792: mux: GOT CSM_Msg
1335383095792: nonce 231 heard from src region (1,0)
1335383095835: mux: Inside mux Packet.CLIENT_REQUEST
1335383095835: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383095925: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335383095835: inside handleClientRequest. Originator leader of region 2
1335383095835: got new request, requestCounter = 5113010
1335383095835: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383095845: Sending to region: 2
1335383095846: Sending PROC_REQUEST 11:24 (2,0)->(2,0)
1335383095846: Dispatching Atom PROC_REQUEST 11:24 (2,0)->(2,0)
1335383095847: mux: I got a CSM packet at a leader 

1335383095846: Note down new request by adding requestCounter=5113010 to HashMap processedRequests
1335383095846: Make FirstLeg Ack regardless of new or already-processed requests
1335383095846: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5113)
1335383095848: Sending UDP payload: 989
1335383095850: removed replies before id 24 from sentReplies of size 0
1335383095850: inside handleDSMRequest. At requests's remote leader of region 2
1335383095851: INSIDE SERVER_GET_PHOTO!!!
1335383095856: dst_region == src_region = 2
1335383095856:  1 self to self atomRequest
1335383095857: Received PROC_REQUEST 11:24 (2,0)->(2,0), replying PROC_REPLY 11:24 (2,0)->(2,0)
1335383095857: Dispatching Atom PROC_REPLY 11:24 (2,0)->(2,0)
1335383095858: mux: I got a CSM packet at a leader 

1335383095928: Client received Packet.CLIENT_SHOW_REMOTEPHOTOS. Client requested for a photo in a remote region and this is the reply
1335383095928: disabling progressdialog due to successful new photo get
1335383095928: Inside _enableButtons
1335383095929: areButtonsEnabled --> true
1335383095929: send final leg ack regardless of new or already-processed reply
1335383095929: inside finalLegAck: change requestCounter to 11
1335383095929: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5113011 Client in region: (2,0) Client nodID: 5113
1335383095930: I'm a leader client, my final_leg packet going to mux directly
1335383095944: new client_show_remotephoto reply with replyCounter 511300033
1335383095945: note down new reply by adding replyCounter=511300033 to HashMap processedReplies
1335383095945: leader download remote photo latency = 93
1335383095946: = leader download start 1335383095835 ~ stop 1335383095928
1335383095948: reg=2 id=5113 state=2 regionWidth=20.0 hyst=0.0 takeNum=3 takeCamGood=3 takeGoodSave=3 takeBad=0 takeTimedout=0 takePercent=100% getNum=2 getGood=2 getBad=0 getTimedout=0 getPercent=100%
1335383095949: Success! Client getting photo from remote region, showing photo...
1335383095949: Remote photo's length: 1906
1335383095859: Sending UDP payload: 2917
1335383095861: Received PROC_REPLY 11:24 (2,0)->(2,0), handing to UserApp
1335383095861: inside handleDSMReply. Now back in originator leader of region 2
1335383095862: DSM layer: Going to and from remote region took latency = 16
1335383095862: DSM layer: orig leader sent packet at 1335383095845 ~ received reply from remote leader at 1335383095861
1335383095877: Originator Region=2's Leader (for Client=5113) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383095877: change leader replyCounter to: 33
1335383095877: reply packet contains the newest photo/success info from the remote region
1335383095878: inside sendReplies of replyCount = 511300033
1335383095878: =======================
1335383095878: inside sendReplyRepeatingRunnable for replyCount = 511300033
1335383095878: Leader about to send REPLY packet, number: 511300033 type: 15 Leader in region: (2,0) to Client nodID: 5113
1335383095878: I (the leader) was also the originator client (id = 5113) so I hand the packet to my mux directly, without UDP
1335383095879: === Finished one round of sending REPLY Packet =======
1335383095886: Received UDP payload: 989
1335383095889: mux: GOT CSM_Msg
1335383095890: nonce 232 heard from src region (1,0)
1335383095920: Retrying PROC_REQUEST 11:4 (2,0)->(1,0)
1335383095920: Dispatching Atom PROC_REQUEST 11:4 (2,0)->(1,0)
1335383095921: mux: I got a CSM packet at a leader 

1335383095923: Sending UDP payload: 989
1335383095924: nonce 151 heard from src region (2,0)
1335383095931: mux: Inside mux Packet.CLIENT_REQUEST
1335383095931: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383095931: inside handleClientRequest. Originator leader of region 2
1335383095932: got new request, requestCounter = 5113011
1335383095932: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 511300033
1335383095932: Yay the last leg succeeded. Removing reply runnables ...
1335383095932: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300033
1335383095932: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 511300033
1335383095934: do not send ack for received final_leg_ack
1335383095989: Received UDP payload: 989
1335383095996: mux: GOT CSM_Msg
1335383095996: nonce 233 heard from src region (1,0)
1335383096021: Retrying PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096022: Dispatching Atom PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096023: mux: I got a CSM packet at a leader 

1335383096025: Sending UDP payload: 989
1335383096028: nonce 152 heard from src region (2,0)
1335383096092: Received UDP payload: 989
1335383096109: mux: GOT CSM_Msg
1335383096110: nonce 234 heard from src region (1,0)
1335383096122: Retrying PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096122: Dispatching Atom PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096122: mux: I got a CSM packet at a leader 

1335383096124: Sending UDP payload: 989
1335383096124: nonce 153 heard from src region (2,0)
1335383096223: Retrying PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096223: Dispatching Atom PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096224: mux: I got a CSM packet at a leader 

1335383096225: Sending UDP payload: 989
1335383096228: nonce 154 heard from src region (2,0)
1335383096249: Received UDP payload: 989
1335383096257: mux: GOT CSM_Msg
1335383096260: nonce 235 heard from src region (1,0)
1335383096307: Received UDP payload: 989
1335383096318: mux: GOT CSM_Msg
1335383096319: nonce 236 heard from src region (0,0)
1335383096319: Received UDP payload: 642
1335383096324: Retrying PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096325: Dispatching Atom PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096325: mux: I got a CSM packet at a leader 

1335383096350: Sending UDP payload: 989
1335383096351: nonce 155 heard from src region (2,0)
1335383096352: mux: Inside Packet.SERVER_REPLY
1335383096352: mux: Ignoring SERVER_REPLY since it's not for me  5113
1335383096368: Received UDP payload: 446
1335383096370: mux: Inside mux Packet.CLIENT_REQUEST
1335383096425: Retrying PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096425: Dispatching Atom PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096429: mux: I got a CSM packet at a leader 

1335383096443: Sending UDP payload: 989
1335383096444: nonce 156 heard from src region (2,0)
1335383096530: Retrying PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096531: Dispatching Atom PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096531: mux: I got a CSM packet at a leader 

1335383096532: Sending UDP payload: 989
1335383096547: nonce 157 heard from src region (2,0)
1335383096632: Retrying PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096632: Dispatching Atom PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096633: mux: I got a CSM packet at a leader 

1335383096634: Sending UDP payload: 989
1335383096635: nonce 158 heard from src region (2,0)
1335383096734: Retrying PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096735: Dispatching Atom PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096736: mux: I got a CSM packet at a leader 

1335383096739: Sending UDP payload: 989
1335383096750: nonce 159 heard from src region (2,0)
1335383096839: Retrying PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096840: Dispatching Atom PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096841: mux: I got a CSM packet at a leader 

1335383096842: Sending UDP payload: 989
1335383096848: nonce 160 heard from src region (2,0)
1335383096923: inside sendPacket(Packet p)
1335383096924: Sending UDP payload: 446
1335383096942: Retrying PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096942: Dispatching Atom PROC_REQUEST 11:4 (2,0)->(1,0)
1335383096943: mux: I got a CSM packet at a leader 

1335383096944: Sending UDP payload: 989
1335383096952: nonce 161 heard from src region (2,0)
1335383097043: Retrying PROC_REQUEST 11:4 (2,0)->(1,0)
1335383097044: Dispatching Atom PROC_REQUEST 11:4 (2,0)->(1,0)
1335383097044: mux: I got a CSM packet at a leader 

1335383097046: Sending UDP payload: 989
1335383097047: nonce 162 heard from src region (2,0)
1335383097145: Retrying PROC_REQUEST 11:4 (2,0)->(1,0)
1335383097146: Dispatching Atom PROC_REQUEST 11:4 (2,0)->(1,0)
1335383097147: mux: I got a CSM packet at a leader 

1335383097150: Sending UDP payload: 989
1335383097152: nonce 163 heard from src region (2,0)
1335383097248: DSM Layer: Request timed out, send failure PROC_REPLY 11:4 (1,0)->(2,0)
1335383097248: Dispatching Atom PROC_REPLY 11:4 (1,0)->(2,0)
1335383097249: mux: I got a CSM packet at a leader 

1335383097251: Sending UDP payload: 989
1335383097252: Received PROC_REPLY 11:4 (1,0)->(2,0), handing to UserApp
1335383097252: inside handleDSMReply. Now back in originator leader of region 2
1335383097253: DSM layer timed out, don't log dsm layer latency stuff.
1335383097254: Originator Region=2's Leader (for Client=5117) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383097254: change leader replyCounter to: 34
1335383097254: reply packet contains the newest photo/success info from the remote region
1335383097254: inside sendReplies of replyCount = 511300034
1335383097254: =======================
1335383097254: inside sendReplyRepeatingRunnable for replyCount = 511300034
1335383097255: Leader about to send REPLY packet, number: 511300034 type: 15 Leader in region: (2,0) to Client nodID: 5117
1335383097255: I (the leader) was not the originator client (which id = 5117) so I use UDP to send packet back to my nonleader
1335383097255: inside sendPacket(Packet p)
1335383097255: === Finished one round of sending REPLY Packet =======
1335383097281: Sending UDP payload: 642
1335383097556: =======================
1335383097557: inside sendReplyRepeatingRunnable for replyCount = 511300034
1335383097558: Leader about to send REPLY packet, number: 511300034 type: 15 Leader in region: (2,0) to Client nodID: 5117
1335383097563: I (the leader) was not the originator client (which id = 5117) so I use UDP to send packet back to my nonleader
1335383097566: inside sendPacket(Packet p)
1335383097572: Sending UDP payload: 642
1335383097573: === Finished one round of sending REPLY Packet =======
1335383097874: =======================
1335383097879: inside sendReplyRepeatingRunnable for replyCount = 511300034
1335383097880: Leader about to send REPLY packet, number: 511300034 type: 15 Leader in region: (2,0) to Client nodID: 5117
1335383097881: I (the leader) was not the originator client (which id = 5117) so I use UDP to send packet back to my nonleader
1335383097882: inside sendPacket(Packet p)
1335383097891: Sending UDP payload: 642
1335383097892: === Finished one round of sending REPLY Packet =======
1335383098193: =======================
1335383098194: inside sendReplyRepeatingRunnable for replyCount = 511300034
1335383098200: Leader about to send REPLY packet, number: 511300034 type: 15 Leader in region: (2,0) to Client nodID: 5117
1335383098201: I (the leader) was not the originator client (which id = 5117) so I use UDP to send packet back to my nonleader
1335383098202: inside sendPacket(Packet p)
1335383098209: === Finished one round of sending REPLY Packet =======
1335383098210: Sending UDP payload: 642
1335383098253: Received UDP payload: 446
1335383098256: heard LEADER_REQUEST from node 5104, responding LEADER_REPLY
1335383098285: Received UDP payload: 446
1335383098332: Received UDP payload: 463
1335383098349: Received UDP payload: 446
1335383098353: Received UDP payload: 446
1335383098417: Received UDP payload: 625
1335383098419: mux: Inside mux Packet.CLIENT_REQUEST
1335383098420: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383098420: inside handleClientRequest. Originator leader of region 2
1335383098420: got new request, requestCounter = 5102049
1335383098420: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335383098421: Sending to region: 3
1335383098421: Sending PROC_REQUEST 11:1 (2,0)->(3,0)
1335383098422: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(3,0)
1335383098427: mux: I got a CSM packet at a leader 

1335383098426: Note down new request by adding requestCounter=5102049 to HashMap processedRequests
1335383098426: Make FirstLeg Ack regardless of new or already-processed requests
1335383098426: The leader sending a First Leg ack to originator client (which id = 5102)
1335383098426: inside sendPacket(Packet p)
1335383098446: Sending UDP payload: 989
1335383098451: nonce 165 heard from src region (2,0)
1335383098452: Sending UDP payload: 446
1335383098556: Received UDP payload: 446
1335383098560: inside sendPacket(Packet p)
1335383098588: Sending UDP payload: 32914
1335383098589: inside sendReplyTimeoutR
1335383098589: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300034
1335383098590: heard LEADER_REQUEST from node 5104, responding LEADER_REPLY
1335383098724: Received UDP payload: 625
1335383098727: mux: Inside mux Packet.CLIENT_REQUEST
1335383098727: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383098727: inside handleClientRequest. Originator leader of region 2
1335383098728: discarding repeated requestCounter=5102049, but still send an ack back
1335383098728: Note down new request by adding requestCounter=5102049 to HashMap processedRequests
1335383098728: Make FirstLeg Ack regardless of new or already-processed requests
1335383098728: The leader sending a First Leg ack to originator client (which id = 5102)
1335383098728: inside sendPacket(Packet p)
1335383098729: Sending UDP payload: 446
1335383098760: inside sendPacket(Packet p)
1335383098762: Sending UDP payload: 33189
1335383098857: Received UDP payload: 446
1335383098861: heard LEADER_REQUEST from node 5104, responding LEADER_REPLY
1335383099056: inside sendPacket(Packet p)
1335383099064: Sending UDP payload: 33189
1335383099074: Received UDP payload: 625
1335383099076: mux: Inside mux Packet.CLIENT_REQUEST
1335383099076: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383099076: inside handleClientRequest. Originator leader of region 2
1335383099077: discarding repeated requestCounter=5102049, but still send an ack back
1335383099077: Note down new request by adding requestCounter=5102049 to HashMap processedRequests
1335383099077: Make FirstLeg Ack regardless of new or already-processed requests
1335383099077: The leader sending a First Leg ack to originator client (which id = 5102)
1335383099077: inside sendPacket(Packet p)
1335383099081: Sending UDP payload: 446
1335383099166: Retrying PROC_REQUEST 11:1 (2,0)->(3,0)
1335383099166: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(3,0)
1335383099167: mux: I got a CSM packet at a leader 

1335383099168: Sending UDP payload: 989
1335383099169: nonce 166 heard from src region (2,0)
1335383099268: Retrying PROC_REQUEST 11:1 (2,0)->(3,0)
1335383099268: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(3,0)
1335383099269: mux: I got a CSM packet at a leader 

1335383099272: Sending UDP payload: 989
1335383099277: nonce 167 heard from src region (2,0)
1335383099321: .......... GPS onLocationChanged ...... 
1335383099322: Loc = Location[mProvider=gps,mTime=1335469500000,mLatitude=42.358289921967966,mLongitude=-71.09297515625366,mHasAltitude=true,mAltitude=-16.0,mHasSpeed=true,mSpeed=0.11985454,mHasBearing=true,mBearing=318.30716,mHasAccuracy=true,mAccuracy=15.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383099323: GPS x/long:-71.09297515625366, GPS y/lat: 42.358289921967966. Region width in x: 20.0
1335383099323: location PINPOINTS to region = 2.0, previous 2
1335383099323: Hysteresis is 0.0
1335383099323: stay at region 2
1335383099341: Received UDP payload: 446
1335383099344: heard LEADER_REQUEST from node 5104, responding LEADER_REPLY
1335383099519: inside sendPacket(Packet p)
1335383099548: Sending UDP payload: 33189
1335383099549: Received UDP payload: 625
1335383099552: mux: Inside mux Packet.CLIENT_REQUEST
1335383099555: Retrying PROC_REQUEST 11:1 (2,0)->(3,0)
1335383099555: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(3,0)
1335383099556: mux: I got a CSM packet at a leader 

1335383099557: Sending UDP payload: 989
1335383099558: nonce 168 heard from src region (2,0)
1335383099657: Retrying PROC_REQUEST 11:1 (2,0)->(3,0)
1335383099657: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(3,0)
1335383099657: mux: I got a CSM packet at a leader 

1335383099659: Sending UDP payload: 989
1335383099660: nonce 169 heard from src region (2,0)
1335383099758: Retrying PROC_REQUEST 11:1 (2,0)->(3,0)
1335383099759: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(3,0)
1335383099760: mux: I got a CSM packet at a leader 

1335383099763: Sending UDP payload: 989
1335383099765: nonce 170 heard from src region (2,0)
1335383099779: Received UDP payload: 625
1335383099785: mux: Inside mux Packet.CLIENT_REQUEST
1335383099860: Retrying PROC_REQUEST 11:1 (2,0)->(3,0)
1335383099861: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(3,0)
1335383099861: mux: I got a CSM packet at a leader 

1335383099862: Sending UDP payload: 989
1335383099864: nonce 171 heard from src region (2,0)
1335383099925: Received UDP payload: 446
1335383099929: heard LEADER_REQUEST from node 5105, responding LEADER_REPLY
1335383100093: inside sendPacket(Packet p)
1335383100110: Sending UDP payload: 33189
1335383100118: Retrying PROC_REQUEST 11:1 (2,0)->(3,0)
1335383100118: Received UDP payload: 625
1335383100123: mux: Inside mux Packet.CLIENT_REQUEST
1335383100125: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(3,0)
1335383100126: mux: I got a CSM packet at a leader 

1335383100127: Sending UDP payload: 989
1335383100128: nonce 172 heard from src region (2,0)
1335383100222: Received UDP payload: 446
1335383100225: heard LEADER_REQUEST from node 5105, responding LEADER_REPLY
1335383100385: inside sendPacket(Packet p)
1335383100392: Sending UDP payload: 33189
1335383100394: Retrying PROC_REQUEST 11:1 (2,0)->(3,0)
1335383100398: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(3,0)
1335383100398: mux: I got a CSM packet at a leader 

1335383100399: Sending UDP payload: 989
1335383100400: nonce 173 heard from src region (2,0)
1335383100501: Retrying PROC_REQUEST 11:1 (2,0)->(3,0)
1335383100501: Dispatching Atom PROC_REQUEST 11:1 (2,0)->(3,0)
1335383100502: mux: I got a CSM packet at a leader 

1335383100503: Sending UDP payload: 989
1335383100504: nonce 174 heard from src region (2,0)
1335383100533: Received UDP payload: 446
1335383100546: heard LEADER_REQUEST from node 5105, responding LEADER_REPLY
1335383100732: inside sendPacket(Packet p)
1335383100747: Sending UDP payload: 33189
1335383100750: DSM Layer: Request timed out, send failure PROC_REPLY 11:1 (3,0)->(2,0)
1335383100752: Dispatching Atom PROC_REPLY 11:1 (3,0)->(2,0)
1335383100752: mux: I got a CSM packet at a leader 

1335383100753: Sending UDP payload: 989
1335383100754: Received PROC_REPLY 11:1 (3,0)->(2,0), handing to UserApp
1335383100754: inside handleDSMReply. Now back in originator leader of region 2
1335383100754: DSM layer timed out, don't log dsm layer latency stuff.
1335383100757: Originator Region=2's Leader (for Client=5102) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335383100757: change leader replyCounter to: 35
1335383100757: reply packet contains the newest photo/success info from the remote region
1335383100781: inside sendReplies of replyCount = 511300035
1335383100781: =======================
1335383100782: inside sendReplyRepeatingRunnable for replyCount = 511300035
1335383100782: Leader about to send REPLY packet, number: 511300035 type: 15 Leader in region: (2,0) to Client nodID: 5102
1335383100782: I (the leader) was not the originator client (which id = 5102) so I use UDP to send packet back to my nonleader
1335383100782: inside sendPacket(Packet p)
1335383100782: === Finished one round of sending REPLY Packet =======
1335383100783: Sending UDP payload: 642
1335383101083: =======================
1335383101083: inside sendReplyRepeatingRunnable for replyCount = 511300035
1335383101084: Leader about to send REPLY packet, number: 511300035 type: 15 Leader in region: (2,0) to Client nodID: 5102
1335383101084: I (the leader) was not the originator client (which id = 5102) so I use UDP to send packet back to my nonleader
1335383101084: inside sendPacket(Packet p)
1335383101085: === Finished one round of sending REPLY Packet =======
1335383101091: Sending UDP payload: 642
1335383101349: .......... GPS onLocationChanged ...... 
1335383101354: Loc = Location[mProvider=gps,mTime=1335469502000,mLatitude=42.3583008970755,mLongitude=-71.09297510258408,mHasAltitude=true,mAltitude=-16.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=true,mBearing=320.23328,mHasAccuracy=true,mAccuracy=20.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (2,0)
1335383101354: GPS x/long:-71.09297510258408, GPS y/lat: 42.3583008970755. Region width in x: 20.0
1335383101354: location PINPOINTS to region = 3.0, previous 2
1335383101354: Hysteresis is 0.0
1335383101355: location CHANGED TO NEW region = (3,0) from region = (2,0)
1335383101355: moving from region (2,0), to (3,0)
1335383101356: change state to HANDING_OFF with parameter my previous/old region = (2,0) before helping to elect new leader in it. (btw, newRegion (3,0))
1335383101356: VCoreDaemon.java inside stateTransition ..........
1335383101356: removing leaderRequestRetryR because I'm doing a stateTransition
1335383101356: ..... VCoreDaemon.java targetState = HANDING_OFF
1335383101356: HANDING OFF setting leaderRegion = (2,0)
1335383101357: Trying to hand off leadership
1335383101357: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335383101357: broadcasting LEADER_ELECT to old (2,0)
1335383101357: inside sendPacket(Packet p)
1335383101358: Sending UDP payload: 463
1335383101385: =======================
1335383101385: inside sendReplyRepeatingRunnable for replyCount = 511300035
1335383101386: Leader about to send REPLY packet, number: 511300035 type: 15 Leader in region: (2,0) to Client nodID: 5102
1335383101386: I (the leader) was not the originator client (which id = 5102) so I use UDP to send packet back to my nonleader
1335383101386: inside sendPacket(Packet p)
1335383101386: === Finished one round of sending REPLY Packet =======
1335383101387: Sending UDP payload: 642
1335383101689: =======================
1335383101689: inside sendReplyRepeatingRunnable for replyCount = 511300035
1335383101691: Leader about to send REPLY packet, number: 511300035 type: 15 Leader in region: (2,0) to Client nodID: 5102
1335383101696: I (the leader) was not the originator client (which id = 5102) so I use UDP to send packet back to my nonleader
1335383101699: inside sendPacket(Packet p)
1335383101711: === Finished one round of sending REPLY Packet =======
1335383101707: Sending UDP payload: 642
1335383101782: inside sendReplyTimeoutR
1335383101782: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 511300035
1335383101903: Received UDP payload: 446
1335383101919: mux: Inside mux Packet.CLIENT_REQUEST
1335383101922: inside sendPacket(Packet p)
1335383101924: Sending UDP payload: 446
1335383101926: Received UDP payload: 446
1335383101952: mux: Inside mux Packet.CLIENT_REQUEST
1335383101954: Received UDP payload: 3890
1335383101961: mux: Inside mux Packet.CLIENT_REQUEST
1335383102204: Received UDP payload: 3890
1335383102214: mux: Inside mux Packet.CLIENT_REQUEST
1335383102359: INSIDE ELECT CANDIDATE
1335383102360: CANDIDATE SIZE is 0
1335383102360: UserApp stopped.
1335383102360: DSMLayer stopped
1335383102360: serializing DSMLayer to JSON
1335383102486: Received UDP payload: 3890
1335383102531: mux: Inside mux Packet.CLIENT_REQUEST
1335383103348: .......... GPS onLocationChanged ...... 
1335383103349: Loc = Location[mProvider=gps,mTime=1335469504000,mLatitude=42.35831235020315,mLongitude=-71.09297413210177,mHasAltitude=true,mAltitude=-18.0,mHasSpeed=true,mSpeed=0.38954797,mHasBearing=true,mBearing=328.04364,mHasAccuracy=true,mAccuracy=10.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (3,0)
1335383103349: GPS x/long:-71.09297413210177, GPS y/lat: 42.35831235020315. Region width in x: 20.0
1335383103349: location PINPOINTS to region = 3.0, previous 3
1335383103350: Hysteresis is 0.0
1335383103350: stay at region 3
1335383105659: Received UDP payload: 446
1335383107166: Received UDP payload: 4290
1335383107173: mux: Inside mux Packet.CLIENT_REQUEST
1335383107307: old region empty, uploaded state to cloud in 4945ms as json 36061 bytes
1335383107313: VCoreDaemon.java inside stateTransition ..........
1335383107315: removing leaderRequestRetryR because I'm doing a stateTransition
1335383107315: ..... VCoreDaemon.java targetState = JOINING
1335383107316: posting leaderRequestRetryR because I'm joining
1335383107318: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335383107321: sending LEADER_REQUEST
1335383107321: inside sendPacket(Packet p)
1335383107336: Sending UDP payload: 446
1335383107340: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335383107459: Received UDP payload: 4290
1335383107462: mux: Inside mux Packet.CLIENT_REQUEST
1335383107558: Received UDP payload: 446
1335383107641: sending LEADER_REQUEST
1335383107642: inside sendPacket(Packet p)
1335383107643: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335383107648: Sending UDP payload: 446
1335383107858: Received UDP payload: 446
1335383107943: sending LEADER_REQUEST
1335383107944: inside sendPacket(Packet p)
1335383107944: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335383107949: Sending UDP payload: 446
1335383108013: Received UDP payload: 446
1335383108020: Received UDP payload: 446
1335383108182: Received UDP payload: 446
1335383108245: sending LEADER_REQUEST
1335383108246: inside sendPacket(Packet p)
1335383108247: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335383108249: Sending UDP payload: 446
1335383108317: inside leaderRequestTimeoutR beacuse I didn't hear a leader_reply and I'm removing leaderRequestRetryR because leader_request timed out
1335383108318: inside leaderRequestTimeoutR and my state was JOINING, so I'll try to stateTransition to LEADER
1335383108318: VCoreDaemon.java inside stateTransition ..........
1335383108318: removing leaderRequestRetryR because I'm doing a stateTransition
1335383108318: ..... VCoreDaemon.java targetState = LEADER
1335383108318: trying to take leadership to the cloud
1335383108359: Received UDP payload: 625
1335383108361: mux: Inside mux Packet.CLIENT_REQUEST
1335383108392: Received UDP payload: 446
1335383108436: Received UDP payload: 446
1335383108443: Received UDP payload: 446
1335383108447: mux: Inside mux Packet.CLIENT_REQUEST
1335383108456: Received UDP payload: 625
1335383108459: mux: Inside mux Packet.CLIENT_REQUEST
1335383108474: Received UDP payload: 446
1335383108478: mux: Inside mux Packet.CLIENT_REQUEST
1335383108482: Received UDP payload: 446
1335383108486: mux: Inside mux Packet.CLIENT_REQUEST
1335383108708: Received UDP payload: 625
1335383108763: mux: Inside mux Packet.CLIENT_REQUEST
1335383109152: Received UDP payload: 446
1335383109322: Received UDP payload: 446
1335383109352: Received UDP payload: 446
1335383109791: cloud accepted leadership request, returned csm bytes size 82556
1335383109797: ..... VCoreDaemon.java targetState = LEADER and csm is not null --> csm.stop()
1335383109797: DSMLayer stopped
1335383109797: ..... VCoreDaemon.java targetState = LEADER and create new DSMLayer !!!! :D:D:D:D:D
1335383109798: *** Starting CSM Layer ***
1335383109801: *** CSM Layer starting with cache disabled ***
1335383109801: *** CSM Layer starting with forwarding enabled ***
1335383110295: Received UDP payload: 446
1335383110504: canPressButton = TRUE
1335383110505: areButtonsEnabled --> false
1335383110505: disabling buttons ...
1335383110506: took picture disableButtonsR
1335383110506: areButtonsEnabled --> false
1335383110551: reg=3 id=5113 state=2 regionWidth=20.0 hyst=0.0 takeNum=4 takeCamGood=3 takeGoodSave=3 takeBad=0 takeTimedout=0 takePercent=75% getNum=2 getGood=2 getBad=0 getTimedout=0 getPercent=100%
1335383110552: Clicked take picture button ..
1335383111461: inside HandlePictureStorage onPictureTaken()
1335383111462: reg=3 id=5113 state=2 regionWidth=20.0 hyst=0.0 takeNum=4 takeCamGood=4 takeGoodSave=3 takeBad=0 takeTimedout=0 takePercent=75% getNum=2 getGood=2 getBad=0 getTimedout=0 getPercent=100%
1335383111908: Picture successfully taken, ORIG BYTE LENGTH = 1087968
1335383112486: Our new height x width: 240 x 320
1335383112487: Show photo from handle my camera take
1335383112489: ** Client making NEWly TAKEN photo PACKET to send to leader **
1335383112489: change local requestCounter to 12
1335383112522: BYTE SIZE AFTER COMPRESSION: 3674
1335383112524: Client about to send CLIENT_UPLOAD_PHOTO packet, REQUEST: 5113012 Client in region: 3 Client nodID: 5113
1335383112620: ----------------------------
1335383112621: inside sendRequestPacketRepeatingRunnable for requestCount = 5113012
1335383112621: I'm a leader, my requesting photos packet going to mux directly
1335383112622: --- Finished one round of sending REQUEST Packet ---------
1335383112622: mux: Inside mux Packet.CLIENT_REQUEST
1335383112622: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335383112622: mux: vncDaemon.csm.userApp is null
1335383112818: HI I'm in ONPAUSE()
1335383112957: ----------------------------
1335383112958: inside sendRequestPacketRepeatingRunnable for requestCount = 5113012
1335383112958: I'm a leader, my requesting photos packet going to mux directly
1335383112960: --- Finished one round of sending REQUEST Packet ---------
1335383113288: ----------------------------
1335383113289: inside sendRequestPacketRepeatingRunnable for requestCount = 5113012
1335383113290: I'm a leader, my requesting photos packet going to mux directly
1335383113290: --- Finished one round of sending REQUEST Packet ---------
1335383113525: inside sendRequestPacketTimeoutR, stops Client sending requestPackets
1335383113594: .......... GPS onLocationChanged ...... 
1335383113636: inside onDestroy()
