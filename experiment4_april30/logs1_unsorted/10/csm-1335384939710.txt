1335384939717: *** Opened log file for writing ***
1335384939717: Android build: SAMSUNG-SGH-I717
1335384939718: NET_NAME set to: eth0
1335384939718: starting Mux with id = -1
1335384939718: areButtonsEnabled --> true
1335384939720: *** Application started ***
1335384939720: HI I'm in ONRESUME()
1335384939724: SAMPLING_DISTANCE : 1, SAMPLING_DURATION : 1000
1335384939719: mux: Mux.java run() beginning -------------
1335384939723: mux: Mux.java's nodeId is5017
1335384939723: mux: starting vncDaemon ........
1335384939725: mux: vncDaemon started
1335384939724: Started VCoreDaemon with parameters maxRx = 5 , maxRY= 1
1335384939725: VCoreDaemon.java onStart() ....
1335384939726: started, mId = 5017
1335384939726: VCoreDaemon.java inside stateTransition ..........
1335384939726: removing leaderRequestRetryR because I'm doing a stateTransition
1335384939726: ..... VCoreDaemon.java out of bounds
1335384939726: region (-1, -1) out of bounds, dormant
1335384939727: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335384941500: Received UDP payload: 446
1335384942744: Received UDP payload: 446
1335384943289: Received UDP payload: 446
1335384951662: Received UDP payload: 446
1335384953010: Received UDP payload: 446
1335384956624: Received UDP payload: 446
1335384956633: Received UDP payload: 446
1335384957250: Received UDP payload: 446
1335384957290: Received UDP payload: 446
1335384957299: Received UDP payload: 446
1335384957308: Received UDP payload: 446
1335384958446: Received UDP payload: 446
1335384958487: Received UDP payload: 3512
1335384958502: ignoring leader_reply that's not for me
1335384958526: Received UDP payload: 446
1335384958539: Received UDP payload: 446
1335384959701: Received UDP payload: 446
1335384960589: Received UDP payload: 463
1335384962270: Received UDP payload: 446
1335384972069: Received UDP payload: 22335
1335384972084: Received UDP payload: 446
1335384972092: Received UDP payload: 446
1335384972748: Received UDP payload: 446
1335384999150: Received UDP payload: 446
1335384999167: Received UDP payload: 446
1335384999178: Received UDP payload: 446
1335384999189: Received UDP payload: 446
1335385005567: .......... GPS onLocationChanged ...... 
1335385005568: Loc = Location[mProvider=gps,mTime=1335385006000,mLatitude=42.35803591,mLongitude=-71.09273648,mHasAltitude=true,mAltitude=-11.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=47.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (-1,-1)
1335385005568: GPS x/long:-71.09273648, GPS y/lat: 42.35803591. Region width in x: 20.0
1335385005569: location PINPOINTS to region = 1.0, previous -1
1335385005569: Hysteresis is 0.0
1335385005569: location CHANGED TO NEW region = (1,0) from region = (-1,-1)
1335385005569: moving from region (-1,-1), to (1,0)
1335385005570: VCoreDaemon.java inside stateTransition ..........
1335385005570: removing leaderRequestRetryR because I'm doing a stateTransition
1335385005570: ..... VCoreDaemon.java targetState = JOINING
1335385005570: posting leaderRequestRetryR because I'm joining
1335385005572: sending LEADER_REQUEST
1335385005573: inside sendPacket(Packet p)
1335385005573: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385005578: Sending UDP payload: 446
1335385005582: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385005873: sending LEADER_REQUEST
1335385005873: inside sendPacket(Packet p)
1335385005873: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385005875: Sending UDP payload: 446
1335385006174: sending LEADER_REQUEST
1335385006175: inside sendPacket(Packet p)
1335385006175: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385006180: Sending UDP payload: 446
1335385006476: sending LEADER_REQUEST
1335385006477: inside sendPacket(Packet p)
1335385006478: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385006482: Sending UDP payload: 446
1335385006583: inside leaderRequestTimeoutR beacuse I didn't hear a leader_reply and I'm removing leaderRequestRetryR because leader_request timed out
1335385006583: inside leaderRequestTimeoutR and my state was JOINING, so I'll try to stateTransition to LEADER
1335385006584: VCoreDaemon.java inside stateTransition ..........
1335385006584: removing leaderRequestRetryR because I'm doing a stateTransition
1335385006585: ..... VCoreDaemon.java targetState = LEADER
1335385006599: trying to take leadership to the cloud
1335385006691: .......... GPS onLocationChanged ...... 
1335385006692: Loc = Location[mProvider=gps,mTime=1335385007000,mLatitude=42.35801756,mLongitude=-71.09276628,mHasAltitude=true,mAltitude=-11.699999809265137,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=35.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385006692: GPS x/long:-71.09276628, GPS y/lat: 42.35801756. Region width in x: 20.0
1335385006692: location PINPOINTS to region = 1.0, previous 1
1335385006693: Hysteresis is 0.0
1335385006693: stay at region 1
1335385007021: cloud rejected leadership request or request failed, wait to retry
1335385007575: .......... GPS onLocationChanged ...... 
1335385007580: Loc = Location[mProvider=gps,mTime=1335385008000,mLatitude=42.35804333,mLongitude=-71.09279096,mHasAltitude=true,mAltitude=-19.700000762939453,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=21.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385007581: GPS x/long:-71.09279096, GPS y/lat: 42.35804333. Region width in x: 20.0
1335385007581: location PINPOINTS to region = 1.0, previous 1
1335385007581: Hysteresis is 0.0
1335385007581: stay at region 1
1335385008581: .......... GPS onLocationChanged ...... 
1335385008584: Loc = Location[mProvider=gps,mTime=1335385009000,mLatitude=42.35803773,mLongitude=-71.0928099,mHasAltitude=true,mAltitude=-20.899999618530273,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=16.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385008587: GPS x/long:-71.0928099, GPS y/lat: 42.35803773. Region width in x: 20.0
1335385008588: location PINPOINTS to region = 1.0, previous 1
1335385008589: Hysteresis is 0.0
1335385008591: stay at region 1
1335385009574: .......... GPS onLocationChanged ...... 
1335385009577: Loc = Location[mProvider=gps,mTime=1335385010000,mLatitude=42.35804357,mLongitude=-71.09279724,mHasAltitude=true,mAltitude=-21.399999618530273,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=12.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385009579: GPS x/long:-71.09279724, GPS y/lat: 42.35804357. Region width in x: 20.0
1335385009580: location PINPOINTS to region = 1.0, previous 1
1335385009582: Hysteresis is 0.0
1335385009583: stay at region 1
1335385010575: .......... GPS onLocationChanged ...... 
1335385010602: Loc = Location[mProvider=gps,mTime=1335385011000,mLatitude=42.35805631,mLongitude=-71.09280254,mHasAltitude=true,mAltitude=-23.200000762939453,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=9.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385010604: GPS x/long:-71.09280254, GPS y/lat: 42.35805631. Region width in x: 20.0
1335385010606: location PINPOINTS to region = 1.0, previous 1
1335385010607: Hysteresis is 0.0
1335385010608: stay at region 1
1335385011569: .......... GPS onLocationChanged ...... 
1335385011570: Loc = Location[mProvider=gps,mTime=1335385012000,mLatitude=42.3580574,mLongitude=-71.09277693,mHasAltitude=true,mAltitude=-29.0,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=8.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385011570: GPS x/long:-71.09277693, GPS y/lat: 42.3580574. Region width in x: 20.0
1335385011570: location PINPOINTS to region = 1.0, previous 1
1335385011571: Hysteresis is 0.0
1335385011571: stay at region 1
1335385012582: .......... GPS onLocationChanged ...... 
1335385012584: Loc = Location[mProvider=gps,mTime=1335385013000,mLatitude=42.35805257,mLongitude=-71.09276584,mHasAltitude=true,mAltitude=-30.5,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=7.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385012585: GPS x/long:-71.09276584, GPS y/lat: 42.35805257. Region width in x: 20.0
1335385012587: location PINPOINTS to region = 1.0, previous 1
1335385012588: Hysteresis is 0.0
1335385012589: stay at region 1
1335385014305: Received UDP payload: 446
1335385014336: Received UDP payload: 446
1335385014368: Received UDP payload: 446
1335385014380: Received UDP payload: 446
1335385044728: Received UDP payload: 446
1335385044730: Received UDP payload: 446
1335385044732: removing leaderRequestRetryR because heard Packet.Heartbeat
1335385044732: heard HEARTBEAT from 5012, now following
1335385044733: VCoreDaemon.java inside stateTransition ..........
1335385044733: removing leaderRequestRetryR because I'm doing a stateTransition
1335385044733: ..... VCoreDaemon.java targetState = NONLEADER
1335385044733: now NONLEADER (id=5017) following LEADER (id=5012) in (1,0)
1335385044733: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385044775: Received UDP payload: 446
1335385044783: Received UDP payload: 446
1335385050528: Received UDP payload: 446
1335385050553: Received UDP payload: 446
1335385050557: Received UDP payload: 446
1335385050561: Received UDP payload: 446
1335385050624: Received UDP payload: 446
1335385059816: Missed 3 HEARTBEATS from LEADER, going to JOINING.
1335385059816: VCoreDaemon.java inside stateTransition ..........
1335385059816: removing leaderRequestRetryR because I'm doing a stateTransition
1335385059816: ..... VCoreDaemon.java targetState = JOINING
1335385059817: posting leaderRequestRetryR because I'm joining
1335385059817: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385059817: sending LEADER_REQUEST
1335385059817: inside sendPacket(Packet p)
1335385059818: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385059849: Sending UDP payload: 446
1335385060118: sending LEADER_REQUEST
1335385060119: inside sendPacket(Packet p)
1335385060119: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385060123: Sending UDP payload: 446
1335385060420: sending LEADER_REQUEST
1335385060421: inside sendPacket(Packet p)
1335385060421: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385060425: Sending UDP payload: 446
1335385060722: sending LEADER_REQUEST
1335385060724: inside sendPacket(Packet p)
1335385060725: posting another leaderRequestRetryR after leaderRequestRetryPeriod
1335385060729: Sending UDP payload: 446
1335385060817: inside leaderRequestTimeoutR beacuse I didn't hear a leader_reply and I'm removing leaderRequestRetryR because leader_request timed out
1335385060817: inside leaderRequestTimeoutR and my state was JOINING, so I'll try to stateTransition to LEADER
1335385060818: VCoreDaemon.java inside stateTransition ..........
1335385060818: removing leaderRequestRetryR because I'm doing a stateTransition
1335385060818: ..... VCoreDaemon.java targetState = LEADER
1335385060818: trying to take leadership to the cloud
1335385061010: Received UDP payload: 446
1335385061250: cloud accepted leadership request, returned csm bytes size 1307
1335385061256: ..... VCoreDaemon.java targetState = LEADER and create new DSMLayer !!!! :D:D:D:D:D
1335385061257: *** Starting CSM Layer ***
1335385061257: *** CSM Layer starting with cache disabled ***
1335385061257: *** CSM Layer starting with forwarding enabled ***
1335385061439: DSMLayer starting
1335385061451: UserApp started.
1335385061451: loaded csm data from cloud
1335385061502: inside sendPacket(Packet p)
1335385061524: Sending UDP payload: 3512
1335385061526: now fully up as LEADER (id=5017) of (1,0)
1335385061526: ..... VCoreDaemon.java stateTransition ends xxxxxxxxxxxx
1335385061527: heard LEADER_REQUEST from node 5020, responding LEADER_REPLY
1335385061592: inside sendPacket(Packet p)
1335385061593: Sending UDP payload: 3529
1335385061975: Received UDP payload: 446
1335385061980: heard LEADER_REQUEST from node 5020, responding LEADER_REPLY
1335385062004: Received UDP payload: 446
1335385062013: inside sendPacket(Packet p)
1335385062017: Sending UDP payload: 3529
1335385062020: Received UDP payload: 446
1335385062021: heard LEADER_REQUEST from node 5020, responding LEADER_REPLY
1335385062062: inside sendPacket(Packet p)
1335385062063: Sending UDP payload: 3529
1335385062064: heard LEADER_REQUEST from node 5020, responding LEADER_REPLY
1335385062096: inside sendPacket(Packet p)
1335385062097: Sending UDP payload: 3529
1335385064817: inside sendPacket(Packet p)
1335385064820: Sending UDP payload: 446
1335385069818: inside sendPacket(Packet p)
1335385069823: Sending UDP payload: 446
1335385071933: Received UDP payload: 446
1335385071940: Received UDP payload: 446
1335385071969: Received UDP payload: 446
1335385071973: Received UDP payload: 446
1335385074751: Received UDP payload: 446
1335385074756: heard LEADER_REQUEST from node 5005, responding LEADER_REPLY
1335385074776: Received UDP payload: 446
1335385074783: Received UDP payload: 446
1335385074799: Received UDP payload: 446
1335385074827: inside sendPacket(Packet p)
1335385074829: Sending UDP payload: 3529
1335385074837: heard LEADER_REQUEST from node 5005, responding LEADER_REPLY
1335385074893: inside sendPacket(Packet p)
1335385074895: Sending UDP payload: 3529
1335385074896: heard LEADER_REQUEST from node 5005, responding LEADER_REPLY
1335385074933: inside sendPacket(Packet p)
1335385074935: Sending UDP payload: 3529
1335385074945: heard LEADER_REQUEST from node 5005, responding LEADER_REPLY
1335385074977: inside sendPacket(Packet p)
1335385074979: Sending UDP payload: 3529
1335385074981: inside sendPacket(Packet p)
1335385074983: Sending UDP payload: 446
1335385076641: Received UDP payload: 446
1335385076651: Received UDP payload: 446
1335385076660: Received UDP payload: 446
1335385076663: Received UDP payload: 446
1335385076670: Received UDP payload: 446
1335385077018: Received UDP payload: 22335
1335385079983: inside sendPacket(Packet p)
1335385079986: Sending UDP payload: 446
1335385084984: inside sendPacket(Packet p)
1335385084985: Sending UDP payload: 446
1335385087578: Received UDP payload: 22335
1335385087596: Received UDP payload: 446
1335385087604: Received UDP payload: 446
1335385087647: Received UDP payload: 446
1335385089984: inside sendPacket(Packet p)
1335385089985: Sending UDP payload: 446
1335385090836: Received UDP payload: 446
1335385090844: heard LEADER_REQUEST from node 5020, responding LEADER_REPLY
1335385090861: inside sendPacket(Packet p)
1335385090864: Sending UDP payload: 3529
1335385091272: Received UDP payload: 446
1335385091280: heard LEADER_REQUEST from node 5020, responding LEADER_REPLY
1335385091313: inside sendPacket(Packet p)
1335385091315: Sending UDP payload: 3529
1335385094984: inside sendPacket(Packet p)
1335385094986: Sending UDP payload: 446
1335385099985: inside sendPacket(Packet p)
1335385099988: Sending UDP payload: 446
1335385104986: inside sendPacket(Packet p)
1335385104989: Sending UDP payload: 446
1335385106973: Received UDP payload: 22335
1335385109987: inside sendPacket(Packet p)
1335385109991: Sending UDP payload: 446
1335385111655: canPressButton = TRUE
1335385111655: areButtonsEnabled --> false
1335385111656: disabling buttons ...
1335385111657: took picture disableButtonsR
1335385111657: areButtonsEnabled --> false
1335385111797: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=1 takeCamGood=0 takeGoodSave=0 takeBad=0 takeTimedout=0 takePercent=0% getNum=0 getGood=0 getBad=0 getTimedout=0 getPercent=-1%
1335385111798: Clicked take picture button ..
1335385113293: inside HandlePictureStorage onPictureTaken()
1335385113294: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=1 takeCamGood=1 takeGoodSave=0 takeBad=0 takeTimedout=0 takePercent=0% getNum=0 getGood=0 getBad=0 getTimedout=0 getPercent=-1%
1335385113555: Picture successfully taken, ORIG BYTE LENGTH = 3651133
1335385113788: Our new height x width: 306 x 408
1335385113788: Show photo from handle my camera take
1335385113789: ** Client making NEWly TAKEN photo PACKET to send to leader **
1335385113789: change local requestCounter to 1
1335385113807: BYTE SIZE AFTER COMPRESSION: 8103
1335385113814: Client about to send CLIENT_UPLOAD_PHOTO packet, REQUEST: 5017001 Client in region: 1 Client nodID: 5017
1335385113853: ----------------------------
1335385113854: inside sendRequestPacketRepeatingRunnable for requestCount = 5017001
1335385113854: I'm a leader, my requesting photos packet going to mux directly
1335385113864: --- Finished one round of sending REQUEST Packet ---------
1335385113854: mux: Inside mux Packet.CLIENT_REQUEST
1335385113854: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385113912: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335385113855: inside handleClientRequest. Originator leader of region 1
1335385113855: got new request, requestCounter = 5017001
1335385113855: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335385113855: Sending PROC_REQUEST 10:0 (1,0)->(1,0)
1335385113856: Dispatching Atom PROC_REQUEST 10:0 (1,0)->(1,0)
1335385113857: mux: I got a CSM packet at a leader 

1335385113913: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335385113915: I'm a leader and I successfully saved my client's new photo
1335385113915: now showing in UI the new photo I just saved ... 
1335385113916: the photo length: 8103
1335385113960: end of server show photo aside %%%%%%%%%
1335385113856: Note down new request by adding requestCounter=5017001 to HashMap processedRequests
1335385113856: Make FirstLeg Ack regardless of new or already-processed requests
1335385113856: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5017)
1335385113881: Sending UDP payload: 9114
1335385113881: removed replies before id 0 from sentReplies of size 0
1335385113882: inside handleDSMRequest. At requests's remote leader of region 1
1335385113884: Inside UPLOAD_PHOTO!!
1335385113888: my_gpinfo.isSuccess is now (should be true): true
1335385113888: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335385113890: Received PROC_REQUEST 10:0 (1,0)->(1,0), replying PROC_REPLY 10:0 (1,0)->(1,0)
1335385113890: Dispatching Atom PROC_REPLY 10:0 (1,0)->(1,0)
1335385113891: mux: I got a CSM packet at a leader 

1335385113962: Client received Packet.CLIENT_UPLOAD_PHOTO_ACK
1335385113962: disabling progressdialog due to successful new photo upload
1335385113963: Inside _enableButtons
1335385113963: areButtonsEnabled --> true
1335385113963: send final leg ack regardless of new or already-processed reply
1335385113964: inside finalLegAck: change requestCounter to 2
1335385113965: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5017002 Client in region: (1,0) Client nodID: 5017
1335385113966: I'm a leader client, my final_leg packet going to mux directly
1335385113968: new client_upload_photo_ack reply with replyCounter 501700001
1335385113968: note down new reply by adding replyCounter=501700001 to HashMap processedReplies
1335385113969: leader upload new photo latency = 1335385113962
1335385113969: = leader upload start 0 ~ stop 1335385113962
1335385113972: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=1 takeCamGood=1 takeGoodSave=1 takeBad=0 takeTimedout=0 takePercent=100% getNum=0 getGood=0 getBad=0 getTimedout=0 getPercent=-1%
1335385113972: SUCCESS Client now knows saving photo on its leader succeeded
1335385113896: Sending UDP payload: 989
1335385113902: Received PROC_REPLY 10:0 (1,0)->(1,0), handing to UserApp
1335385113902: inside handleDSMReply. Now back in originator leader of region 1
1335385113902: DSM layer: Going to and from remote region took latency = 47
1335385113902: DSM layer: orig leader sent packet at 1335385113855 ~ received reply from remote leader at 1335385113902
1335385113903: Originator Region=1's Leader (for Client=5017) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385113903: change leader replyCounter to: 1
1335385113903: reply packet contains the success info for UPLOAD_PHOTO
1335385113904: inside sendReplies of replyCount = 501700001
1335385113904: =======================
1335385113904: inside sendReplyRepeatingRunnable for replyCount = 501700001
1335385113905: Leader about to send REPLY packet, number: 501700001 type: 16 Leader in region: (1,0) to Client nodID: 5017
1335385113905: I (the leader) was also the originator client (id = 5017) so I hand the packet to my mux directly, without UDP
1335385113905: === Finished one round of sending REPLY Packet =======
1335385113966: mux: Inside mux Packet.CLIENT_REQUEST
1335385113966: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385113967: inside handleClientRequest. Originator leader of region 1
1335385113967: got new request, requestCounter = 5017002
1335385113967: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 501700001
1335385113967: Yay the last leg succeeded. Removing reply runnables ...
1335385113967: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 501700001
1335385113967: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 501700001
1335385113967: do not send ack for received final_leg_ack
1335385114988: inside sendPacket(Packet p)
1335385115040: Sending UDP payload: 446
1335385119990: inside sendPacket(Packet p)
1335385120006: Sending UDP payload: 446
1335385124990: inside sendPacket(Packet p)
1335385124993: Sending UDP payload: 446
1335385129942: Received UDP payload: 446
1335385129951: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385129993: Received UDP payload: 446
1335385130044: inside sendPacket(Packet p)
1335385130047: Sending UDP payload: 12414
1335385130053: inside sendPacket(Packet p)
1335385130055: Sending UDP payload: 446
1335385130057: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385130075: inside sendPacket(Packet p)
1335385130077: Sending UDP payload: 12414
1335385130275: Received UDP payload: 446
1335385130281: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385130309: Received UDP payload: 446
1335385130317: inside sendPacket(Packet p)
1335385130318: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385130319: Sending UDP payload: 12414
1335385130344: Received UDP payload: 446
1335385130350: Received UDP payload: 446
1335385130356: inside sendPacket(Packet p)
1335385130359: Sending UDP payload: 12414
1335385130362: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385130382: inside sendPacket(Packet p)
1335385130384: Sending UDP payload: 12414
1335385130385: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385130400: inside sendPacket(Packet p)
1335385130402: Sending UDP payload: 12414
1335385130534: Received UDP payload: 446
1335385130538: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385130553: Received UDP payload: 446
1335385130562: Received UDP payload: 446
1335385130582: Received UDP payload: 446
1335385130586: inside sendPacket(Packet p)
1335385130591: Sending UDP payload: 12414
1335385130598: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385130650: inside sendPacket(Packet p)
1335385130658: Sending UDP payload: 12563
1335385130658: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385130687: inside sendPacket(Packet p)
1335385130687: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385130700: Sending UDP payload: 12414
1335385130707: Received UDP payload: 5626
1335385130714: mux: Inside mux Packet.CLIENT_REQUEST
1335385130714: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385130714: inside handleClientRequest. Originator leader of region 1
1335385130715: got new request, requestCounter = 5010001
1335385130715: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335385130716: Sending PROC_REQUEST 10:1 (1,0)->(1,0)
1335385130716: Dispatching Atom PROC_REQUEST 10:1 (1,0)->(1,0)
1335385130717: mux: I got a CSM packet at a leader 

1335385130754: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335385130762: I'm a leader and I successfully saved my client's new photo
1335385130763: now showing in UI the new photo I just saved ... 
1335385130765: the photo length: 4979
1335385130843: end of server show photo aside %%%%%%%%%
1335385130716: Note down new request by adding requestCounter=5010001 to HashMap processedRequests
1335385130717: Make FirstLeg Ack regardless of new or already-processed requests
1335385130717: The leader sending a First Leg ack to originator client (which id = 5010)
1335385130717: inside sendPacket(Packet p)
1335385130723: Sending UDP payload: 5990
1335385130728: inside sendPacket(Packet p)
1335385130729: removed replies before id 1 from sentReplies of size 0
1335385130729: inside handleDSMRequest. At requests's remote leader of region 1
1335385130733: Inside UPLOAD_PHOTO!!
1335385130733: Received UDP payload: 446
1335385130742: my_gpinfo.isSuccess is now (should be true): true
1335385130742: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335385130744: Received PROC_REQUEST 10:1 (1,0)->(1,0), replying PROC_REPLY 10:1 (1,0)->(1,0)
1335385130745: Dispatching Atom PROC_REPLY 10:1 (1,0)->(1,0)
1335385130761: mux: I got a CSM packet at a leader 

1335385130747: Sending UDP payload: 446
1335385130749: Sending UDP payload: 12414
1335385130751: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385130764: Sending UDP payload: 989
1335385130766: Received UDP payload: 446
1335385130768: Received PROC_REPLY 10:1 (1,0)->(1,0), handing to UserApp
1335385130769: inside handleDSMReply. Now back in originator leader of region 1
1335385130769: DSM layer: Going to and from remote region took latency = 54
1335385130769: DSM layer: orig leader sent packet at 1335385130715 ~ received reply from remote leader at 1335385130769
1335385130824: Received UDP payload: 446
1335385130830: Originator Region=1's Leader (for Client=5010) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385130831: change leader replyCounter to: 2
1335385130831: reply packet contains the success info for UPLOAD_PHOTO
1335385130835: inside sendReplies of replyCount = 501700002
1335385130837: Received UDP payload: 446
1335385130857: inside sendPacket(Packet p)
1335385130869: =======================
1335385130869: inside sendReplyRepeatingRunnable for replyCount = 501700002
1335385130870: Leader about to send REPLY packet, number: 501700002 type: 16 Leader in region: (1,0) to Client nodID: 5010
1335385130871: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385130871: inside sendPacket(Packet p)
1335385130871: === Finished one round of sending REPLY Packet =======
1335385130871: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385130885: Sending UDP payload: 14964
1335385130889: Sending UDP payload: 642
1335385130913: inside sendPacket(Packet p)
1335385130916: Sending UDP payload: 9290
1335385130918: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385130957: inside sendPacket(Packet p)
1335385130960: Sending UDP payload: 9290
1335385130963: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385130998: inside sendPacket(Packet p)
1335385131000: Sending UDP payload: 9290
1335385131171: =======================
1335385131172: inside sendReplyRepeatingRunnable for replyCount = 501700002
1335385131172: Leader about to send REPLY packet, number: 501700002 type: 16 Leader in region: (1,0) to Client nodID: 5010
1335385131172: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385131175: inside sendPacket(Packet p)
1335385131176: === Finished one round of sending REPLY Packet =======
1335385131177: Sending UDP payload: 642
1335385131477: =======================
1335385131477: inside sendReplyRepeatingRunnable for replyCount = 501700002
1335385131478: Leader about to send REPLY packet, number: 501700002 type: 16 Leader in region: (1,0) to Client nodID: 5010
1335385131479: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385131479: inside sendPacket(Packet p)
1335385131479: === Finished one round of sending REPLY Packet =======
1335385131481: Sending UDP payload: 642
1335385131780: =======================
1335385131781: inside sendReplyRepeatingRunnable for replyCount = 501700002
1335385131781: Leader about to send REPLY packet, number: 501700002 type: 16 Leader in region: (1,0) to Client nodID: 5010
1335385131781: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385131781: inside sendPacket(Packet p)
1335385131782: === Finished one round of sending REPLY Packet =======
1335385131784: Sending UDP payload: 642
1335385131835: inside sendReplyTimeoutR
1335385131836: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 501700002
1335385135057: inside sendPacket(Packet p)
1335385135059: Sending UDP payload: 446
1335385135587: .......... GPS onLocationChanged ...... 
1335385135589: Loc = Location[mProvider=gps,mTime=1335385136000,mLatitude=42.3580432,mLongitude=-71.09276359,mHasAltitude=true,mAltitude=-22.399999618530273,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385135592: GPS x/long:-71.09276359, GPS y/lat: 42.3580432. Region width in x: 20.0
1335385135594: location PINPOINTS to region = 1.0, previous 1
1335385135596: Hysteresis is 0.0
1335385135597: stay at region 1
1335385140060: inside sendPacket(Packet p)
1335385140062: Sending UDP payload: 446
1335385145060: inside sendPacket(Packet p)
1335385145062: Sending UDP payload: 446
1335385150060: inside sendPacket(Packet p)
1335385150069: Sending UDP payload: 446
1335385155070: inside sendPacket(Packet p)
1335385155072: Sending UDP payload: 446
1335385155502: Received UDP payload: 446
1335385155509: heard LEADER_REQUEST from node 5004, responding LEADER_REPLY
1335385155564: inside sendPacket(Packet p)
1335385155579: Sending UDP payload: 9290
1335385155784: Received UDP payload: 446
1335385155786: heard LEADER_REQUEST from node 5004, responding LEADER_REPLY
1335385155807: inside sendPacket(Packet p)
1335385155809: Sending UDP payload: 9290
1335385157730: Received UDP payload: 7653
1335385157732: mux: Inside mux Packet.CLIENT_REQUEST
1335385157732: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385157732: inside handleClientRequest. Originator leader of region 1
1335385157732: got new request, requestCounter = 5010002
1335385157733: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335385157733: Sending PROC_REQUEST 10:2 (1,0)->(1,0)
1335385157733: Dispatching Atom PROC_REQUEST 10:2 (1,0)->(1,0)
1335385157734: mux: I got a CSM packet at a leader 

1335385157809: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335385157812: I'm a leader and I successfully saved my client's new photo
1335385157813: now showing in UI the new photo I just saved ... 
1335385157813: the photo length: 7006
1335385157860: end of server show photo aside %%%%%%%%%
1335385157734: Note down new request by adding requestCounter=5010002 to HashMap processedRequests
1335385157734: Make FirstLeg Ack regardless of new or already-processed requests
1335385157734: The leader sending a First Leg ack to originator client (which id = 5010)
1335385157734: inside sendPacket(Packet p)
1335385157760: Sending UDP payload: 8017
1335385157761: removed replies before id 2 from sentReplies of size 0
1335385157761: inside handleDSMRequest. At requests's remote leader of region 1
1335385157762: Inside UPLOAD_PHOTO!!
1335385157765: my_gpinfo.isSuccess is now (should be true): true
1335385157765: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335385157807: Received PROC_REQUEST 10:2 (1,0)->(1,0), replying PROC_REPLY 10:2 (1,0)->(1,0)
1335385157807: Dispatching Atom PROC_REPLY 10:2 (1,0)->(1,0)
1335385157843: mux: I got a CSM packet at a leader 

1335385157808: Sending UDP payload: 446
1335385157844: Sending UDP payload: 989
1335385157847: Received PROC_REPLY 10:2 (1,0)->(1,0), handing to UserApp
1335385157847: inside handleDSMReply. Now back in originator leader of region 1
1335385157847: DSM layer: Going to and from remote region took latency = 114
1335385157847: DSM layer: orig leader sent packet at 1335385157733 ~ received reply from remote leader at 1335385157847
1335385157849: Originator Region=1's Leader (for Client=5010) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385157849: change leader replyCounter to: 3
1335385157849: reply packet contains the success info for UPLOAD_PHOTO
1335385157849: inside sendReplies of replyCount = 501700003
1335385157849: =======================
1335385157850: inside sendReplyRepeatingRunnable for replyCount = 501700003
1335385157850: Leader about to send REPLY packet, number: 501700003 type: 16 Leader in region: (1,0) to Client nodID: 5010
1335385157850: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385157850: inside sendPacket(Packet p)
1335385157850: === Finished one round of sending REPLY Packet =======
1335385157853: Sending UDP payload: 642
1335385158077: Received UDP payload: 446
1335385158080: heard LEADER_REQUEST from node 5005, responding LEADER_REPLY
1335385158093: inside sendPacket(Packet p)
1335385158094: Sending UDP payload: 11317
1335385158150: =======================
1335385158151: inside sendReplyRepeatingRunnable for replyCount = 501700003
1335385158151: Leader about to send REPLY packet, number: 501700003 type: 16 Leader in region: (1,0) to Client nodID: 5010
1335385158151: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385158151: inside sendPacket(Packet p)
1335385158152: === Finished one round of sending REPLY Packet =======
1335385158154: Sending UDP payload: 642
1335385158207: Received UDP payload: 7653
1335385158210: mux: Inside mux Packet.CLIENT_REQUEST
1335385158210: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385158210: inside handleClientRequest. Originator leader of region 1
1335385158211: discarding repeated requestCounter=5010002, but still send an ack back
1335385158211: Note down new request by adding requestCounter=5010002 to HashMap processedRequests
1335385158211: Make FirstLeg Ack regardless of new or already-processed requests
1335385158211: The leader sending a First Leg ack to originator client (which id = 5010)
1335385158211: inside sendPacket(Packet p)
1335385158213: Sending UDP payload: 446
1335385158401: Received UDP payload: 7653
1335385158411: mux: Inside mux Packet.CLIENT_REQUEST
1335385158411: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385158411: inside handleClientRequest. Originator leader of region 1
1335385158412: discarding repeated requestCounter=5010002, but still send an ack back
1335385158412: Note down new request by adding requestCounter=5010002 to HashMap processedRequests
1335385158413: Make FirstLeg Ack regardless of new or already-processed requests
1335385158413: The leader sending a First Leg ack to originator client (which id = 5010)
1335385158413: inside sendPacket(Packet p)
1335385158420: Sending UDP payload: 446
1335385158452: =======================
1335385158454: inside sendReplyRepeatingRunnable for replyCount = 501700003
1335385158455: Leader about to send REPLY packet, number: 501700003 type: 16 Leader in region: (1,0) to Client nodID: 5010
1335385158455: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385158455: inside sendPacket(Packet p)
1335385158462: Sending UDP payload: 642
1335385158466: === Finished one round of sending REPLY Packet =======
1335385158767: =======================
1335385158767: inside sendReplyRepeatingRunnable for replyCount = 501700003
1335385158767: Leader about to send REPLY packet, number: 501700003 type: 16 Leader in region: (1,0) to Client nodID: 5010
1335385158768: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385158768: inside sendPacket(Packet p)
1335385158768: === Finished one round of sending REPLY Packet =======
1335385158769: Sending UDP payload: 642
1335385158851: inside sendReplyTimeoutR
1335385158852: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 501700003
1335385159828: canPressButton = TRUE
1335385159829: areButtonsEnabled --> false 
1335385159830: get picture disableButtonsR
1335385159831: areButtonsEnabled --> false
1335385159870: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=1 takeCamGood=1 takeGoodSave=1 takeBad=0 takeTimedout=0 takePercent=100% getNum=1 getGood=0 getBad=0 getTimedout=0 getPercent=0%
1335385159870: ** Client making GET photo PACKET to send to the leader. Requesting for region: 2 **
1335385159870: change local requestCounter to 3
1335385159874: Client about to send CLIENT_DOWNLOAD_PHOTO packet, REQUEST: 5017003 Client in region: 1 Client nodID: 5017
1335385159913: ----------------------------
1335385159915: inside sendRequestPacketRepeatingRunnable for requestCount = 5017003
1335385159915: I'm a leader, my requesting photos packet going to mux directly
1335385159919: --- Finished one round of sending REQUEST Packet ---------
1335385159916: mux: Inside mux Packet.CLIENT_REQUEST
1335385159916: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385159976: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335385159916: inside handleClientRequest. Originator leader of region 1
1335385159916: got new request, requestCounter = 5017003
1335385159916: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335385159917: Sending to region: 2
1335385159918: Sending PROC_REQUEST 11:0 (1,0)->(2,0)
1335385159918: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(2,0)
1335385159920: mux: I got a CSM packet at a leader 

1335385159919: Note down new request by adding requestCounter=5017003 to HashMap processedRequests
1335385159919: Make FirstLeg Ack regardless of new or already-processed requests
1335385159919: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5017)
1335385159923: Sending UDP payload: 989
1335385159924: nonce 6 heard from src region (1,0)
1335385160070: inside sendPacket(Packet p)
1335385160071: Sending UDP payload: 446
1335385160234: Received UDP payload: 446
1335385160237: heard LEADER_REQUEST from node 5005, responding LEADER_REPLY
1335385160250: Received UDP payload: 446
1335385160256: Received UDP payload: 446
1335385160261: inside sendPacket(Packet p)
1335385160265: Sending UDP payload: 11637
1335385160276: heard LEADER_REQUEST from node 5005, responding LEADER_REPLY
1335385160293: inside sendPacket(Packet p)
1335385160294: Sending UDP payload: 11637
1335385160296: heard LEADER_REQUEST from node 5005, responding LEADER_REPLY
1335385160309: inside sendPacket(Packet p)
1335385160310: Sending UDP payload: 11637
1335385160621: Retrying PROC_REQUEST 11:0 (1,0)->(2,0)
1335385160621: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(2,0)
1335385160622: mux: I got a CSM packet at a leader 

1335385160623: Sending UDP payload: 989
1335385160624: nonce 7 heard from src region (1,0)
1335385160722: Retrying PROC_REQUEST 11:0 (1,0)->(2,0)
1335385160723: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(2,0)
1335385160723: mux: I got a CSM packet at a leader 

1335385160724: Sending UDP payload: 989
1335385160725: nonce 8 heard from src region (1,0)
1335385160824: Retrying PROC_REQUEST 11:0 (1,0)->(2,0)
1335385160824: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(2,0)
1335385160825: mux: I got a CSM packet at a leader 

1335385160827: Sending UDP payload: 989
1335385160827: nonce 9 heard from src region (1,0)
1335385160925: Retrying PROC_REQUEST 11:0 (1,0)->(2,0)
1335385160925: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(2,0)
1335385160926: mux: I got a CSM packet at a leader 

1335385160927: Sending UDP payload: 989
1335385160928: nonce 10 heard from src region (1,0)
1335385161026: Retrying PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161027: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161027: mux: I got a CSM packet at a leader 

1335385161029: Sending UDP payload: 989
1335385161029: nonce 11 heard from src region (1,0)
1335385161129: Retrying PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161131: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161132: mux: I got a CSM packet at a leader 

1335385161146: Sending UDP payload: 989
1335385161150: nonce 12 heard from src region (1,0)
1335385161234: Retrying PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161236: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161238: mux: I got a CSM packet at a leader 

1335385161248: Sending UDP payload: 989
1335385161249: nonce 13 heard from src region (1,0)
1335385161339: Retrying PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161339: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161340: mux: I got a CSM packet at a leader 

1335385161341: Sending UDP payload: 989
1335385161349: nonce 14 heard from src region (1,0)
1335385161440: Retrying PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161441: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161441: mux: I got a CSM packet at a leader 

1335385161442: Sending UDP payload: 989
1335385161443: nonce 15 heard from src region (1,0)
1335385161542: Retrying PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161542: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161543: mux: I got a CSM packet at a leader 

1335385161545: Sending UDP payload: 989
1335385161549: nonce 16 heard from src region (1,0)
1335385161644: Retrying PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161645: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161645: mux: I got a CSM packet at a leader 

1335385161647: Sending UDP payload: 989
1335385161648: nonce 17 heard from src region (1,0)
1335385161746: Retrying PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161747: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161748: mux: I got a CSM packet at a leader 

1335385161751: Sending UDP payload: 989
1335385161754: nonce 18 heard from src region (1,0)
1335385161854: Retrying PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161855: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161856: mux: I got a CSM packet at a leader 

1335385161859: Sending UDP payload: 989
1335385161861: nonce 19 heard from src region (1,0)
1335385161957: Retrying PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161958: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(2,0)
1335385161966: mux: I got a CSM packet at a leader 

1335385161970: Sending UDP payload: 989
1335385161971: nonce 20 heard from src region (1,0)
1335385162060: DSM Layer: Request timed out, send failure PROC_REPLY 11:0 (2,0)->(1,0)
1335385162061: Dispatching Atom PROC_REPLY 11:0 (2,0)->(1,0)
1335385162062: mux: I got a CSM packet at a leader 

1335385162088: Client received Packet.CLIENT_SHOW_REMOTEPHOTOS. Client requested for a photo in a remote region and this is the reply
1335385162088: disabling progressdialog due to successful new photo get
1335385162089: Inside _enableButtons
1335385162089: areButtonsEnabled --> true
1335385162090: send final leg ack regardless of new or already-processed reply
1335385162090: inside finalLegAck: change requestCounter to 4
1335385162090: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5017004 Client in region: (1,0) Client nodID: 5017
1335385162091: I'm a leader client, my final_leg packet going to mux directly
1335385162091: new client_show_remotephoto reply with replyCounter 501700004
1335385162092: note down new reply by adding replyCounter=501700004 to HashMap processedReplies
1335385162092: leader download remote photo latency = 2171
1335385162093: = leader download start 1335385159916 ~ stop 1335385162087
1335385162094: Can't get remote photo, because DSM Layer on originator leader timed out
1335385162104: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=1 takeCamGood=1 takeGoodSave=1 takeBad=0 takeTimedout=0 takePercent=100% getNum=1 getGood=0 getBad=1 getTimedout=0 getPercent=0%
1335385162105: getBad++
1335385162065: Sending UDP payload: 989
1335385162067: Received PROC_REPLY 11:0 (2,0)->(1,0), handing to UserApp
1335385162068: inside handleDSMReply. Now back in originator leader of region 1
1335385162069: DSM layer timed out, don't log dsm layer latency stuff.
1335385162071: Originator Region=1's Leader (for Client=5017) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385162071: change leader replyCounter to: 4
1335385162072: reply packet contains the newest photo/success info from the remote region
1335385162072: inside sendReplies of replyCount = 501700004
1335385162073: =======================
1335385162074: inside sendReplyRepeatingRunnable for replyCount = 501700004
1335385162075: Leader about to send REPLY packet, number: 501700004 type: 15 Leader in region: (1,0) to Client nodID: 5017
1335385162076: I (the leader) was also the originator client (id = 5017) so I hand the packet to my mux directly, without UDP
1335385162076: === Finished one round of sending REPLY Packet =======
1335385162091: mux: Inside mux Packet.CLIENT_REQUEST
1335385162092: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385162093: inside handleClientRequest. Originator leader of region 1
1335385162094: got new request, requestCounter = 5017004
1335385162094: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 501700004
1335385162094: Yay the last leg succeeded. Removing reply runnables ...
1335385162095: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 501700004
1335385162095: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 501700004
1335385162096: do not send ack for received final_leg_ack
1335385165070: inside sendPacket(Packet p)
1335385165072: Sending UDP payload: 446
1335385166767: canPressButton = TRUE
1335385166768: areButtonsEnabled --> false 
1335385166768: get picture disableButtonsR
1335385166768: areButtonsEnabled --> false
1335385166800: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=1 takeCamGood=1 takeGoodSave=1 takeBad=0 takeTimedout=0 takePercent=100% getNum=2 getGood=0 getBad=1 getTimedout=0 getPercent=0%
1335385166800: ** Client making GET photo PACKET to send to the leader. Requesting for region: 1 **
1335385166801: change local requestCounter to 5
1335385166801: Client about to send CLIENT_DOWNLOAD_PHOTO packet, REQUEST: 5017005 Client in region: 1 Client nodID: 5017
1335385166836: ----------------------------
1335385166837: inside sendRequestPacketRepeatingRunnable for requestCount = 5017005
1335385166837: I'm a leader, my requesting photos packet going to mux directly
1335385166851: --- Finished one round of sending REQUEST Packet ---------
1335385166837: mux: Inside mux Packet.CLIENT_REQUEST
1335385166837: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385166900: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335385166838: inside handleClientRequest. Originator leader of region 1
1335385166838: got new request, requestCounter = 5017005
1335385166838: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335385166838: Sending to region: 1
1335385166839: Sending PROC_REQUEST 11:3 (1,0)->(1,0)
1335385166839: Dispatching Atom PROC_REQUEST 11:3 (1,0)->(1,0)
1335385166841: mux: I got a CSM packet at a leader 

1335385166839: Note down new request by adding requestCounter=5017005 to HashMap processedRequests
1335385166840: Make FirstLeg Ack regardless of new or already-processed requests
1335385166841: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5017)
1335385166842: Sending UDP payload: 989
1335385166843: removed replies before id 3 from sentReplies of size 0
1335385166843: inside handleDSMRequest. At requests's remote leader of region 1
1335385166844: INSIDE SERVER_GET_PHOTO!!!
1335385166848: dst_region == src_region = 1
1335385166848:  1 self to self atomRequest
1335385166849: Received PROC_REQUEST 11:3 (1,0)->(1,0), replying PROC_REPLY 11:3 (1,0)->(1,0)
1335385166849: Dispatching Atom PROC_REPLY 11:3 (1,0)->(1,0)
1335385166850: mux: I got a CSM packet at a leader 

1335385166902: Client received Packet.CLIENT_SHOW_REMOTEPHOTOS. Client requested for a photo in a remote region and this is the reply
1335385166903: disabling progressdialog due to successful new photo get
1335385166903: Inside _enableButtons
1335385166903: areButtonsEnabled --> true
1335385166906: send final leg ack regardless of new or already-processed reply
1335385166907: inside finalLegAck: change requestCounter to 6
1335385166907: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5017006 Client in region: (1,0) Client nodID: 5017
1335385166907: I'm a leader client, my final_leg packet going to mux directly
1335385166909: new client_show_remotephoto reply with replyCounter 501700005
1335385166909: note down new reply by adding replyCounter=501700005 to HashMap processedReplies
1335385166910: leader download remote photo latency = 65
1335385166910: = leader download start 1335385166837 ~ stop 1335385166902
1335385166912: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=1 takeCamGood=1 takeGoodSave=1 takeBad=0 takeTimedout=0 takePercent=100% getNum=2 getGood=1 getBad=1 getTimedout=0 getPercent=50%
1335385166912: Success! Client getting photo from remote region, showing photo...
1335385166913: Remote photo's length: 7006
1335385166851: Sending UDP payload: 8017
1335385166867: Received PROC_REPLY 11:3 (1,0)->(1,0), handing to UserApp
1335385166867: inside handleDSMReply. Now back in originator leader of region 1
1335385166867: DSM layer: Going to and from remote region took latency = 28
1335385166867: DSM layer: orig leader sent packet at 1335385166839 ~ received reply from remote leader at 1335385166867
1335385166868: Originator Region=1's Leader (for Client=5017) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385166868: change leader replyCounter to: 5
1335385166869: reply packet contains the newest photo/success info from the remote region
1335385166869: inside sendReplies of replyCount = 501700005
1335385166869: =======================
1335385166869: inside sendReplyRepeatingRunnable for replyCount = 501700005
1335385166869: Leader about to send REPLY packet, number: 501700005 type: 15 Leader in region: (1,0) to Client nodID: 5017
1335385166869: I (the leader) was also the originator client (id = 5017) so I hand the packet to my mux directly, without UDP
1335385166870: === Finished one round of sending REPLY Packet =======
1335385166907: mux: Inside mux Packet.CLIENT_REQUEST
1335385166908: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385166908: inside handleClientRequest. Originator leader of region 1
1335385166908: got new request, requestCounter = 5017006
1335385166908: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 501700005
1335385166908: Yay the last leg succeeded. Removing reply runnables ...
1335385166908: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 501700005
1335385166908: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 501700005
1335385166908: do not send ack for received final_leg_ack
1335385170070: inside sendPacket(Packet p)
1335385170089: Sending UDP payload: 446
1335385171546: Received UDP payload: 7653
1335385171564: mux: Inside mux Packet.CLIENT_REQUEST
1335385171564: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385171565: inside handleClientRequest. Originator leader of region 1
1335385171565: discarding repeated requestCounter=5010002, but still send an ack back
1335385171566: Note down new request by adding requestCounter=5010002 to HashMap processedRequests
1335385171566: Make FirstLeg Ack regardless of new or already-processed requests
1335385171566: The leader sending a First Leg ack to originator client (which id = 5010)
1335385171567: inside sendPacket(Packet p)
1335385171579: Sending UDP payload: 446
1335385171763: Received UDP payload: 4110
1335385171765: mux: Inside mux Packet.CLIENT_REQUEST
1335385171765: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385171765: inside handleClientRequest. Originator leader of region 1
1335385171765: got new request, requestCounter = 5010003
1335385171766: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335385171766: Sending PROC_REQUEST 10:4 (1,0)->(1,0)
1335385171766: Dispatching Atom PROC_REQUEST 10:4 (1,0)->(1,0)
1335385171767: mux: I got a CSM packet at a leader 

1335385171793: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335385171803: I'm a leader and I successfully saved my client's new photo
1335385171804: now showing in UI the new photo I just saved ... 
1335385171804: the photo length: 3463
1335385171837: end of server show photo aside %%%%%%%%%
1335385171766: Note down new request by adding requestCounter=5010003 to HashMap processedRequests
1335385171766: Make FirstLeg Ack regardless of new or already-processed requests
1335385171767: The leader sending a First Leg ack to originator client (which id = 5010)
1335385171767: inside sendPacket(Packet p)
1335385171770: Sending UDP payload: 4474
1335385171776: removed replies before id 4 from sentReplies of size 0
1335385171776: inside handleDSMRequest. At requests's remote leader of region 1
1335385171779: Inside UPLOAD_PHOTO!!
1335385171788: my_gpinfo.isSuccess is now (should be true): true
1335385171788: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335385171789: Received PROC_REQUEST 10:4 (1,0)->(1,0), replying PROC_REPLY 10:4 (1,0)->(1,0)
1335385171790: Dispatching Atom PROC_REPLY 10:4 (1,0)->(1,0)
1335385171797: mux: I got a CSM packet at a leader 

1335385171791: Sending UDP payload: 446
1335385171798: Sending UDP payload: 989
1335385171799: Received PROC_REPLY 10:4 (1,0)->(1,0), handing to UserApp
1335385171799: inside handleDSMReply. Now back in originator leader of region 1
1335385171799: DSM layer: Going to and from remote region took latency = 33
1335385171799: DSM layer: orig leader sent packet at 1335385171766 ~ received reply from remote leader at 1335385171799
1335385171800: Originator Region=1's Leader (for Client=5010) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385171801: change leader replyCounter to: 6
1335385171801: reply packet contains the success info for UPLOAD_PHOTO
1335385171801: inside sendReplies of replyCount = 501700006
1335385171801: =======================
1335385171801: inside sendReplyRepeatingRunnable for replyCount = 501700006
1335385171801: Leader about to send REPLY packet, number: 501700006 type: 16 Leader in region: (1,0) to Client nodID: 5010
1335385171801: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385171802: inside sendPacket(Packet p)
1335385171802: === Finished one round of sending REPLY Packet =======
1335385171803: Sending UDP payload: 642
1335385172102: =======================
1335385172102: inside sendReplyRepeatingRunnable for replyCount = 501700006
1335385172102: Leader about to send REPLY packet, number: 501700006 type: 16 Leader in region: (1,0) to Client nodID: 5010
1335385172102: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385172102: inside sendPacket(Packet p)
1335385172103: === Finished one round of sending REPLY Packet =======
1335385172108: Sending UDP payload: 642
1335385172403: =======================
1335385172404: inside sendReplyRepeatingRunnable for replyCount = 501700006
1335385172407: Leader about to send REPLY packet, number: 501700006 type: 16 Leader in region: (1,0) to Client nodID: 5010
1335385172407: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385172408: inside sendPacket(Packet p)
1335385172411: Sending UDP payload: 642
1335385172413: === Finished one round of sending REPLY Packet =======
1335385172713: =======================
1335385172713: inside sendReplyRepeatingRunnable for replyCount = 501700006
1335385172714: Leader about to send REPLY packet, number: 501700006 type: 16 Leader in region: (1,0) to Client nodID: 5010
1335385172714: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385172714: inside sendPacket(Packet p)
1335385172714: === Finished one round of sending REPLY Packet =======
1335385172716: Sending UDP payload: 642
1335385172802: inside sendReplyTimeoutR
1335385172802: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 501700006
1335385175070: inside sendPacket(Packet p)
1335385175072: Sending UDP payload: 446
1335385176845: canPressButton = TRUE
1335385176846: areButtonsEnabled --> false
1335385176846: disabling buttons ...
1335385176846: took picture disableButtonsR
1335385176846: areButtonsEnabled --> false
1335385176873: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=1 takeGoodSave=1 takeBad=0 takeTimedout=0 takePercent=50% getNum=2 getGood=1 getBad=1 getTimedout=0 getPercent=50%
1335385176873: Clicked take picture button ..
1335385177444: Received UDP payload: 446
1335385177449: heard LEADER_REQUEST from node 5004, responding LEADER_REPLY
1335385177462: Received UDP payload: 446
1335385177511: inside sendPacket(Packet p)
1335385177512: Sending UDP payload: 7810
1335385177513: heard LEADER_REQUEST from node 5004, responding LEADER_REPLY
1335385177532: inside sendPacket(Packet p)
1335385177533: Sending UDP payload: 7810
1335385178326: inside HandlePictureStorage onPictureTaken()
1335385178326: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=2 takeGoodSave=1 takeBad=0 takeTimedout=0 takePercent=50% getNum=2 getGood=1 getBad=1 getTimedout=0 getPercent=50%
1335385178587: Picture successfully taken, ORIG BYTE LENGTH = 3623323
1335385178790: Our new height x width: 306 x 408
1335385178791: Show photo from handle my camera take
1335385178791: ** Client making NEWly TAKEN photo PACKET to send to leader **
1335385178791: change local requestCounter to 7
1335385178809: BYTE SIZE AFTER COMPRESSION: 7598
1335385178814: Client about to send CLIENT_UPLOAD_PHOTO packet, REQUEST: 5017007 Client in region: 1 Client nodID: 5017
1335385178842: ----------------------------
1335385178843: inside sendRequestPacketRepeatingRunnable for requestCount = 5017007
1335385178843: I'm a leader, my requesting photos packet going to mux directly
1335385178853: --- Finished one round of sending REQUEST Packet ---------
1335385178844: mux: Inside mux Packet.CLIENT_REQUEST
1335385178844: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385178892: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335385178844: inside handleClientRequest. Originator leader of region 1
1335385178844: got new request, requestCounter = 5017007
1335385178844: Leader received CLIENT_UPLOAD_PHOTO, so send atom packet to myself (remote region = me)
1335385178844: Sending PROC_REQUEST 10:5 (1,0)->(1,0)
1335385178845: Dispatching Atom PROC_REQUEST 10:5 (1,0)->(1,0)
1335385178845: mux: I got a CSM packet at a leader 

1335385178893: %%%%%%%% aside: Leader got Packet.SERVER_SHOW_NEWPHOTO. I'm a leader showing my nonleader/myself client's new photo
1335385178894: I'm a leader and I successfully saved my client's new photo
1335385178895: now showing in UI the new photo I just saved ... 
1335385178895: the photo length: 7598
1335385178928: end of server show photo aside %%%%%%%%%
1335385178845: Note down new request by adding requestCounter=5017007 to HashMap processedRequests
1335385178845: Make FirstLeg Ack regardless of new or already-processed requests
1335385178845: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5017)
1335385178852: Sending UDP payload: 8609
1335385178859: removed replies before id 5 from sentReplies of size 0
1335385178860: inside handleDSMRequest. At requests's remote leader of region 1
1335385178862: Inside UPLOAD_PHOTO!!
1335385178871: my_gpinfo.isSuccess is now (should be true): true
1335385178871: Region leader successfully uploaded a new photo taken by a client in region. Region leader now display the new photo on its screen (through StatusActivity)
1335385178880: Received PROC_REQUEST 10:5 (1,0)->(1,0), replying PROC_REPLY 10:5 (1,0)->(1,0)
1335385178880: Dispatching Atom PROC_REPLY 10:5 (1,0)->(1,0)
1335385178880: mux: I got a CSM packet at a leader 

1335385178931: Client received Packet.CLIENT_UPLOAD_PHOTO_ACK
1335385178931: disabling progressdialog due to successful new photo upload
1335385178932: Inside _enableButtons
1335385178932: areButtonsEnabled --> true
1335385178932: send final leg ack regardless of new or already-processed reply
1335385178933: inside finalLegAck: change requestCounter to 8
1335385178933: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5017008 Client in region: (1,0) Client nodID: 5017
1335385178933: I'm a leader client, my final_leg packet going to mux directly
1335385178935: new client_upload_photo_ack reply with replyCounter 501700007
1335385178935: note down new reply by adding replyCounter=501700007 to HashMap processedReplies
1335385178935: leader upload new photo latency = 1335385178931
1335385178936: = leader upload start 0 ~ stop 1335385178931
1335385178938: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=2 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=100% getNum=2 getGood=1 getBad=1 getTimedout=0 getPercent=50%
1335385178939: SUCCESS Client now knows saving photo on its leader succeeded
1335385178881: Sending UDP payload: 989
1335385178882: Received PROC_REPLY 10:5 (1,0)->(1,0), handing to UserApp
1335385178882: inside handleDSMReply. Now back in originator leader of region 1
1335385178882: DSM layer: Going to and from remote region took latency = 38
1335385178883: DSM layer: orig leader sent packet at 1335385178844 ~ received reply from remote leader at 1335385178882
1335385178883: Originator Region=1's Leader (for Client=5017) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385178883: change leader replyCounter to: 7
1335385178883: reply packet contains the success info for UPLOAD_PHOTO
1335385178883: inside sendReplies of replyCount = 501700007
1335385178884: =======================
1335385178884: inside sendReplyRepeatingRunnable for replyCount = 501700007
1335385178884: Leader about to send REPLY packet, number: 501700007 type: 16 Leader in region: (1,0) to Client nodID: 5017
1335385178884: I (the leader) was also the originator client (id = 5017) so I hand the packet to my mux directly, without UDP
1335385178884: === Finished one round of sending REPLY Packet =======
1335385178934: mux: Inside mux Packet.CLIENT_REQUEST
1335385178934: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385178934: inside handleClientRequest. Originator leader of region 1
1335385178934: got new request, requestCounter = 5017008
1335385178934: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 501700007
1335385178934: Yay the last leg succeeded. Removing reply runnables ...
1335385178934: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 501700007
1335385178934: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 501700007
1335385178935: do not send ack for received final_leg_ack
1335385180071: inside sendPacket(Packet p)
1335385180109: Sending UDP payload: 446
1335385181332: canPressButton = TRUE
1335385181332: areButtonsEnabled --> false 
1335385181332: get picture disableButtonsR
1335385181332: areButtonsEnabled --> false
1335385181395: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=2 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=100% getNum=3 getGood=1 getBad=1 getTimedout=0 getPercent=33%
1335385181395: ** Client making GET photo PACKET to send to the leader. Requesting for region: 0 **
1335385181396: change local requestCounter to 9
1335385181397: Client about to send CLIENT_DOWNLOAD_PHOTO packet, REQUEST: 5017009 Client in region: 1 Client nodID: 5017
1335385181436: ----------------------------
1335385181437: inside sendRequestPacketRepeatingRunnable for requestCount = 5017009
1335385181437: I'm a leader, my requesting photos packet going to mux directly
1335385181446: --- Finished one round of sending REQUEST Packet ---------
1335385181437: mux: Inside mux Packet.CLIENT_REQUEST
1335385181437: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385181484: Client received Packet.SERVER_FIRST_LEG_ACK. Yay the first leg succeeded, removing all request runnables
1335385181437: inside handleClientRequest. Originator leader of region 1
1335385181438: got new request, requestCounter = 5017009
1335385181438: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335385181440: Sending to region: 0
1335385181441: Sending PROC_REQUEST 11:0 (1,0)->(0,0)
1335385181441: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(0,0)
1335385181442: mux: I got a CSM packet at a leader 

1335385181441: Note down new request by adding requestCounter=5017009 to HashMap processedRequests
1335385181441: Make FirstLeg Ack regardless of new or already-processed requests
1335385181441: sending a First Leg ack to myself, becaues I (the leader) was also the originator client (id = 5017)
1335385181445: Sending UDP payload: 989
1335385181454: nonce 28 heard from src region (1,0)
1335385181526: leader to cloud hearbeat...
1335385182151: Retrying PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182151: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182151: mux: I got a CSM packet at a leader 

1335385182152: Sending UDP payload: 989
1335385182153: nonce 29 heard from src region (1,0)
1335385182252: Retrying PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182252: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182252: mux: I got a CSM packet at a leader 

1335385182253: Sending UDP payload: 989
1335385182254: nonce 30 heard from src region (1,0)
1335385182353: Retrying PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182353: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182353: mux: I got a CSM packet at a leader 

1335385182354: Sending UDP payload: 989
1335385182355: nonce 31 heard from src region (1,0)
1335385182454: Retrying PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182454: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182454: mux: I got a CSM packet at a leader 

1335385182455: Sending UDP payload: 989
1335385182456: nonce 32 heard from src region (1,0)
1335385182555: Retrying PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182555: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182555: mux: I got a CSM packet at a leader 

1335385182556: Sending UDP payload: 989
1335385182557: nonce 33 heard from src region (1,0)
1335385182656: Retrying PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182657: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182657: mux: I got a CSM packet at a leader 

1335385182660: Sending UDP payload: 989
1335385182663: nonce 34 heard from src region (1,0)
1335385182758: Retrying PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182758: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182759: mux: I got a CSM packet at a leader 

1335385182761: Sending UDP payload: 989
1335385182782: nonce 35 heard from src region (1,0)
1335385182859: Retrying PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182860: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182860: mux: I got a CSM packet at a leader 

1335385182861: Sending UDP payload: 989
1335385182861: nonce 36 heard from src region (1,0)
1335385182960: Retrying PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182961: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(0,0)
1335385182961: mux: I got a CSM packet at a leader 

1335385182962: Sending UDP payload: 989
1335385182962: nonce 37 heard from src region (1,0)
1335385183061: Retrying PROC_REQUEST 11:0 (1,0)->(0,0)
1335385183062: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(0,0)
1335385183062: mux: I got a CSM packet at a leader 

1335385183063: Sending UDP payload: 989
1335385183064: nonce 38 heard from src region (1,0)
1335385183162: Retrying PROC_REQUEST 11:0 (1,0)->(0,0)
1335385183163: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(0,0)
1335385183163: mux: I got a CSM packet at a leader 

1335385183165: Sending UDP payload: 989
1335385183165: nonce 39 heard from src region (1,0)
1335385183263: Retrying PROC_REQUEST 11:0 (1,0)->(0,0)
1335385183264: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(0,0)
1335385183267: mux: I got a CSM packet at a leader 

1335385183269: Sending UDP payload: 989
1335385183271: nonce 40 heard from src region (1,0)
1335385183364: Retrying PROC_REQUEST 11:0 (1,0)->(0,0)
1335385183365: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(0,0)
1335385183365: mux: I got a CSM packet at a leader 

1335385183367: Sending UDP payload: 989
1335385183368: nonce 41 heard from src region (1,0)
1335385183468: Retrying PROC_REQUEST 11:0 (1,0)->(0,0)
1335385183469: Dispatching Atom PROC_REQUEST 11:0 (1,0)->(0,0)
1335385183470: mux: I got a CSM packet at a leader 

1335385183474: Sending UDP payload: 989
1335385183476: nonce 42 heard from src region (1,0)
1335385183571: DSM Layer: Request timed out, send failure PROC_REPLY 11:0 (0,0)->(1,0)
1335385183571: Dispatching Atom PROC_REPLY 11:0 (0,0)->(1,0)
1335385183572: mux: I got a CSM packet at a leader 

1335385183593: Client received Packet.CLIENT_SHOW_REMOTEPHOTOS. Client requested for a photo in a remote region and this is the reply
1335385183593: disabling progressdialog due to successful new photo get
1335385183594: Inside _enableButtons
1335385183594: areButtonsEnabled --> true
1335385183595: send final leg ack regardless of new or already-processed reply
1335385183595: inside finalLegAck: change requestCounter to 10
1335385183595: Client about to send CLIENT_FINAL_LEG_ACK packet, REQUEST: 5017010 Client in region: (1,0) Client nodID: 5017
1335385183595: I'm a leader client, my final_leg packet going to mux directly
1335385183596: new client_show_remotephoto reply with replyCounter 501700008
1335385183596: note down new reply by adding replyCounter=501700008 to HashMap processedReplies
1335385183597: leader download remote photo latency = 2156
1335385183597: = leader download start 1335385181437 ~ stop 1335385183593
1335385183598: Can't get remote photo, because DSM Layer on originator leader timed out
1335385183602: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=2 takeCamGood=2 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=100% getNum=3 getGood=1 getBad=2 getTimedout=0 getPercent=33%
1335385183602: getBad++
1335385183576: Sending UDP payload: 989
1335385183578: Received PROC_REPLY 11:0 (0,0)->(1,0), handing to UserApp
1335385183578: inside handleDSMReply. Now back in originator leader of region 1
1335385183579: DSM layer timed out, don't log dsm layer latency stuff.
1335385183581: Originator Region=1's Leader (for Client=5017) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385183582: change leader replyCounter to: 8
1335385183582: reply packet contains the newest photo/success info from the remote region
1335385183583: inside sendReplies of replyCount = 501700008
1335385183584: =======================
1335385183585: inside sendReplyRepeatingRunnable for replyCount = 501700008
1335385183586: Leader about to send REPLY packet, number: 501700008 type: 15 Leader in region: (1,0) to Client nodID: 5017
1335385183587: I (the leader) was also the originator client (id = 5017) so I hand the packet to my mux directly, without UDP
1335385183587: === Finished one round of sending REPLY Packet =======
1335385183596: mux: Inside mux Packet.CLIENT_REQUEST
1335385183597: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385183597: inside handleClientRequest. Originator leader of region 1
1335385183597: got new request, requestCounter = 5017010
1335385183598: Leader received CLIENT_FINAL_LEG_ACK with replyCounter of 501700008
1335385183598: Yay the last leg succeeded. Removing reply runnables ...
1335385183599: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 501700008
1335385183603: deleting the key's associated reply_TIMEOUT_RMap runnable for replyCount 501700008
1335385183604: do not send ack for received final_leg_ack
1335385185072: inside sendPacket(Packet p)
1335385185088: Sending UDP payload: 446
1335385190090: inside sendPacket(Packet p)
1335385190091: Sending UDP payload: 446
1335385190566: .......... GPS onLocationChanged ...... 
1335385190568: Loc = Location[mProvider=gps,mTime=1335385191000,mLatitude=42.35801771,mLongitude=-71.09280128,mHasAltitude=true,mAltitude=-36.0,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385190577: GPS x/long:-71.09280128, GPS y/lat: 42.35801771. Region width in x: 20.0
1335385190577: location PINPOINTS to region = 1.0, previous 1
1335385190578: Hysteresis is 0.0
1335385190578: stay at region 1
1335385192583: .......... GPS onLocationChanged ...... 
1335385192585: Loc = Location[mProvider=gps,mTime=1335385193000,mLatitude=42.3580343,mLongitude=-71.09281617,mHasAltitude=true,mAltitude=-36.099998474121094,mHasSpeed=true,mSpeed=0.75,mHasBearing=true,mBearing=0.0,mHasAccuracy=true,mAccuracy=3.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385192587: GPS x/long:-71.09281617, GPS y/lat: 42.3580343. Region width in x: 20.0
1335385192596: location PINPOINTS to region = 1.0, previous 1
1335385192597: Hysteresis is 0.0
1335385192598: stay at region 1
1335385193583: .......... GPS onLocationChanged ...... 
1335385193585: Loc = Location[mProvider=gps,mTime=1335385194000,mLatitude=42.35803051,mLongitude=-71.09282808,mHasAltitude=true,mAltitude=-35.900001525878906,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385193589: GPS x/long:-71.09282808, GPS y/lat: 42.35803051. Region width in x: 20.0
1335385193589: location PINPOINTS to region = 1.0, previous 1
1335385193590: Hysteresis is 0.0
1335385193591: stay at region 1
1335385194588: .......... GPS onLocationChanged ...... 
1335385194590: Loc = Location[mProvider=gps,mTime=1335385195000,mLatitude=42.35803951,mLongitude=-71.09283291,mHasAltitude=true,mAltitude=-36.400001525878906,mHasSpeed=true,mSpeed=0.5,mHasBearing=true,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385194593: Received UDP payload: 446
1335385194602: GPS x/long:-71.09283291, GPS y/lat: 42.35803951. Region width in x: 20.0
1335385194603: location PINPOINTS to region = 1.0, previous 1
1335385194604: Hysteresis is 0.0
1335385194604: stay at region 1
1335385194625: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385194647: Received UDP payload: 446
1335385194687: Received UDP payload: 446
1335385194703: Received UDP payload: 625
1335385194755: mux: Inside mux Packet.CLIENT_REQUEST
1335385194756: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385194753: Received UDP payload: 625
1335385194756: inside handleClientRequest. Originator leader of region 1
1335385194759: got new request, requestCounter = 5010004
1335385194760: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335385194762: Sending to region: 1
1335385194763: Sending PROC_REQUEST 11:6 (1,0)->(1,0)
1335385194773: mux: Inside mux Packet.CLIENT_REQUEST
1335385194773: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385194769: Dispatching Atom PROC_REQUEST 11:6 (1,0)->(1,0)
1335385194783: mux: I got a CSM packet at a leader 

1335385194770: Note down new request by adding requestCounter=5010004 to HashMap processedRequests
1335385194770: Make FirstLeg Ack regardless of new or already-processed requests
1335385194772: The leader sending a First Leg ack to originator client (which id = 5010)
1335385194772: inside sendPacket(Packet p)
1335385194773: inside handleClientRequest. Originator leader of region 1
1335385194781: discarding repeated requestCounter=5010004, but still send an ack back
1335385194782: Note down new request by adding requestCounter=5010004 to HashMap processedRequests
1335385194782: Make FirstLeg Ack regardless of new or already-processed requests
1335385194783: The leader sending a First Leg ack to originator client (which id = 5010)
1335385194783: inside sendPacket(Packet p)
1335385194791: Sending UDP payload: 989
1335385194829: removed replies before id 6 from sentReplies of size 0
1335385194829: inside handleDSMRequest. At requests's remote leader of region 1
1335385194830: INSIDE SERVER_GET_PHOTO!!!
1335385194831: dst_region == src_region = 1
1335385194831:  1 self to self atomRequest
1335385194834: inside sendPacket(Packet p)
1335385194835: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385194842: inside sendPacket(Packet p)
1335385194843: heard LEADER_REQUEST from node 5010, responding LEADER_REPLY
1335385194899: Received PROC_REQUEST 11:6 (1,0)->(1,0), replying PROC_REPLY 11:6 (1,0)->(1,0)
1335385194900: Dispatching Atom PROC_REPLY 11:6 (1,0)->(1,0)
1335385194949: mux: I got a CSM packet at a leader 

1335385194923: Sending UDP payload: 446
1335385194927: Sending UDP payload: 446
1335385194936: Sending UDP payload: 11963
1335385194939: Sending UDP payload: 11972
1335385194951: Sending UDP payload: 8609
1335385194952: Received PROC_REPLY 11:6 (1,0)->(1,0), handing to UserApp
1335385194952: inside handleDSMReply. Now back in originator leader of region 1
1335385194953: DSM layer: Going to and from remote region took latency = 190
1335385194953: DSM layer: orig leader sent packet at 1335385194762 ~ received reply from remote leader at 1335385194952
1335385194955: Originator Region=1's Leader (for Client=5010) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385194955: change leader replyCounter to: 9
1335385194955: reply packet contains the newest photo/success info from the remote region
1335385194955: inside sendReplies of replyCount = 501700009
1335385194964: inside sendPacket(Packet p)
1335385194966: Sending UDP payload: 20109
1335385194967: =======================
1335385194967: inside sendReplyRepeatingRunnable for replyCount = 501700009
1335385194968: Leader about to send REPLY packet, number: 501700009 type: 15 Leader in region: (1,0) to Client nodID: 5010
1335385194969: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385194969: inside sendPacket(Packet p)
1335385194970: Sending UDP payload: 8262
1335385194970: === Finished one round of sending REPLY Packet =======
1335385195090: inside sendPacket(Packet p)
1335385195091: Sending UDP payload: 446
1335385195271: =======================
1335385195272: inside sendReplyRepeatingRunnable for replyCount = 501700009
1335385195272: Leader about to send REPLY packet, number: 501700009 type: 15 Leader in region: (1,0) to Client nodID: 5010
1335385195273: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385195273: inside sendPacket(Packet p)
1335385195274: Sending UDP payload: 8262
1335385195275: === Finished one round of sending REPLY Packet =======
1335385195551: .......... GPS onLocationChanged ...... 
1335385195553: Loc = Location[mProvider=gps,mTime=1335385196000,mLatitude=42.35804781,mLongitude=-71.09282745,mHasAltitude=true,mAltitude=-36.099998474121094,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385195554: GPS x/long:-71.09282745, GPS y/lat: 42.35804781. Region width in x: 20.0
1335385195554: location PINPOINTS to region = 1.0, previous 1
1335385195555: Hysteresis is 0.0
1335385195555: stay at region 1
1335385195575: =======================
1335385195575: inside sendReplyRepeatingRunnable for replyCount = 501700009
1335385195576: Leader about to send REPLY packet, number: 501700009 type: 15 Leader in region: (1,0) to Client nodID: 5010
1335385195576: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385195576: inside sendPacket(Packet p)
1335385195576: === Finished one round of sending REPLY Packet =======
1335385195585: Sending UDP payload: 8262
1335385195760: Received UDP payload: 625
1335385195789: mux: Inside mux Packet.CLIENT_REQUEST
1335385195789: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385195790: inside handleClientRequest. Originator leader of region 1
1335385195790: discarding repeated requestCounter=5010004, but still send an ack back
1335385195790: Note down new request by adding requestCounter=5010004 to HashMap processedRequests
1335385195791: Make FirstLeg Ack regardless of new or already-processed requests
1335385195791: The leader sending a First Leg ack to originator client (which id = 5010)
1335385195791: inside sendPacket(Packet p)
1335385195802: Sending UDP payload: 446
1335385195806: Received UDP payload: 625
1335385195814: mux: Inside mux Packet.CLIENT_REQUEST
1335385195815: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385195815: inside handleClientRequest. Originator leader of region 1
1335385195816: discarding repeated requestCounter=5010004, but still send an ack back
1335385195817: Note down new request by adding requestCounter=5010004 to HashMap processedRequests
1335385195817: Make FirstLeg Ack regardless of new or already-processed requests
1335385195817: The leader sending a First Leg ack to originator client (which id = 5010)
1335385195818: inside sendPacket(Packet p)
1335385195820: Sending UDP payload: 446
1335385195826: Received UDP payload: 625
1335385195841: mux: Inside mux Packet.CLIENT_REQUEST
1335385195842: mux: I'm the leader of requesting client, about to process Packet.CLIENT_REQUEST in userApp
1335385195842: inside handleClientRequest. Originator leader of region 1
1335385195842: got new request, requestCounter = 5010005
1335385195843: Leader received CLIENT_DOWNLOAD_PHOTO, figure out where (remote region) to forward packet
1335385195845: Sending to region: 1
1335385195854: Sending PROC_REQUEST 11:7 (1,0)->(1,0)
1335385195855: Dispatching Atom PROC_REQUEST 11:7 (1,0)->(1,0)
1335385195858: mux: I got a CSM packet at a leader 

1335385195856: Note down new request by adding requestCounter=5010005 to HashMap processedRequests
1335385195856: Make FirstLeg Ack regardless of new or already-processed requests
1335385195857: The leader sending a First Leg ack to originator client (which id = 5010)
1335385195857: inside sendPacket(Packet p)
1335385195870: Sending UDP payload: 989
1335385195872: removed replies before id 7 from sentReplies of size 0
1335385195873: inside handleDSMRequest. At requests's remote leader of region 1
1335385195876: =======================
1335385195877: inside sendReplyRepeatingRunnable for replyCount = 501700009
1335385195877: Leader about to send REPLY packet, number: 501700009 type: 15 Leader in region: (1,0) to Client nodID: 5010
1335385195878: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385195878: inside sendPacket(Packet p)
1335385195878: === Finished one round of sending REPLY Packet =======
1335385195895: INSIDE SERVER_GET_PHOTO!!!
1335385195903: dst_region == src_region = 1
1335385195903:  1 self to self atomRequest
1335385195918: Received PROC_REQUEST 11:7 (1,0)->(1,0), replying PROC_REPLY 11:7 (1,0)->(1,0)
1335385195919: Dispatching Atom PROC_REPLY 11:7 (1,0)->(1,0)
1335385195937: mux: I got a CSM packet at a leader 

1335385195921: Sending UDP payload: 446
1335385195928: Sending UDP payload: 8262
1335385195940: Sending UDP payload: 8609
1335385195947: Received PROC_REPLY 11:7 (1,0)->(1,0), handing to UserApp
1335385195947: inside handleDSMReply. Now back in originator leader of region 1
1335385195947: DSM layer: Going to and from remote region took latency = 102
1335385195948: DSM layer: orig leader sent packet at 1335385195845 ~ received reply from remote leader at 1335385195947
1335385195956: inside sendReplyTimeoutR
1335385195957: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 501700009
1335385195958: Originator Region=1's Leader (for Client=5010) processes remote region's dsm atom reply and will send Packet reply to Originator Client
1335385195958: change leader replyCounter to: 10
1335385195959: reply packet contains the newest photo/success info from the remote region
1335385195959: inside sendReplies of replyCount = 501700010
1335385195960: =======================
1335385195960: inside sendReplyRepeatingRunnable for replyCount = 501700010
1335385195961: Leader about to send REPLY packet, number: 501700010 type: 15 Leader in region: (1,0) to Client nodID: 5010
1335385195961: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385195962: inside sendPacket(Packet p)
1335385195962: === Finished one round of sending REPLY Packet =======
1335385195976: Sending UDP payload: 8262
1335385196263: =======================
1335385196263: inside sendReplyRepeatingRunnable for replyCount = 501700010
1335385196263: Leader about to send REPLY packet, number: 501700010 type: 15 Leader in region: (1,0) to Client nodID: 5010
1335385196264: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385196264: inside sendPacket(Packet p)
1335385196264: === Finished one round of sending REPLY Packet =======
1335385196266: Sending UDP payload: 8262
1335385196565: =======================
1335385196565: inside sendReplyRepeatingRunnable for replyCount = 501700010
1335385196566: Leader about to send REPLY packet, number: 501700010 type: 15 Leader in region: (1,0) to Client nodID: 5010
1335385196566: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385196567: inside sendPacket(Packet p)
1335385196567: === Finished one round of sending REPLY Packet =======
1335385196571: Sending UDP payload: 8262
1335385196869: =======================
1335385196869: inside sendReplyRepeatingRunnable for replyCount = 501700010
1335385196870: Leader about to send REPLY packet, number: 501700010 type: 15 Leader in region: (1,0) to Client nodID: 5010
1335385196872: I (the leader) was not the originator client (which id = 5010) so I use UDP to send packet back to my nonleader
1335385196872: inside sendPacket(Packet p)
1335385196876: Sending UDP payload: 8262
1335385196877: === Finished one round of sending REPLY Packet =======
1335385196963: inside sendReplyTimeoutR
1335385196964: deleting the key's associated reply_REPEATING_RMap runnable for replyCount 501700010
1335385197582: .......... GPS onLocationChanged ...... 
1335385197585: Loc = Location[mProvider=gps,mTime=1335385198000,mLatitude=42.35805631,mLongitude=-71.09281199,mHasAltitude=true,mAltitude=-36.599998474121094,mHasSpeed=true,mSpeed=0.0,mHasBearing=false,mBearing=0.0,mHasAccuracy=true,mAccuracy=4.0,mExtras=Bundle[mParcelledData.dataSize=4]] Previous Region = (1,0)
1335385197588: GPS x/long:-71.09281199, GPS y/lat: 42.35805631. Region width in x: 20.0
1335385197588: location PINPOINTS to region = 1.0, previous 1
1335385197589: Hysteresis is 0.0
1335385197589: stay at region 1
1335385200093: inside sendPacket(Packet p)
1335385200582: .......... GPS onLocationChanged ...... 
1335385207588: .......... GPS onLocationChanged ...... 
1335385209590: .......... GPS onLocationChanged ...... 
1335385256576: .......... GPS onLocationChanged ...... 
1335385259595: .......... GPS onLocationChanged ...... 
1335385262604: .......... GPS onLocationChanged ...... 
1335385274576: .......... GPS onLocationChanged ...... 
1335385287578: .......... GPS onLocationChanged ...... 
1335385288594: .......... GPS onLocationChanged ...... 
1335385289581: .......... GPS onLocationChanged ...... 
1335385291578: .......... GPS onLocationChanged ...... 
1335385294635: .......... GPS onLocationChanged ...... 
1335385316303: canPressButton = TRUE
1335385316303: areButtonsEnabled --> false
1335385316304: disabling buttons ...
1335385316304: took picture disableButtonsR
1335385316304: areButtonsEnabled --> false
1335385316331: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=3 takeCamGood=2 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=66% getNum=3 getGood=1 getBad=2 getTimedout=0 getPercent=33%
1335385316332: Clicked take picture button ..
1335385317795: inside HandlePictureStorage onPictureTaken()
1335385317796: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=3 takeCamGood=3 takeGoodSave=2 takeBad=0 takeTimedout=0 takePercent=66% getNum=3 getGood=1 getBad=2 getTimedout=0 getPercent=33%
1335385318058: Picture successfully taken, ORIG BYTE LENGTH = 3629767
1335385318261: Our new height x width: 306 x 408
1335385318261: Show photo from handle my camera take
1335385318261: ** Client making NEWly TAKEN photo PACKET to send to leader **
1335385318262: change local requestCounter to 11
1335385318276: BYTE SIZE AFTER COMPRESSION: 7199
1335385318281: Client about to send CLIENT_UPLOAD_PHOTO packet, REQUEST: 5017011 Client in region: 1 Client nodID: 5017
1335385318309: ----------------------------
1335385318310: inside sendRequestPacketRepeatingRunnable for requestCount = 5017011
1335385318310: I'm a leader, my requesting photos packet going to mux directly
1335385318310: --- Finished one round of sending REQUEST Packet ---------
1335385318611: ----------------------------
1335385318612: inside sendRequestPacketRepeatingRunnable for requestCount = 5017011
1335385318613: I'm a leader, my requesting photos packet going to mux directly
1335385318614: --- Finished one round of sending REQUEST Packet ---------
1335385318916: ----------------------------
1335385318917: inside sendRequestPacketRepeatingRunnable for requestCount = 5017011
1335385318917: I'm a leader, my requesting photos packet going to mux directly
1335385318917: --- Finished one round of sending REQUEST Packet ---------
1335385319218: ----------------------------
1335385319219: inside sendRequestPacketRepeatingRunnable for requestCount = 5017011
1335385319220: I'm a leader, my requesting photos packet going to mux directly
1335385319220: --- Finished one round of sending REQUEST Packet ---------
1335385319282: inside sendRequestPacketTimeoutR, stops Client sending requestPackets
1335385322334: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=3 takeCamGood=3 takeGoodSave=2 takeBad=0 takeTimedout=1 takePercent=66% getNum=3 getGood=1 getBad=2 getTimedout=0 getPercent=33%
1335385322335: inside buttonsEnableProgressUploadTimeoutR. Timed out saving the photo you took.
1335385322351: Inside _enableButtons
1335385322352: areButtonsEnabled --> true
1335385326045: canPressButton = TRUE
1335385326045: areButtonsEnabled --> false 
1335385326046: get picture disableButtonsR
1335385326046: areButtonsEnabled --> false
1335385326065: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=3 takeCamGood=3 takeGoodSave=2 takeBad=0 takeTimedout=1 takePercent=66% getNum=4 getGood=1 getBad=2 getTimedout=0 getPercent=25%
1335385326065: ** Client making GET photo PACKET to send to the leader. Requesting for region: 1 **
1335385326065: change local requestCounter to 12
1335385326066: Client about to send CLIENT_DOWNLOAD_PHOTO packet, REQUEST: 5017012 Client in region: 1 Client nodID: 5017
1335385326100: ----------------------------
1335385326101: inside sendRequestPacketRepeatingRunnable for requestCount = 5017012
1335385326101: I'm a leader, my requesting photos packet going to mux directly
1335385326102: --- Finished one round of sending REQUEST Packet ---------
1335385326402: ----------------------------
1335385326403: inside sendRequestPacketRepeatingRunnable for requestCount = 5017012
1335385326403: I'm a leader, my requesting photos packet going to mux directly
1335385326403: --- Finished one round of sending REQUEST Packet ---------
1335385326704: ----------------------------
1335385326704: inside sendRequestPacketRepeatingRunnable for requestCount = 5017012
1335385326704: I'm a leader, my requesting photos packet going to mux directly
1335385326705: --- Finished one round of sending REQUEST Packet ---------
1335385327005: ----------------------------
1335385327005: inside sendRequestPacketRepeatingRunnable for requestCount = 5017012
1335385327006: I'm a leader, my requesting photos packet going to mux directly
1335385327006: --- Finished one round of sending REQUEST Packet ---------
1335385327066: inside sendRequestPacketTimeoutR, stops Client sending requestPackets
1335385332067: reg=1 id=5017 state=2 regionWidth=20.0 hyst=0.0 takeNum=3 takeCamGood=3 takeGoodSave=2 takeBad=0 takeTimedout=1 takePercent=66% getNum=4 getGood=1 getBad=2 getTimedout=1 getPercent=25%
1335385332068: inside buttonsEnableProgressTimeoutR. Perhaps no one is in that region. Try again later!
1335385332073: Inside _enableButtons
1335385332074: areButtonsEnabled --> true
1335385343608: .......... GPS onLocationChanged ...... 
1335385345048: HI I'm in ONPAUSE()
1335385345788: inside onDestroy()
